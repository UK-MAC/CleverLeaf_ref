<?xml version='1.0' encoding='ISO-8859-1' standalone='yes' ?>
<tagfile>
  <compound kind="page">
    <name>main</name>
    <title>SAMRAI Source Code Documentation</title>
    <filename>main</filename>
    <docanchor file="main">using_samrai_dox</docanchor>
  </compound>
  <compound kind="file">
    <name>manual_femutils.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/dox/</path>
    <filename>manual__femutils_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_hyperbolic.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/dox/</path>
    <filename>manual__hyperbolic_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_implicit.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/dox/</path>
    <filename>manual__implicit_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_method_of_lines.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/dox/</path>
    <filename>manual__method__of__lines_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual_time_refinement.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/dox/</path>
    <filename>manual__time__refinement_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>HyperbolicLevelIntegrator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>HyperbolicLevelIntegrator_8C</filename>
    <includes id="HyperbolicLevelIntegrator_8h" name="HyperbolicLevelIntegrator.h" local="yes" imported="no">SAMRAI/algs/HyperbolicLevelIntegrator.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="HyperbolicLevelIntegrator_8I" name="HyperbolicLevelIntegrator.I" local="yes" imported="no">SAMRAI/algs/HyperbolicLevelIntegrator.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>HyperbolicLevelIntegrator_8C.html</anchorfile>
      <anchor>a0c4b0cd5dbc7a1f19e70321fa61db699</anchor>
      <arglist>(upfluxsum1d, UPFLUXSUM1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HyperbolicLevelIntegrator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>HyperbolicLevelIntegrator_8h</filename>
    <includes id="HyperbolicPatchStrategy_8h" name="HyperbolicPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/HyperbolicPatchStrategy.h</includes>
    <includes id="TimeRefinementLevelStrategy_8h" name="TimeRefinementLevelStrategy.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementLevelStrategy.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <class kind="class">SAMRAI::algs::HyperbolicLevelIntegrator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HLI_RECORD_STATS</name>
      <anchorfile>HyperbolicLevelIntegrator_8h.html</anchorfile>
      <anchor>aa3718894095cb82b78296124afd690d8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HyperbolicLevelIntegrator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>HyperbolicLevelIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>HyperbolicPatchStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>HyperbolicPatchStrategy_8C</filename>
    <includes id="HyperbolicPatchStrategy_8h" name="HyperbolicPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/HyperbolicPatchStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>HyperbolicPatchStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>HyperbolicPatchStrategy_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <class kind="class">SAMRAI::algs::HyperbolicPatchStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitEquationStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>ImplicitEquationStrategy_8C</filename>
    <includes id="ImplicitEquationStrategy_8h" name="ImplicitEquationStrategy.h" local="yes" imported="no">SAMRAI/algs/ImplicitEquationStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitEquationStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>ImplicitEquationStrategy_8h</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::algs::ImplicitEquationStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitIntegrator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>ImplicitIntegrator_8C</filename>
    <includes id="ImplicitIntegrator_8h" name="ImplicitIntegrator.h" local="yes" imported="no">SAMRAI/algs/ImplicitIntegrator.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="ImplicitIntegrator_8I" name="ImplicitIntegrator.I" local="yes" imported="no">SAMRAI/algs/ImplicitIntegrator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitIntegrator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>ImplicitIntegrator_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="ImplicitEquationStrategy_8h" name="ImplicitEquationStrategy.h" local="yes" imported="no">SAMRAI/algs/ImplicitEquationStrategy.h</includes>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="InputDatabase_8h" name="InputDatabase.h" local="yes" imported="no">SAMRAI/tbox/InputDatabase.h</includes>
    <class kind="class">SAMRAI::algs::ImplicitIntegrator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>ImplicitIntegrator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>ImplicitIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MblkPatchBoundaryNodeSum.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MblkPatchBoundaryNodeSum_8C</filename>
    <includes id="MblkPatchBoundaryNodeSum_8h" name="MblkPatchBoundaryNodeSum.h" local="yes" imported="no">SAMRAI/algs/MblkPatchBoundaryNodeSum.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="OuternodeSumTransactionFactory_8h" name="OuternodeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransactionFactory.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="MblkPatchBoundaryNodeSum_8I" name="MblkPatchBoundaryNodeSum.I" local="yes" imported="no">SAMRAI/algs/MblkPatchBoundaryNodeSum.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MblkPatchBoundaryNodeSum.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MblkPatchBoundaryNodeSum_8h</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <class kind="class">SAMRAI::algs::MblkPatchBoundaryNodeSum</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MblkPatchBoundaryNodeSum.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MblkPatchBoundaryNodeSum_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesIntegrator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesIntegrator_8C</filename>
    <includes id="MethodOfLinesIntegrator_8h" name="MethodOfLinesIntegrator.h" local="yes" imported="no">SAMRAI/algs/MethodOfLinesIntegrator.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="MethodOfLinesIntegrator_8I" name="MethodOfLinesIntegrator.I" local="yes" imported="no">SAMRAI/algs/MethodOfLinesIntegrator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesIntegrator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesIntegrator_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="MethodOfLinesPatchStrategy_8h" name="MethodOfLinesPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/MethodOfLinesPatchStrategy.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <class kind="class">SAMRAI::algs::MethodOfLinesIntegrator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesIntegrator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesPatchStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesPatchStrategy_8C</filename>
    <includes id="MethodOfLinesPatchStrategy_8h" name="MethodOfLinesPatchStrategy.h" local="yes" imported="no">SAMRAI/algs/MethodOfLinesPatchStrategy.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>MethodOfLinesPatchStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>MethodOfLinesPatchStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <class kind="class">SAMRAI::algs::MethodOfLinesPatchStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransaction_8C</filename>
    <includes id="OuteredgeSumTransaction_8h" name="OuteredgeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransactionFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransactionFactory_8C</filename>
    <includes id="OuteredgeSumTransactionFactory_8h" name="OuteredgeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransactionFactory.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="OuteredgeSumTransaction_8h" name="OuteredgeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeSumTransactionFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuteredgeSumTransactionFactory_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransactionFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransaction_8C</filename>
    <includes id="OuternodeSumTransaction_8h" name="OuternodeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <class kind="class">SAMRAI::algs::OuternodeSumTransaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransactionFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransactionFactory_8C</filename>
    <includes id="OuternodeSumTransactionFactory_8h" name="OuternodeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransactionFactory.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeSumTransaction_8h" name="OuternodeSumTransaction.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeSumTransactionFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>OuternodeSumTransactionFactory_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <class kind="class">SAMRAI::algs::OuternodeSumTransactionFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryEdgeSum.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryEdgeSum_8C</filename>
    <includes id="PatchBoundaryEdgeSum_8h" name="PatchBoundaryEdgeSum.h" local="yes" imported="no">SAMRAI/algs/PatchBoundaryEdgeSum.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="OuteredgeSumTransactionFactory_8h" name="OuteredgeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuteredgeSumTransactionFactory.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchBoundaryEdgeSum_8I" name="PatchBoundaryEdgeSum.I" local="yes" imported="no">SAMRAI/algs/PatchBoundaryEdgeSum.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryEdgeSum.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryEdgeSum_8h</filename>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="OuteredgeVariable_8h" name="OuteredgeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <class kind="class">SAMRAI::algs::PatchBoundaryEdgeSum</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryEdgeSum.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryEdgeSum_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryNodeSum.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryNodeSum_8C</filename>
    <includes id="PatchBoundaryNodeSum_8h" name="PatchBoundaryNodeSum.h" local="yes" imported="no">SAMRAI/algs/PatchBoundaryNodeSum.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="OuternodeSumTransactionFactory_8h" name="OuternodeSumTransactionFactory.h" local="yes" imported="no">SAMRAI/algs/OuternodeSumTransactionFactory.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchBoundaryNodeSum_8I" name="PatchBoundaryNodeSum.I" local="yes" imported="no">SAMRAI/algs/PatchBoundaryNodeSum.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>PatchBoundaryNodeSum_8C.html</anchorfile>
      <anchor>a93b5228a3288b0feee80305310cb42c2</anchor>
      <arglist>(nodeouternodesum2d, NODEOUTERNODESUM2D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryNodeSum.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryNodeSum_8h</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <class kind="class">SAMRAI::algs::PatchBoundaryNodeSum</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaryNodeSum.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>PatchBoundaryNodeSum_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementIntegrator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>TimeRefinementIntegrator_8C</filename>
    <includes id="TimeRefinementIntegrator_8h" name="TimeRefinementIntegrator.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementIntegrator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TimeRefinementIntegrator_8I" name="TimeRefinementIntegrator.I" local="yes" imported="no">SAMRAI/algs/TimeRefinementIntegrator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementIntegrator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>TimeRefinementIntegrator_8h</filename>
    <includes id="TimeRefinementLevelStrategy_8h" name="TimeRefinementLevelStrategy.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementLevelStrategy.h</includes>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::algs::TimeRefinementIntegrator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementIntegrator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>TimeRefinementIntegrator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementLevelStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>TimeRefinementLevelStrategy_8C</filename>
    <includes id="TimeRefinementLevelStrategy_8h" name="TimeRefinementLevelStrategy.h" local="yes" imported="no">SAMRAI/algs/TimeRefinementLevelStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>TimeRefinementLevelStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/</path>
    <filename>TimeRefinementLevelStrategy_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::algs::TimeRefinementLevelStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryUtilityStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>BoundaryUtilityStrategy_8C</filename>
    <includes id="BoundaryUtilityStrategy_8h" name="BoundaryUtilityStrategy.h" local="yes" imported="no">SAMRAI/appu/BoundaryUtilityStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryUtilityStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>BoundaryUtilityStrategy_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::appu::BoundaryUtilityStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryDefines.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryDefines_8h</filename>
    <namespace>Bdry</namespace>
    <namespace>BdryLoc</namespace>
    <namespace>NodeBdyLoc2D</namespace>
    <namespace>EdgeBdyLoc3D</namespace>
    <namespace>NodeBdyLoc3D</namespace>
    <namespace>BdryCond</namespace>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEFINED</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba362b1042988dd6dd7484015b76e39260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE3D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055abaeb57b9d5db99985835df377908fcb076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE3D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba545ab7e250abb928202f2203c20b96fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE3D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba54acdd9dff31c51ee6a89081fc11ab0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE2D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055abaa919a6a832c4e925fb55a83c4f108d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE2D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba7d837cb077a66a4f6ffc7931f4ac3c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE1D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055abad8671dc28866256b7bfb8ed9c42bf0f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731faa78c4eaddbc1c42cb57180bd33e048a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fae71c4036ad2a69d854d5c69d6d0b8cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa34ce3786af9c194354211381ca79a0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa6d1cbd4a9fef56ddf7d82c7a749e6b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZLO</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa6081b2b1d87a6250c4693eca7100e8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZHI</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa11ed4a34f280d1d9e81a06ceb15b6bae</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1da33c87e68716c8d89ae377eba6cb58179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1daa7a834b68f8fb1237b83fed3880dfa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1da143473cf6922f5f1b8cf8efc3ea1dd33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1da799b7ea5bf0215fbeafd8e1179d1f120</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98ad9841d711e67c982c9d18530a686c439</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98aa7a2d53657ebc05af365a574f52e47bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a858bc2de524df6a256ad3d64c3a95f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98ab6702ca85e79ec8879da70919b5a38ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a4139c928a385ce281d020885217bf443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98ae015c7751e93ef251b01a9403bd6c521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a0f73a91e1adfc6797fb8adfe2d065dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a84c46f5de24d7b4dc66bd0e63cfc87fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a642290223bc0d5e361365a3d7effe29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a1dfd0fa1c55d360c2825adfbd7ad0333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a983023c0858deed6eb4510adf3c2e2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a0f4b1b16a167f59be6f654171c40f8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430adb7f44f4bb8c521da9a5a57b9701e649</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430a4f9ae62a85ca17abdfc916214be2f24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430ad5a9f71ab5d4af29b0f37b0e5a93e418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430a52bc542db4af07afd75c7f009d8d87fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430af9a57422ac02726cc49c4db9ad050811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430ae389544f5613b8034259f6f5304119c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430acf1c2882e773ecc4d2aca9b3524cb18a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430aef851cf60880b04f3e8c4195cac1c395</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada6508d34ee94eaac0aeec4dc93b670224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada3377087764e427bbf84bcf05490fe5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadabcfde2b2403594f3acc9c523b3ccc844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada78ba35a6bdfd280ae3127b910e5778ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XFLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadacf88d17396a28569091ece804b21c567</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YFLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadad1a3e6984bb1f841ee584d9df40cbf3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZFLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadaae2daa9e6bafe5e1cc7dcc81f80680a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XREFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada150739d2a78130a2f916b16de9a4f608</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YREFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada4ccdecd70cf8dd1eb41ff052c58acc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZREFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada14321946cc48a1fc327391914b81b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XDIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada3c9e860dd167dcad173a79acb7dc2262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YDIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadadc65a39ac25197e61295cd71afb73e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZDIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadab46918087847e9a62a2ef539ed9b0f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XNEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada792dfc264a6250ecd84af96348355b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YNEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada74353458cfc99547da62f64c8a49aff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZNEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada3313306e80b3b14d6a333a33bd71e145</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_1D_NODES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>aa6e2e2dd38461bab754a144bf3266da5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_2D_EDGES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>aa3d46b8d7f705c23675178634612d782</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_2D_NODES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>a9ea7ffea38330954e8aee0d78c17f688</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_3D_FACES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>a1c949d9e348c4a18ddfbac3204ac5639</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_3D_EDGES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>a948c1fbc87301dd95e866f5a745300fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NUM_3D_NODES</name>
      <anchorfile>CartesianBoundaryDefines_8h.html</anchorfile>
      <anchor>abb9c7c11c3a12b2d06963ffaebcd3db1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities2.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities2_8C</filename>
    <includes id="CartesianBoundaryUtilities2_8h" name="CartesianBoundaryUtilities2.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryUtilities2.h</includes>
    <includes id="CartesianBoundaryDefines_8h" name="CartesianBoundaryDefines.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryDefines.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianBoundaryUtilities2_8C.html</anchorfile>
      <anchor>af91e1efe6f80793e706da5b0468f98c8</anchor>
      <arglist>(stufcartbdryloc2d, STUFCARTBDRYLOC2D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities2.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities2_8h</filename>
    <includes id="BoundaryUtilityStrategy_8h" name="BoundaryUtilityStrategy.h" local="yes" imported="no">SAMRAI/appu/BoundaryUtilityStrategy.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities2</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities3.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities3_8C</filename>
    <includes id="CartesianBoundaryUtilities3_8h" name="CartesianBoundaryUtilities3.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryUtilities3.h</includes>
    <includes id="CartesianBoundaryDefines_8h" name="CartesianBoundaryDefines.h" local="yes" imported="no">SAMRAI/appu/CartesianBoundaryDefines.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianBoundaryUtilities3_8C.html</anchorfile>
      <anchor>a3a5fa514a47ecc8da1b7c8fbe59212ab</anchor>
      <arglist>(stufcartbdryloc3d, STUFCARTBDRYLOC3D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianBoundaryUtilities3.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>CartesianBoundaryUtilities3_8h</filename>
    <includes id="BoundaryUtilityStrategy_8h" name="BoundaryUtilityStrategy.h" local="yes" imported="no">SAMRAI/appu/BoundaryUtilityStrategy.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities3</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>manual_boundary.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/dox/</path>
    <filename>manual__boundary_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>manual_plotting.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/dox/</path>
    <filename>manual__plotting_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisDerivedDataStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisDerivedDataStrategy_8C</filename>
    <includes id="VisDerivedDataStrategy_8h" name="VisDerivedDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisDerivedDataStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisDerivedDataStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisDerivedDataStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::appu::VisDerivedDataStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisItDataWriter.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisItDataWriter_8C</filename>
    <includes id="VisItDataWriter_8h" name="VisItDataWriter.h" local="yes" imported="no">SAMRAI/appu/VisItDataWriter.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="VisItDataWriter_8I" name="VisItDataWriter.I" local="yes" imported="no">SAMRAI/appu/VisItDataWriter.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>VisItDataWriter_8C.html</anchorfile>
      <anchor>adbfb13c1a93c7b98865cb34a4569fa5f</anchor>
      <arglist>(cpfdat2buf3d, CPFDAT2BUF3D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VisItDataWriter.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisItDataWriter_8h</filename>
    <includes id="VisDerivedDataStrategy_8h" name="VisDerivedDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisDerivedDataStrategy.h</includes>
    <includes id="VisMaterialsDataStrategy_8h" name="VisMaterialsDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisMaterialsDataStrategy.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::appu::VisItDataWriter</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisItDataWriter.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisItDataWriter_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisMaterialsDataStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisMaterialsDataStrategy_8C</filename>
    <includes id="VisMaterialsDataStrategy_8h" name="VisMaterialsDataStrategy.h" local="yes" imported="no">SAMRAI/appu/VisMaterialsDataStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>VisMaterialsDataStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/</path>
    <filename>VisMaterialsDataStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::appu::VisMaterialsDataStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexConservativeLinearRefine_8C</filename>
    <includes id="CartesianCellComplexConservativeLinearRefine_8h" name="CartesianCellComplexConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellComplexConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a10719d7058db6233f36931628d4fc5b8</anchor>
      <arglist>(cartclinrefcellcplx1d, CARTCLINREFCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellComplexConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexLinearRefine_8C</filename>
    <includes id="CartesianCellComplexLinearRefine_8h" name="CartesianCellComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexLinearRefine.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellComplexLinearRefine_8C.html</anchorfile>
      <anchor>a5bdcb62047bccf091e964c493971f905</anchor>
      <arglist>(cartlinrefcellcplx1d, CARTLINREFCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellComplexLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexWeightedAverage_8C</filename>
    <includes id="CartesianCellComplexWeightedAverage_8h" name="CartesianCellComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellComplexWeightedAverage_8C.html</anchorfile>
      <anchor>ab688fac50c8e32d0512707d2d3b7aca8</anchor>
      <arglist>(cartwgtavgcellcplx1d, CARTWGTAVGCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellComplexWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellComplexWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianCellDoubleConservativeLinearRefine_8h" name="CartesianCellDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a3ec648ba0bdaba63ed4771b2b4b6ea5f</anchor>
      <arglist>(cartclinrefcelldoub1d, CARTCLINREFCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleLinearRefine_8C</filename>
    <includes id="CartesianCellDoubleLinearRefine_8h" name="CartesianCellDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellDoubleLinearRefine_8C.html</anchorfile>
      <anchor>a72cb1ea2a1c8f87146b19a2a614bc4ae</anchor>
      <arglist>(cartlinrefcelldoub1d, CARTLINREFCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleWeightedAverage_8C</filename>
    <includes id="CartesianCellDoubleWeightedAverage_8h" name="CartesianCellDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>a966e9162bde3695e58d436e059dad769</anchor>
      <arglist>(cartwgtavgcelldoub1d, CARTWGTAVGCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellDoubleWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianCellFloatConservativeLinearRefine_8h" name="CartesianCellFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a0ab47f2c6360ba87126cdb30b90e4943</anchor>
      <arglist>(cartclinrefcellflot1d, CARTCLINREFCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellFloatConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatLinearRefine_8C</filename>
    <includes id="CartesianCellFloatLinearRefine_8h" name="CartesianCellFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellFloatLinearRefine_8C.html</anchorfile>
      <anchor>ab5deabe430b64ae70013fb1a9ee3395a</anchor>
      <arglist>(cartlinrefcellflot1d, CARTLINREFCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellFloatLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatWeightedAverage_8C</filename>
    <includes id="CartesianCellFloatWeightedAverage_8h" name="CartesianCellFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianCellFloatWeightedAverage_8C.html</anchorfile>
      <anchor>ac2b4ed0a15b2f9b16a8deb65075ced48</anchor>
      <arglist>(cartwgtavgcellflot1d, CARTWGTAVGCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianCellFloatWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianCellFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianCellFloatWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeComplexWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeComplexWeightedAverage_8C</filename>
    <includes id="CartesianEdgeComplexWeightedAverage_8h" name="CartesianEdgeComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeComplexWeightedAverage_8C.html</anchorfile>
      <anchor>a77da8cbd41952acfceab08e71f36be83</anchor>
      <arglist>(cartwgtavgedgecplx1d, CARTWGTAVGEDGECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeComplexWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianEdgeComplexWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianEdgeDoubleConservativeLinearRefine_8h" name="CartesianEdgeDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a7330278a2ab50df4d725ff2526d8125e</anchor>
      <arglist>(cartclinrefedgedoub1d, CARTCLINREFEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleWeightedAverage_8C</filename>
    <includes id="CartesianEdgeDoubleWeightedAverage_8h" name="CartesianEdgeDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>a0264f5299c7e2ac09e4f48536fcb8c67</anchor>
      <arglist>(cartwgtavgedgedoub1d, CARTWGTAVGEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeDoubleWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianEdgeFloatConservativeLinearRefine_8h" name="CartesianEdgeFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>aad5198cfff72dd73a09d6d8295934d02</anchor>
      <arglist>(cartclinrefedgeflot1d, CARTCLINREFEDGEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatWeightedAverage_8C</filename>
    <includes id="CartesianEdgeFloatWeightedAverage_8h" name="CartesianEdgeFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianEdgeFloatWeightedAverage_8C.html</anchorfile>
      <anchor>aee7cdd082b0439f9f2bc6b812eb7f0c0</anchor>
      <arglist>(cartwgtavgedgeflot1d, CARTWGTAVGEDGEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianEdgeFloatWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianEdgeFloatWeightedAverage_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_String</name>
      <anchorfile>CartesianEdgeFloatWeightedAverage_8h.html</anchorfile>
      <anchor>a894e588bab683d3d9a4173684a867cb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceComplexWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceComplexWeightedAverage_8C</filename>
    <includes id="CartesianFaceComplexWeightedAverage_8h" name="CartesianFaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceComplexWeightedAverage_8C.html</anchorfile>
      <anchor>aa2619ca65937c3e5e5d3b9b2042feb69</anchor>
      <arglist>(cartwgtavgfacecplx1d, CARTWGTAVGFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceComplexWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceComplexWeightedAverage_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <class kind="class">SAMRAI::geom::CartesianFaceComplexWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_String</name>
      <anchorfile>CartesianFaceComplexWeightedAverage_8h.html</anchorfile>
      <anchor>a894e588bab683d3d9a4173684a867cb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianFaceDoubleConservativeLinearRefine_8h" name="CartesianFaceDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a4d04f75e8f67c2fb637a4a70392937bf</anchor>
      <arglist>(cartclinreffacedoub1d, CARTCLINREFFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleWeightedAverage_8C</filename>
    <includes id="CartesianFaceDoubleWeightedAverage_8h" name="CartesianFaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>a8e58d98f16a93ce90f49d3faa74226ed</anchor>
      <arglist>(cartwgtavgfacedoub1d, CARTWGTAVGFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceDoubleWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianFaceFloatConservativeLinearRefine_8h" name="CartesianFaceFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>a49f74c7a822cd93f16cf58ab233c4280</anchor>
      <arglist>(cartclinreffaceflot1d, CARTCLINREFFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatWeightedAverage_8C</filename>
    <includes id="CartesianFaceFloatWeightedAverage_8h" name="CartesianFaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianFaceFloatWeightedAverage_8C.html</anchorfile>
      <anchor>a2600905a0f77b506b02e9d028c1f4f6d</anchor>
      <arglist>(cartwgtavgfaceflot1d, CARTWGTAVGFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianFaceFloatWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianFaceFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianGridGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianGridGeometry_8C</filename>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="SAMRAITransferOperatorRegistry_8h" name="SAMRAITransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/geom/SAMRAITransferOperatorRegistry.h</includes>
    <includes id="CartesianCellComplexWeightedAverage_8h" name="CartesianCellComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexWeightedAverage.h</includes>
    <includes id="CartesianCellDoubleWeightedAverage_8h" name="CartesianCellDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleWeightedAverage.h</includes>
    <includes id="CartesianCellFloatWeightedAverage_8h" name="CartesianCellFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatWeightedAverage.h</includes>
    <includes id="CartesianCellComplexConservativeLinearRefine_8h" name="CartesianCellComplexConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexConservativeLinearRefine.h</includes>
    <includes id="CartesianCellComplexLinearRefine_8h" name="CartesianCellComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexLinearRefine.h</includes>
    <includes id="CartesianCellDoubleConservativeLinearRefine_8h" name="CartesianCellDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianCellDoubleLinearRefine_8h" name="CartesianCellDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleLinearRefine.h</includes>
    <includes id="CartesianCellFloatConservativeLinearRefine_8h" name="CartesianCellFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianCellFloatLinearRefine_8h" name="CartesianCellFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatLinearRefine.h</includes>
    <includes id="CellComplexConstantRefine_8h" name="CellComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellComplexConstantRefine.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellFloatConstantRefine_8h" name="CellFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellFloatConstantRefine.h</includes>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="CartesianEdgeComplexWeightedAverage_8h" name="CartesianEdgeComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeComplexWeightedAverage.h</includes>
    <includes id="CartesianEdgeDoubleWeightedAverage_8h" name="CartesianEdgeDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleWeightedAverage.h</includes>
    <includes id="CartesianEdgeFloatWeightedAverage_8h" name="CartesianEdgeFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatWeightedAverage.h</includes>
    <includes id="CartesianEdgeDoubleConservativeLinearRefine_8h" name="CartesianEdgeDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianEdgeFloatConservativeLinearRefine_8h" name="CartesianEdgeFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatConservativeLinearRefine.h</includes>
    <includes id="EdgeComplexConstantRefine_8h" name="EdgeComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexConstantRefine.h</includes>
    <includes id="EdgeDoubleConstantRefine_8h" name="EdgeDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleConstantRefine.h</includes>
    <includes id="EdgeFloatConstantRefine_8h" name="EdgeFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatConstantRefine.h</includes>
    <includes id="EdgeIntegerConstantRefine_8h" name="EdgeIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeIntegerConstantRefine.h</includes>
    <includes id="CartesianFaceComplexWeightedAverage_8h" name="CartesianFaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceComplexWeightedAverage.h</includes>
    <includes id="CartesianFaceDoubleWeightedAverage_8h" name="CartesianFaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianFaceFloatWeightedAverage_8h" name="CartesianFaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatWeightedAverage.h</includes>
    <includes id="CartesianFaceDoubleConservativeLinearRefine_8h" name="CartesianFaceDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianFaceFloatConservativeLinearRefine_8h" name="CartesianFaceFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatConservativeLinearRefine.h</includes>
    <includes id="FaceComplexConstantRefine_8h" name="FaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexConstantRefine.h</includes>
    <includes id="FaceDoubleConstantRefine_8h" name="FaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleConstantRefine.h</includes>
    <includes id="FaceFloatConstantRefine_8h" name="FaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatConstantRefine.h</includes>
    <includes id="FaceIntegerConstantRefine_8h" name="FaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceIntegerConstantRefine.h</includes>
    <includes id="NodeComplexInjection_8h" name="NodeComplexInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexInjection.h</includes>
    <includes id="NodeDoubleInjection_8h" name="NodeDoubleInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleInjection.h</includes>
    <includes id="NodeFloatInjection_8h" name="NodeFloatInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatInjection.h</includes>
    <includes id="NodeIntegerInjection_8h" name="NodeIntegerInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeIntegerInjection.h</includes>
    <includes id="CartesianNodeComplexLinearRefine_8h" name="CartesianNodeComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeComplexLinearRefine.h</includes>
    <includes id="CartesianNodeDoubleLinearRefine_8h" name="CartesianNodeDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeDoubleLinearRefine.h</includes>
    <includes id="CartesianNodeFloatLinearRefine_8h" name="CartesianNodeFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeFloatLinearRefine.h</includes>
    <includes id="CartesianOuterfaceComplexWeightedAverage_8h" name="CartesianOuterfaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceComplexWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceDoubleWeightedAverage_8h" name="CartesianOuterfaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceFloatWeightedAverage_8h" name="CartesianOuterfaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceFloatWeightedAverage.h</includes>
    <includes id="OuterfaceComplexConstantRefine_8h" name="OuterfaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexConstantRefine.h</includes>
    <includes id="OuterfaceDoubleConstantRefine_8h" name="OuterfaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleConstantRefine.h</includes>
    <includes id="OuterfaceFloatConstantRefine_8h" name="OuterfaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatConstantRefine.h</includes>
    <includes id="OuterfaceIntegerConstantRefine_8h" name="OuterfaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceIntegerConstantRefine.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="CartesianOutersideDoubleWeightedAverage_8h" name="CartesianOutersideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOutersideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideComplexWeightedAverage_8h" name="CartesianSideComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideComplexWeightedAverage.h</includes>
    <includes id="CartesianSideDoubleWeightedAverage_8h" name="CartesianSideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideFloatWeightedAverage_8h" name="CartesianSideFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatWeightedAverage.h</includes>
    <includes id="CartesianSideDoubleConservativeLinearRefine_8h" name="CartesianSideDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianSideFloatConservativeLinearRefine_8h" name="CartesianSideFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatConservativeLinearRefine.h</includes>
    <includes id="SideComplexConstantRefine_8h" name="SideComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideComplexConstantRefine.h</includes>
    <includes id="SideDoubleConstantRefine_8h" name="SideDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleConstantRefine.h</includes>
    <includes id="SideFloatConstantRefine_8h" name="SideFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideFloatConstantRefine.h</includes>
    <includes id="SideIntegerConstantRefine_8h" name="SideIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideIntegerConstantRefine.h</includes>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeComplexLinearTimeInterpolateOp_8h" name="EdgeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeDoubleLinearTimeInterpolateOp_8h" name="EdgeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeFloatLinearTimeInterpolateOp_8h" name="EdgeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="CartesianGridGeometry_8I" name="CartesianGridGeometry.I" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianGridGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianGridGeometry_8h</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <class kind="class">SAMRAI::geom::CartesianGridGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianGridGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianGridGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianNodeComplexLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianNodeComplexLinearRefine_8C</filename>
    <includes id="CartesianNodeComplexLinearRefine_8h" name="CartesianNodeComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeComplexLinearRefine.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianNodeComplexLinearRefine_8C.html</anchorfile>
      <anchor>ab34f68a06e5aa7d77e182e6c2dd5826b</anchor>
      <arglist>(cartlinrefnodecplx1d, CARTLINREFNODECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianNodeComplexLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianNodeComplexLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianNodeComplexLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianNodeDoubleLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianNodeDoubleLinearRefine_8C</filename>
    <includes id="CartesianNodeDoubleLinearRefine_8h" name="CartesianNodeDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeDoubleLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianNodeDoubleLinearRefine_8C.html</anchorfile>
      <anchor>a22f221054d88b0cd089eeeb4dd7771ca</anchor>
      <arglist>(cartlinrefnodedoub1d, CARTLINREFNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianNodeDoubleLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianNodeDoubleLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianNodeDoubleLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianNodeFloatLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianNodeFloatLinearRefine_8C</filename>
    <includes id="CartesianNodeFloatLinearRefine_8h" name="CartesianNodeFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeFloatLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianNodeFloatLinearRefine_8C.html</anchorfile>
      <anchor>afa47a3a5e3efc0401692185510ab49d6</anchor>
      <arglist>(cartlinrefnodeflot1d, CARTLINREFNODEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianNodeFloatLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianNodeFloatLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianNodeFloatLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceComplexWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceComplexWeightedAverage_8C</filename>
    <includes id="CartesianOuterfaceComplexWeightedAverage_8h" name="CartesianOuterfaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOuterfaceComplexWeightedAverage_8C.html</anchorfile>
      <anchor>a3bd960e0ff02cbe9c768b85aa3f63d4e</anchor>
      <arglist>(cartwgtavgoutfacecplx1d, CARTWGTAVGOUTFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceComplexWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceComplexWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceDoubleWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceDoubleWeightedAverage_8C</filename>
    <includes id="CartesianOuterfaceDoubleWeightedAverage_8h" name="CartesianOuterfaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOuterfaceDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>a2208575632ebb25a5865d2f7881f687e</anchor>
      <arglist>(cartwgtavgoutfacedoub1d, CARTWGTAVGOUTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceDoubleWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceDoubleWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceFloatWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceFloatWeightedAverage_8C</filename>
    <includes id="CartesianOuterfaceFloatWeightedAverage_8h" name="CartesianOuterfaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOuterfaceFloatWeightedAverage_8C.html</anchorfile>
      <anchor>af015a41228797acdd32b254c2b9f638f</anchor>
      <arglist>(cartwgtavgoutfaceflot1d, CARTWGTAVGOUTFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOuterfaceFloatWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOuterfaceFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceFloatWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianOutersideDoubleWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOutersideDoubleWeightedAverage_8C</filename>
    <includes id="CartesianOutersideDoubleWeightedAverage_8h" name="CartesianOutersideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOutersideDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianOutersideDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>abcd7c3fd740e2e821ac5dfa21ac59d64</anchor>
      <arglist>(cartwgtavgoutsidedoub1d, CARTWGTAVGOUTSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianOutersideDoubleWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianOutersideDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianOutersideDoubleWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianPatchGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianPatchGeometry_8C</filename>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CartesianPatchGeometry_8I" name="CartesianPatchGeometry.I" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianPatchGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianPatchGeometry_8h</filename>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <class kind="class">SAMRAI::geom::CartesianPatchGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianPatchGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianPatchGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianSideComplexWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideComplexWeightedAverage_8C</filename>
    <includes id="CartesianSideComplexWeightedAverage_8h" name="CartesianSideComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideComplexWeightedAverage.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideComplexWeightedAverage_8C.html</anchorfile>
      <anchor>a1f598dd0a9c03497a4798f29bc0fc0a1</anchor>
      <arglist>(cartwgtavgsidecplx1d, CARTWGTAVGSIDECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideComplexWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideComplexWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianSideComplexWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleConservativeLinearRefine_8C</filename>
    <includes id="CartesianSideDoubleConservativeLinearRefine_8h" name="CartesianSideDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideDoubleConservativeLinearRefine_8C.html</anchorfile>
      <anchor>ad0a4ee6658d64fa374a3dbf6e17d2a15</anchor>
      <arglist>(cartclinrefsidedoub1d, CARTCLINREFSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleWeightedAverage_8C</filename>
    <includes id="CartesianSideDoubleWeightedAverage_8h" name="CartesianSideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideDoubleWeightedAverage_8C.html</anchorfile>
      <anchor>aae59618494886a7c9d919dce36c70948</anchor>
      <arglist>(cartwgtavgsidedoub1d, CARTWGTAVGSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideDoubleWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideDoubleWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatConservativeLinearRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatConservativeLinearRefine_8C</filename>
    <includes id="CartesianSideFloatConservativeLinearRefine_8h" name="CartesianSideFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideFloatConservativeLinearRefine_8C.html</anchorfile>
      <anchor>ae0c20413071d1473f493be49482f90ed</anchor>
      <arglist>(cartclinrefsideflot1d, CARTCLINREFSIDEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatConservativeLinearRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatConservativeLinearRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianSideFloatConservativeLinearRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatWeightedAverage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatWeightedAverage_8C</filename>
    <includes id="CartesianSideFloatWeightedAverage_8h" name="CartesianSideFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatWeightedAverage.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianSideFloatWeightedAverage_8C.html</anchorfile>
      <anchor>aad811f4cce34c9581cba903b1495dc94</anchor>
      <arglist>(cartwgtavgsideflot1d, CARTWGTAVGSIDEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianSideFloatWeightedAverage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>CartesianSideFloatWeightedAverage_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::CartesianSideFloatWeightedAverage</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_grid_geom.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__grid__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_operators_cell.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__operators__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_operators_fortran.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__operators__fortran_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cartesian_patch_geom.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__cartesian__patch__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton_grid_geom.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton__grid__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton_operators.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton__operators_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual_skeleton_patch_geom.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>manual__skeleton__patch__geom_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAITransferOperatorRegistry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SAMRAITransferOperatorRegistry_8C</filename>
    <includes id="SAMRAITransferOperatorRegistry_8h" name="SAMRAITransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/geom/SAMRAITransferOperatorRegistry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="NodeComplexInjection_8h" name="NodeComplexInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexInjection.h</includes>
    <includes id="NodeDoubleInjection_8h" name="NodeDoubleInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleInjection.h</includes>
    <includes id="NodeFloatInjection_8h" name="NodeFloatInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatInjection.h</includes>
    <includes id="NodeIntegerInjection_8h" name="NodeIntegerInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeIntegerInjection.h</includes>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="CellComplexConstantRefine_8h" name="CellComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellComplexConstantRefine.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellFloatConstantRefine_8h" name="CellFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellFloatConstantRefine.h</includes>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="EdgeComplexConstantRefine_8h" name="EdgeComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexConstantRefine.h</includes>
    <includes id="EdgeDoubleConstantRefine_8h" name="EdgeDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleConstantRefine.h</includes>
    <includes id="EdgeFloatConstantRefine_8h" name="EdgeFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatConstantRefine.h</includes>
    <includes id="EdgeIntegerConstantRefine_8h" name="EdgeIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeIntegerConstantRefine.h</includes>
    <includes id="FaceComplexConstantRefine_8h" name="FaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexConstantRefine.h</includes>
    <includes id="FaceDoubleConstantRefine_8h" name="FaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleConstantRefine.h</includes>
    <includes id="FaceFloatConstantRefine_8h" name="FaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatConstantRefine.h</includes>
    <includes id="FaceIntegerConstantRefine_8h" name="FaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceIntegerConstantRefine.h</includes>
    <includes id="OuterfaceComplexConstantRefine_8h" name="OuterfaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexConstantRefine.h</includes>
    <includes id="OuterfaceDoubleConstantRefine_8h" name="OuterfaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleConstantRefine.h</includes>
    <includes id="OuterfaceFloatConstantRefine_8h" name="OuterfaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatConstantRefine.h</includes>
    <includes id="OuterfaceIntegerConstantRefine_8h" name="OuterfaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceIntegerConstantRefine.h</includes>
    <includes id="SideComplexConstantRefine_8h" name="SideComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideComplexConstantRefine.h</includes>
    <includes id="SideDoubleConstantRefine_8h" name="SideDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleConstantRefine.h</includes>
    <includes id="SideFloatConstantRefine_8h" name="SideFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideFloatConstantRefine.h</includes>
    <includes id="SideIntegerConstantRefine_8h" name="SideIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideIntegerConstantRefine.h</includes>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeComplexLinearTimeInterpolateOp_8h" name="EdgeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeDoubleLinearTimeInterpolateOp_8h" name="EdgeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="EdgeFloatLinearTimeInterpolateOp_8h" name="EdgeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="CartesianCellComplexWeightedAverage_8h" name="CartesianCellComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexWeightedAverage.h</includes>
    <includes id="CartesianCellDoubleWeightedAverage_8h" name="CartesianCellDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleWeightedAverage.h</includes>
    <includes id="CartesianCellFloatWeightedAverage_8h" name="CartesianCellFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatWeightedAverage.h</includes>
    <includes id="CartesianEdgeComplexWeightedAverage_8h" name="CartesianEdgeComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeComplexWeightedAverage.h</includes>
    <includes id="CartesianEdgeDoubleWeightedAverage_8h" name="CartesianEdgeDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleWeightedAverage.h</includes>
    <includes id="CartesianEdgeFloatWeightedAverage_8h" name="CartesianEdgeFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatWeightedAverage.h</includes>
    <includes id="CartesianFaceComplexWeightedAverage_8h" name="CartesianFaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceComplexWeightedAverage.h</includes>
    <includes id="CartesianFaceDoubleWeightedAverage_8h" name="CartesianFaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianFaceFloatWeightedAverage_8h" name="CartesianFaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceComplexWeightedAverage_8h" name="CartesianOuterfaceComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceComplexWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceDoubleWeightedAverage_8h" name="CartesianOuterfaceDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceDoubleWeightedAverage.h</includes>
    <includes id="CartesianOuterfaceFloatWeightedAverage_8h" name="CartesianOuterfaceFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOuterfaceFloatWeightedAverage.h</includes>
    <includes id="CartesianOutersideDoubleWeightedAverage_8h" name="CartesianOutersideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianOutersideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideComplexWeightedAverage_8h" name="CartesianSideComplexWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideComplexWeightedAverage.h</includes>
    <includes id="CartesianSideDoubleWeightedAverage_8h" name="CartesianSideDoubleWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleWeightedAverage.h</includes>
    <includes id="CartesianSideFloatWeightedAverage_8h" name="CartesianSideFloatWeightedAverage.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatWeightedAverage.h</includes>
    <includes id="SkeletonCoarsen_8h" name="SkeletonCoarsen.h" local="yes" imported="no">SAMRAI/geom/SkeletonCoarsen.h</includes>
    <includes id="CartesianCellComplexConservativeLinearRefine_8h" name="CartesianCellComplexConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexConservativeLinearRefine.h</includes>
    <includes id="CartesianCellDoubleConservativeLinearRefine_8h" name="CartesianCellDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianCellFloatConservativeLinearRefine_8h" name="CartesianCellFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianEdgeDoubleConservativeLinearRefine_8h" name="CartesianEdgeDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianEdgeFloatConservativeLinearRefine_8h" name="CartesianEdgeFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianEdgeFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianFaceDoubleConservativeLinearRefine_8h" name="CartesianFaceDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianFaceFloatConservativeLinearRefine_8h" name="CartesianFaceFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianFaceFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianSideDoubleConservativeLinearRefine_8h" name="CartesianSideDoubleConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideDoubleConservativeLinearRefine.h</includes>
    <includes id="CartesianSideFloatConservativeLinearRefine_8h" name="CartesianSideFloatConservativeLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianSideFloatConservativeLinearRefine.h</includes>
    <includes id="CartesianCellComplexLinearRefine_8h" name="CartesianCellComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellComplexLinearRefine.h</includes>
    <includes id="CartesianCellDoubleLinearRefine_8h" name="CartesianCellDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellDoubleLinearRefine.h</includes>
    <includes id="CartesianCellFloatLinearRefine_8h" name="CartesianCellFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianCellFloatLinearRefine.h</includes>
    <includes id="CartesianNodeComplexLinearRefine_8h" name="CartesianNodeComplexLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeComplexLinearRefine.h</includes>
    <includes id="CartesianNodeDoubleLinearRefine_8h" name="CartesianNodeDoubleLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeDoubleLinearRefine.h</includes>
    <includes id="CartesianNodeFloatLinearRefine_8h" name="CartesianNodeFloatLinearRefine.h" local="yes" imported="no">SAMRAI/geom/CartesianNodeFloatLinearRefine.h</includes>
    <includes id="SkeletonRefine_8h" name="SkeletonRefine.h" local="yes" imported="no">SAMRAI/geom/SkeletonRefine.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAITransferOperatorRegistry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SAMRAITransferOperatorRegistry_8h</filename>
    <includes id="TransferOperatorRegistry_8h" name="TransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/hier/TransferOperatorRegistry.h</includes>
    <class kind="class">SAMRAI::geom::SAMRAITransferOperatorRegistry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonCoarsen.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonCoarsen_8C</filename>
    <includes id="SkeletonCoarsen_8h" name="SkeletonCoarsen.h" local="yes" imported="no">SAMRAI/geom/SkeletonCoarsen.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonCoarsen.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonCoarsen_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::SkeletonCoarsen</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonGridGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonGridGeometry_8C</filename>
    <includes id="SkeletonGridGeometry_8h" name="SkeletonGridGeometry.h" local="yes" imported="no">SAMRAI/geom/SkeletonGridGeometry.h</includes>
    <includes id="SkeletonPatchGeometry_8h" name="SkeletonPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/SkeletonPatchGeometry.h</includes>
    <includes id="SAMRAITransferOperatorRegistry_8h" name="SAMRAITransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/geom/SAMRAITransferOperatorRegistry.h</includes>
    <includes id="SkeletonCoarsen_8h" name="SkeletonCoarsen.h" local="yes" imported="no">SAMRAI/geom/SkeletonCoarsen.h</includes>
    <includes id="SkeletonRefine_8h" name="SkeletonRefine.h" local="yes" imported="no">SAMRAI/geom/SkeletonRefine.h</includes>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonGridGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonGridGeometry_8h</filename>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <class kind="class">SAMRAI::geom::SkeletonGridGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonPatchGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonPatchGeometry_8C</filename>
    <includes id="SkeletonPatchGeometry_8h" name="SkeletonPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/SkeletonPatchGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonPatchGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonPatchGeometry_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <class kind="class">SAMRAI::geom::SkeletonPatchGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonRefine_8C</filename>
    <includes id="SkeletonRefine_8h" name="SkeletonRefine.h" local="yes" imported="no">SAMRAI/geom/SkeletonRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>SkeletonRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/</path>
    <filename>SkeletonRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::geom::SkeletonRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>BaseConnectorAlgorithm.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BaseConnectorAlgorithm_8C</filename>
    <includes id="BaseConnectorAlgorithm_8h" name="BaseConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/BaseConnectorAlgorithm.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BaseConnectorAlgorithm.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BaseConnectorAlgorithm_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <class kind="class">SAMRAI::hier::BaseConnectorAlgorithm</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BlockId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BlockId_8C</filename>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="BlockId_8I" name="BlockId.I" local="yes" imported="no">SAMRAI/hier/BlockId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a34f9afb834e68bf69a8c3028b15c7829</anchor>
      <arglist>(std::ostream &amp;co, const BlockId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BlockId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BlockId_8h</filename>
    <class kind="class">SAMRAI::hier::BlockId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BlockId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BlockId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBox.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryBox_8C</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="BoundaryBox_8I" name="BoundaryBox.I" local="yes" imported="no">SAMRAI/hier/BoundaryBox.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBox.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryBox_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <class kind="class">SAMRAI::hier::BoundaryBox</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBox.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryBox_8I</filename>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBoxUtils.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryBoxUtils_8C</filename>
    <includes id="BoundaryBoxUtils_8h" name="BoundaryBoxUtils.h" local="yes" imported="no">SAMRAI/hier/BoundaryBoxUtils.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryBoxUtils.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryBoxUtils_8h</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <class kind="class">SAMRAI::hier::BoundaryBoxUtils</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryLookupTable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryLookupTable_8C</filename>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="BoundaryLookupTable_8I" name="BoundaryLookupTable.I" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryLookupTable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryLookupTable_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <class kind="class">SAMRAI::hier::BoundaryLookupTable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoundaryLookupTable.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoundaryLookupTable_8I</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Box.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Box_8C</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Box_8I" name="Box.I" local="yes" imported="no">SAMRAI/hier/Box.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a96908bbe9494aa74292d13972ee0d4f9</anchor>
      <arglist>(std::istream &amp;s, Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a94bbae049793f3f0097e00d74888dd83</anchor>
      <arglist>(std::ostream &amp;s, const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Box.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Box_8h</filename>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <class kind="class">SAMRAI::hier::Box</class>
    <class kind="struct">SAMRAI::hier::Box::id_equal</class>
    <class kind="struct">SAMRAI::hier::Box::id_less</class>
    <class kind="struct">SAMRAI::hier::Box::box_equality</class>
    <class kind="class">SAMRAI::hier::BoxIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Box.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Box_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainer_8C</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="BoxContainer_8I" name="BoxContainer.I" local="yes" imported="no">SAMRAI/hier/BoxContainer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type></type>
      <name>BoxContainer::operator tbox::Array&lt; tbox::DatabaseBox &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ae2fa3ea63715279801abaaa4161e138d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a86317125df6c2eb65553d25794c3b9d4</anchor>
      <arglist>(std::ostream &amp;s, const BoxContainer::Outputter &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoxContainer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainer_8h</filename>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <class kind="class">SAMRAI::hier::BoxContainer</class>
    <class kind="class">SAMRAI::hier::BoxContainer::Outputter</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainer_8I</filename>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerConstIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerConstIterator_8C</filename>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8I" name="BoxContainerConstIterator.I" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerConstIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerConstIterator_8h</filename>
    <class kind="class">SAMRAI::hier::BoxContainerConstIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerConstIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerConstIterator_8I</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerIterator_8C</filename>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerIterator_8I" name="BoxContainerIterator.I" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerIterator_8h</filename>
    <class kind="class">SAMRAI::hier::BoxContainerIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerIterator_8I</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleBlockIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleBlockIterator_8C</filename>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleBlockIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleBlockIterator_8h</filename>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <class kind="class">SAMRAI::hier::BoxContainerSingleBlockIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleOwnerIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleOwnerIterator_8C</filename>
    <includes id="BoxContainerSingleOwnerIterator_8h" name="BoxContainerSingleOwnerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleOwnerIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerSingleOwnerIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerSingleOwnerIterator_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <class kind="class">SAMRAI::hier::BoxContainerSingleOwnerIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerUtils.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerUtils_8C</filename>
    <includes id="BoxContainerUtils_8h" name="BoxContainerUtils.h" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxContainerUtils_8I" name="BoxContainerUtils.I" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerUtils.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerUtils_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <class kind="class">SAMRAI::hier::BoxContainerUtils</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxContainerUtils.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxContainerUtils_8I</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxGeometry_8C</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxGeometry_8I" name="BoxGeometry.I" local="yes" imported="no">SAMRAI/hier/BoxGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxGeometry_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::BoxGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxGeometry_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxId_8C</filename>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="BoxId_8I" name="BoxId.I" local="yes" imported="no">SAMRAI/hier/BoxId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a7c43cd076078a23374298b48a3f5a520</anchor>
      <arglist>(std::ostream &amp;co, const BoxId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoxId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxId_8h</filename>
    <includes id="GlobalId_8h" name="GlobalId.h" local="yes" imported="no">SAMRAI/hier/GlobalId.h</includes>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="PeriodicId_8h" name="PeriodicId.h" local="yes" imported="no">SAMRAI/hier/PeriodicId.h</includes>
    <class kind="class">SAMRAI::hier::BoxId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxId_8I</filename>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxIOUtility.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxIOUtility_8C</filename>
    <includes id="BoxIOUtility_8h" name="BoxIOUtility.h" local="yes" imported="no">SAMRAI/hier/BoxIOUtility.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxIOUtility.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxIOUtility_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::BoxIOUtility</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevel.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevel_8C</filename>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxLevel_8I" name="BoxLevel.I" local="yes" imported="no">SAMRAI/hier/BoxLevel.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>afb52c7cb40bb763aa515f75b49db60dc</anchor>
      <arglist>(std::ostream &amp;s, const BoxLevel::Outputter &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BoxLevel.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevel_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PersistentOverlapConnectors_8h" name="PersistentOverlapConnectors.h" local="yes" imported="no">SAMRAI/hier/PersistentOverlapConnectors.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="ConstPointer_8h" name="ConstPointer.h" local="yes" imported="no">SAMRAI/tbox/ConstPointer.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::hier::BoxLevel</class>
    <class kind="class">SAMRAI::hier::BoxLevel::Outputter</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevel.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevel_8I</filename>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerSingleOwnerIterator_8h" name="BoxContainerSingleOwnerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleOwnerIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelConnectorUtils.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelConnectorUtils_8C</filename>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="BoxLevelConnectorUtils_8I" name="BoxLevelConnectorUtils.I" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelConnectorUtils.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelConnectorUtils_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <class kind="class">SAMRAI::hier::BoxLevelConnectorUtils</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelConnectorUtils.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelConnectorUtils_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelHandle.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelHandle_8C</filename>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelHandle.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelHandle_8h</filename>
    <class kind="class">SAMRAI::hier::BoxLevelHandle</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelStatistics.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelStatistics_8C</filename>
    <includes id="BoxLevelStatistics_8h" name="BoxLevelStatistics.h" local="yes" imported="no">SAMRAI/hier/BoxLevelStatistics.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxLevelStatistics.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxLevelStatistics_8h</filename>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <class kind="class">SAMRAI::hier::BoxLevelStatistics</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxNeighborhoodCollection.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxNeighborhoodCollection_8C</filename>
    <includes id="BoxNeighborhoodCollection_8h" name="BoxNeighborhoodCollection.h" local="yes" imported="no">SAMRAI/hier/BoxNeighborhoodCollection.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="BoxNeighborhoodCollection_8I" name="BoxNeighborhoodCollection.I" local="yes" imported="no">SAMRAI/hier/BoxNeighborhoodCollection.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxNeighborhoodCollection.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxNeighborhoodCollection_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::Iterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstNeighborIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::NeighborIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxNeighborhoodCollection.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxNeighborhoodCollection_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxOverlap.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxOverlap_8C</filename>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="BoxOverlap_8I" name="BoxOverlap.I" local="yes" imported="no">SAMRAI/hier/BoxOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxOverlap.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxOverlap_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <class kind="class">SAMRAI::hier::BoxOverlap</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxOverlap.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxOverlap_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxTree.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxTree_8C</filename>
    <includes id="BoxTree_8h" name="BoxTree.h" local="yes" imported="no">SAMRAI/hier/BoxTree.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxTree.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxTree_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::hier::BoxTree</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxUtilities.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxUtilities_8C</filename>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>BoxUtilities.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>BoxUtilities_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <class kind="struct">SAMRAI::hier::BoxUtilities</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarseFineBoundary.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>CoarseFineBoundary_8C</filename>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarseFineBoundary.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>CoarseFineBoundary_8h</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <class kind="class">SAMRAI::hier::CoarseFineBoundary</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenOperator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>CoarsenOperator_8C</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="CoarsenOperator_8I" name="CoarsenOperator.I" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenOperator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>CoarsenOperator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::CoarsenOperator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenOperator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>CoarsenOperator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ComponentSelector.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ComponentSelector_8C</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="ComponentSelector_8I" name="ComponentSelector.I" local="yes" imported="no">SAMRAI/hier/ComponentSelector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ComponentSelector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ComponentSelector_8h</filename>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <class kind="class">SAMRAI::hier::ComponentSelector</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ComponentSelector.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ComponentSelector_8I</filename>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Connector.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Connector_8C</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Connector_8I" name="Connector.I" local="yes" imported="no">SAMRAI/hier/Connector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ac751e548574bfef193d039e55d29d7b8</anchor>
      <arglist>(std::ostream &amp;os, const Connector::Outputter &amp;format)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>dbgbord</name>
      <anchorfile>Connector_8C.html</anchorfile>
      <anchor>a10cf21c27a9dc8f68e51acf656f3ab5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Connector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Connector_8h</filename>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxNeighborhoodCollection_8h" name="BoxNeighborhoodCollection.h" local="yes" imported="no">SAMRAI/hier/BoxNeighborhoodCollection.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::hier::Connector</class>
    <class kind="class">SAMRAI::hier::Connector::Outputter</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Connector.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Connector_8I</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevelHandle_8h" name="BoxLevelHandle.h" local="yes" imported="no">SAMRAI/hier/BoxLevelHandle.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ConnectorStatistics.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ConnectorStatistics_8C</filename>
    <includes id="ConnectorStatistics_8h" name="ConnectorStatistics.h" local="yes" imported="no">SAMRAI/hier/ConnectorStatistics.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ConnectorStatistics.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ConnectorStatistics_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <class kind="class">SAMRAI::hier::ConnectorStatistics</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_boxes.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/dox/</path>
    <filename>manual__boxes_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_dlbg.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/dox/</path>
    <filename>manual__dlbg_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_patches.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/dox/</path>
    <filename>manual__patches_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_transfer_interfaces.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/dox/</path>
    <filename>manual__transfer__interfaces_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual_variables.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/dox/</path>
    <filename>manual__variables_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ErrorCheckIntTypes.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ErrorCheckIntTypes_8h</filename>
    <class kind="struct">SAMRAI::hier::PatchNumber</class>
    <class kind="struct">SAMRAI::hier::LevelNumber</class>
    <class kind="struct">SAMRAI::hier::PatchDataId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>GlobalId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>GlobalId_8C</filename>
    <includes id="GlobalId_8h" name="GlobalId.h" local="yes" imported="no">SAMRAI/hier/GlobalId.h</includes>
    <includes id="GlobalId_8I" name="GlobalId.I" local="yes" imported="no">SAMRAI/hier/GlobalId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>aa00c2b7e87fbeb350b37dc5ff7421008</anchor>
      <arglist>(std::ostream &amp;co, const GlobalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlobalId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>GlobalId_8h</filename>
    <includes id="LocalId_8h" name="LocalId.h" local="yes" imported="no">SAMRAI/hier/LocalId.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <class kind="class">SAMRAI::hier::GlobalId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>GlobalId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>GlobalId_8I</filename>
    <includes id="GlobalId_8h" name="GlobalId.h" local="yes" imported="no">SAMRAI/hier/GlobalId.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>GridGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>GridGeometry_8C</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="BoxTree_8h" name="BoxTree.h" local="yes" imported="no">SAMRAI/hier/BoxTree.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="GridGeometry_8I" name="GridGeometry.I" local="yes" imported="no">SAMRAI/hier/GridGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="define">
      <type>#define</type>
      <name>HIER_GRID_GEOMETRY_VERSION</name>
      <anchorfile>GridGeometry_8C.html</anchorfile>
      <anchor>a31f3aeda745df40455c8d1c89b82fbc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GridGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>GridGeometry_8h</filename>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="TransferOperatorRegistry_8h" name="TransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/hier/TransferOperatorRegistry.h</includes>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <class kind="class">SAMRAI::hier::GridGeometry</class>
    <class kind="class">SAMRAI::hier::GridGeometry::Neighbor</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>GridGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>GridGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Index.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Index_8C</filename>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Index_8I" name="Index.I" local="yes" imported="no">SAMRAI/hier/Index.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Index.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Index_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <class kind="class">SAMRAI::hier::Index</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Index.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Index_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>IntVector.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>IntVector_8C</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IntVector_8I" name="IntVector.I" local="yes" imported="no">SAMRAI/hier/IntVector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a161b01d3d8a05603f40678e2d95e25bb</anchor>
      <arglist>(std::istream &amp;s, IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>aa309443486df112fdfac155615a9c180</anchor>
      <arglist>(std::ostream &amp;s, const IntVector &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>IntVector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>IntVector_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <class kind="class">SAMRAI::hier::IntVector</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>IntVector.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>IntVector_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>LocalId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>LocalId_8C</filename>
    <includes id="LocalId_8h" name="LocalId.h" local="yes" imported="no">SAMRAI/hier/LocalId.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="LocalId_8I" name="LocalId.I" local="yes" imported="no">SAMRAI/hier/LocalId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a3da43f9884e66e17a08572f15e3d235c</anchor>
      <arglist>(std::ostream &amp;co, const LocalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LocalId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>LocalId_8h</filename>
    <class kind="class">SAMRAI::hier::LocalId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>LocalId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>LocalId_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MappingConnectorAlgorithm.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>MappingConnectorAlgorithm_8C</filename>
    <includes id="BoxContainerUtils_8h" name="BoxContainerUtils.h" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MappingConnectorAlgorithm.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>MappingConnectorAlgorithm_8h</filename>
    <includes id="BaseConnectorAlgorithm_8h" name="BaseConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/BaseConnectorAlgorithm.h</includes>
    <class kind="class">SAMRAI::hier::MappingConnectorAlgorithm</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockBoxTree.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>MultiblockBoxTree_8C</filename>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockBoxTree.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>MultiblockBoxTree_8h</filename>
    <includes id="BoxTree_8h" name="BoxTree.h" local="yes" imported="no">SAMRAI/hier/BoxTree.h</includes>
    <includes id="ConstPointer_8h" name="ConstPointer.h" local="yes" imported="no">SAMRAI/tbox/ConstPointer.h</includes>
    <class kind="class">SAMRAI::hier::MultiblockBoxTree</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockDataTranslator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>MultiblockDataTranslator_8C</filename>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockDataTranslator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>MultiblockDataTranslator_8h</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <class kind="class">SAMRAI::hier::MultiblockDataTranslator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>NeighborhoodSet.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>NeighborhoodSet_8C</filename>
    <includes id="NeighborhoodSet_8h" name="NeighborhoodSet.h" local="yes" imported="no">SAMRAI/hier/NeighborhoodSet.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NeighborhoodSet_8I" name="NeighborhoodSet.I" local="yes" imported="no">SAMRAI/hier/NeighborhoodSet.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ab7b28faca76984d238f84e563712cac5</anchor>
      <arglist>(std::ostream &amp;s, const NeighborhoodSet::Outputter &amp;format)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NeighborhoodSet.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>NeighborhoodSet_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxId_8h" name="BoxId.h" local="yes" imported="no">SAMRAI/hier/BoxId.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::hier::NeighborhoodSet</class>
    <class kind="class">SAMRAI::hier::NeighborhoodSet::Outputter</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>NeighborhoodSet.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>NeighborhoodSet_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>OverlapConnectorAlgorithm.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>OverlapConnectorAlgorithm_8C</filename>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxContainerUtils_8h" name="BoxContainerUtils.h" local="yes" imported="no">SAMRAI/hier/BoxContainerUtils.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>OverlapConnectorAlgorithm.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>OverlapConnectorAlgorithm_8h</filename>
    <includes id="BaseConnectorAlgorithm_8h" name="BaseConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/BaseConnectorAlgorithm.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <class kind="class">SAMRAI::hier::OverlapConnectorAlgorithm</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Patch.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Patch_8C</filename>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Patch_8I" name="Patch.I" local="yes" imported="no">SAMRAI/hier/Patch.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a8bb707f5fc3860628bc35e33403fba1e</anchor>
      <arglist>(std::ostream &amp;s, const Patch &amp;patch)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Patch.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Patch_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::hier::Patch</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Patch.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Patch_8I</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaries.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchBoundaries_8C</filename>
    <includes id="PatchBoundaries_8h" name="PatchBoundaries.h" local="yes" imported="no">SAMRAI/hier/PatchBoundaries.h</includes>
    <includes id="PatchBoundaries_8I" name="PatchBoundaries.I" local="yes" imported="no">SAMRAI/hier/PatchBoundaries.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaries.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchBoundaries_8h</filename>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::hier::PatchBoundaries</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchBoundaries.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchBoundaries_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchData_8C</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchData_8I" name="PatchData.I" local="yes" imported="no">SAMRAI/hier/PatchData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchData_8h</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::hier::PatchData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchDataFactory_8C</filename>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDataFactory_8I" name="PatchDataFactory.I" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::PatchDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchDataFactory_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDescriptor.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchDescriptor_8C</filename>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchDescriptor_8I" name="PatchDescriptor.I" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDescriptor.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchDescriptor_8h</filename>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <class kind="class">SAMRAI::hier::PatchDescriptor</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchDescriptor.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchDescriptor_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchFactory_8C</filename>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="PatchFactory_8I" name="PatchFactory.I" local="yes" imported="no">SAMRAI/hier/PatchFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::hier::PatchFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchGeometry_8C</filename>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="BoundaryLookupTable_8h" name="BoundaryLookupTable.h" local="yes" imported="no">SAMRAI/hier/BoundaryLookupTable.h</includes>
    <includes id="PatchGeometry_8I" name="PatchGeometry.I" local="yes" imported="no">SAMRAI/hier/PatchGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchGeometry_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="LocalId_8h" name="LocalId.h" local="yes" imported="no">SAMRAI/hier/LocalId.h</includes>
    <includes id="PatchBoundaries_8h" name="PatchBoundaries.h" local="yes" imported="no">SAMRAI/hier/PatchBoundaries.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <class kind="class">SAMRAI::hier::PatchGeometry</class>
    <class kind="class">SAMRAI::hier::PatchGeometry::TwoDimBool</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchGeometry_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchHierarchy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchHierarchy_8C</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchHierarchy_8I" name="PatchHierarchy.I" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchHierarchy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchHierarchy_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="MultiblockBoxTree_8h" name="MultiblockBoxTree.h" local="yes" imported="no">SAMRAI/hier/MultiblockBoxTree.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="PatchLevelFactory_8h" name="PatchLevelFactory.h" local="yes" imported="no">SAMRAI/hier/PatchLevelFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <class kind="class">SAMRAI::hier::PatchHierarchy</class>
    <class kind="class">SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchHierarchy.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchHierarchy_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevel.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchLevel_8C</filename>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="PatchLevel_8I" name="PatchLevel.I" local="yes" imported="no">SAMRAI/hier/PatchLevel.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_level_constructor</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>adbe3e1d4a68e6bdf5a515e4213a48962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_setup</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>acdcf6c8cb970fa9fd67f2898c143313d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_phys_domain</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a885c3c60c4efe04e58e11c66c27efbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_touch_boundaries</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a2954191b5ba2f6cb884469b8b4758698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_set_geometry</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>afba4cabc7a13875dcf7cccf8fca23f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_set_patch_touches</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a216f3930bb704a984bc3fb53646ea4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_compute_shifts</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a229bd0d6f8d09fada0133edfaf1c8bea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PatchLevel.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchLevel_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="BoxContainerSingleBlockIterator_8h" name="BoxContainerSingleBlockIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerSingleBlockIterator.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <class kind="class">SAMRAI::hier::PatchLevel</class>
    <class kind="class">SAMRAI::hier::PatchLevel::Iterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevel.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchLevel_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchLevelFactory_8C</filename>
    <includes id="PatchLevelFactory_8h" name="PatchLevelFactory.h" local="yes" imported="no">SAMRAI/hier/PatchLevelFactory.h</includes>
    <includes id="PatchLevelFactory_8I" name="PatchLevelFactory.I" local="yes" imported="no">SAMRAI/hier/PatchLevelFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchLevelFactory_8h</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PatchFactory_8h" name="PatchFactory.h" local="yes" imported="no">SAMRAI/hier/PatchFactory.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::hier::PatchLevelFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PatchLevelFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PeriodicId_8C</filename>
    <includes id="PeriodicId_8h" name="PeriodicId.h" local="yes" imported="no">SAMRAI/hier/PeriodicId.h</includes>
    <includes id="PeriodicId_8I" name="PeriodicId.I" local="yes" imported="no">SAMRAI/hier/PeriodicId.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>aa138e9f0a250b1688eb3f7ca667993c5</anchor>
      <arglist>(std::ostream &amp;co, const PeriodicId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PeriodicId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PeriodicId_8h</filename>
    <class kind="class">SAMRAI::hier::PeriodicId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PeriodicId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicShiftCatalog.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PeriodicShiftCatalog_8C</filename>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PeriodicShiftCatalog_8I" name="PeriodicShiftCatalog.I" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicShiftCatalog.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PeriodicShiftCatalog_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PeriodicId_8h" name="PeriodicId.h" local="yes" imported="no">SAMRAI/hier/PeriodicId.h</includes>
    <class kind="class">SAMRAI::hier::PeriodicShiftCatalog</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PeriodicShiftCatalog.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PeriodicShiftCatalog_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PersistentOverlapConnectors.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PersistentOverlapConnectors_8C</filename>
    <includes id="PersistentOverlapConnectors_8h" name="PersistentOverlapConnectors.h" local="yes" imported="no">SAMRAI/hier/PersistentOverlapConnectors.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>PersistentOverlapConnectors.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>PersistentOverlapConnectors_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <class kind="class">SAMRAI::hier::PersistentOverlapConnectors</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ProcessorMapping.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ProcessorMapping_8C</filename>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="ProcessorMapping_8I" name="ProcessorMapping.I" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ProcessorMapping.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ProcessorMapping_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <class kind="class">SAMRAI::hier::ProcessorMapping</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>ProcessorMapping.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>ProcessorMapping_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RealBoxConstIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>RealBoxConstIterator_8C</filename>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RealBoxConstIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>RealBoxConstIterator_8h</filename>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <class kind="class">SAMRAI::hier::RealBoxConstIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RefineOperator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>RefineOperator_8C</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="RefineOperator_8I" name="RefineOperator.I" local="yes" imported="no">SAMRAI/hier/RefineOperator.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RefineOperator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>RefineOperator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <class kind="class">SAMRAI::hier::RefineOperator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>RefineOperator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>RefineOperator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TimeInterpolateOperator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>TimeInterpolateOperator_8C</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TimeInterpolateOperator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>TimeInterpolateOperator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::TimeInterpolateOperator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TransferOperatorRegistry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>TransferOperatorRegistry_8C</filename>
    <includes id="TransferOperatorRegistry_8h" name="TransferOperatorRegistry.h" local="yes" imported="no">SAMRAI/hier/TransferOperatorRegistry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>TransferOperatorRegistry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>TransferOperatorRegistry_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::TransferOperatorRegistry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Transformation.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Transformation_8C</filename>
    <includes id="Transformation_8h" name="Transformation.h" local="yes" imported="no">SAMRAI/hier/Transformation.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Transformation_8I" name="Transformation.I" local="yes" imported="no">SAMRAI/hier/Transformation.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Transformation.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Transformation_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <class kind="class">SAMRAI::hier::Transformation</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Transformation.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Transformation_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Variable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Variable_8C</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Variable_8I" name="Variable.I" local="yes" imported="no">SAMRAI/hier/Variable.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Variable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Variable_8h</filename>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::Variable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>Variable.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>Variable_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableContext.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>VariableContext_8C</filename>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="VariableContext_8I" name="VariableContext.I" local="yes" imported="no">SAMRAI/hier/VariableContext.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableContext.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>VariableContext_8h</filename>
    <class kind="class">SAMRAI::hier::VariableContext</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableContext.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>VariableContext_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableDatabase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>VariableDatabase_8C</filename>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="VariableDatabase_8I" name="VariableDatabase.I" local="yes" imported="no">SAMRAI/hier/VariableDatabase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableDatabase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>VariableDatabase_8h</filename>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::hier::VariableDatabase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>VariableDatabase.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/</path>
    <filename>VariableDatabase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>mainpage.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/</path>
    <filename>mainpage_8dox</filename>
  </compound>
  <compound kind="file">
    <name>ArrayDataBasicOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataBasicOps_8C</filename>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataBasicOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataBasicOps_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <class kind="class">SAMRAI::math::ArrayDataBasicOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataMiscellaneousOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataMiscellaneousOpsReal_8C</filename>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataMiscellaneousOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataMiscellaneousOpsReal_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <class kind="class">SAMRAI::math::ArrayDataMiscellaneousOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsComplex_8C</filename>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsComplex_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsInteger_8C</filename>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsInteger_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsReal_8C</filename>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataNormOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>ArrayDataNormOpsReal_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual_hierarchy.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/dox/</path>
    <filename>manual__hierarchy_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsComplex_8C</filename>
    <includes id="HierarchyCellDataOpsComplex_8h" name="HierarchyCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsComplex.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchCellDataOpsComplex_8h" name="PatchCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsInteger_8C</filename>
    <includes id="HierarchyCellDataOpsInteger_8h" name="HierarchyCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchCellDataOpsInteger_8h" name="PatchCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsReal_8C</filename>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyCellDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyCellDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchCellDataOpsReal_8h" name="PatchCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsComplex_8C</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsComplex_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsInteger_8C</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsInteger_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsManager.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsManager_8C</filename>
    <includes id="HierarchyDataOpsManager_8h" name="HierarchyDataOpsManager.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsManager.h</includes>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="HierarchyFaceDataOpsReal_8h" name="HierarchyFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsReal.h</includes>
    <includes id="HierarchyNodeDataOpsReal_8h" name="HierarchyNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsReal.h</includes>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="HierarchyEdgeDataOpsReal_8h" name="HierarchyEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsReal.h</includes>
    <includes id="HierarchyCellDataOpsComplex_8h" name="HierarchyCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsComplex.h</includes>
    <includes id="HierarchyFaceDataOpsComplex_8h" name="HierarchyFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsComplex.h</includes>
    <includes id="HierarchyNodeDataOpsComplex_8h" name="HierarchyNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsComplex.h</includes>
    <includes id="HierarchySideDataOpsComplex_8h" name="HierarchySideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsComplex.h</includes>
    <includes id="HierarchyEdgeDataOpsComplex_8h" name="HierarchyEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsComplex.h</includes>
    <includes id="HierarchyCellDataOpsInteger_8h" name="HierarchyCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsInteger.h</includes>
    <includes id="HierarchyFaceDataOpsInteger_8h" name="HierarchyFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsInteger.h</includes>
    <includes id="HierarchyNodeDataOpsInteger_8h" name="HierarchyNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsInteger.h</includes>
    <includes id="HierarchySideDataOpsInteger_8h" name="HierarchySideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsInteger.h</includes>
    <includes id="HierarchyEdgeDataOpsInteger_8h" name="HierarchyEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsInteger.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsManager.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsManager_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyDataOpsManager</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsReal_8C</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyDataOpsReal_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <class kind="class">SAMRAI::math::HierarchyDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsComplex_8C</filename>
    <includes id="HierarchyEdgeDataOpsComplex_8h" name="HierarchyEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchEdgeDataOpsComplex_8h" name="PatchEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsInteger_8C</filename>
    <includes id="HierarchyEdgeDataOpsInteger_8h" name="HierarchyEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchEdgeDataOpsInteger_8h" name="PatchEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsReal_8C</filename>
    <includes id="HierarchyEdgeDataOpsReal_8h" name="HierarchyEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsReal.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyEdgeDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyEdgeDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchEdgeDataOpsReal_8h" name="PatchEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsComplex_8C</filename>
    <includes id="HierarchyFaceDataOpsComplex_8h" name="HierarchyFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchFaceDataOpsComplex_8h" name="PatchFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsInteger_8C</filename>
    <includes id="HierarchyFaceDataOpsInteger_8h" name="HierarchyFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchFaceDataOpsInteger_8h" name="PatchFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsReal_8C</filename>
    <includes id="HierarchyFaceDataOpsReal_8h" name="HierarchyFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsReal.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyFaceDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyFaceDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchFaceDataOpsReal_8h" name="PatchFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsComplex_8C</filename>
    <includes id="HierarchyNodeDataOpsComplex_8h" name="HierarchyNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchNodeDataOpsComplex_8h" name="PatchNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsInteger_8C</filename>
    <includes id="HierarchyNodeDataOpsInteger_8h" name="HierarchyNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsInteger.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchNodeDataOpsInteger_8h" name="PatchNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsReal_8C</filename>
    <includes id="HierarchyNodeDataOpsReal_8h" name="HierarchyNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsReal.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchyNodeDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchyNodeDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchNodeDataOpsReal_8h" name="PatchNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsComplex_8C</filename>
    <includes id="HierarchySideDataOpsComplex_8h" name="HierarchySideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsComplex.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsComplex_8h</filename>
    <includes id="HierarchyDataOpsComplex_8h" name="HierarchyDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsComplex.h</includes>
    <includes id="PatchSideDataOpsComplex_8h" name="PatchSideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsInteger_8C</filename>
    <includes id="HierarchySideDataOpsInteger_8h" name="HierarchySideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsInteger.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsInteger_8h</filename>
    <includes id="HierarchyDataOpsInteger_8h" name="HierarchyDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsInteger.h</includes>
    <includes id="PatchSideDataOpsInteger_8h" name="PatchSideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsReal_8C</filename>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>HierarchySideDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>HierarchySideDataOpsReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="PatchSideDataOpsReal_8h" name="PatchSideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataBasicOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataBasicOps_8C</filename>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataBasicOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataBasicOps_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataBasicOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataMiscellaneousOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchCellDataMiscellaneousOpsReal_8h" name="PatchCellDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataMiscellaneousOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataMiscellaneousOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataMiscellaneousOpsReal_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataMiscellaneousOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsComplex_8C</filename>
    <includes id="PatchCellDataNormOpsComplex_8h" name="PatchCellDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsComplex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsComplex_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsReal_8C</filename>
    <includes id="PatchCellDataNormOpsReal_8h" name="PatchCellDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataNormOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataNormOpsReal_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsComplex_8C</filename>
    <includes id="PatchCellDataOpsComplex_8h" name="PatchCellDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsComplex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsComplex_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="PatchCellDataNormOpsComplex_8h" name="PatchCellDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsInteger_8C</filename>
    <includes id="PatchCellDataOpsInteger_8h" name="PatchCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsInteger.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsInteger_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsReal_8C</filename>
    <includes id="PatchCellDataOpsReal_8h" name="PatchCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchCellDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchCellDataOpsReal_8h</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="PatchCellDataMiscellaneousOpsReal_8h" name="PatchCellDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchCellDataNormOpsReal_8h" name="PatchCellDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchCellDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataBasicOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataBasicOps_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataBasicOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataBasicOps_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataBasicOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataMiscellaneousOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchEdgeDataMiscellaneousOpsReal_8h" name="PatchEdgeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataMiscellaneousOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataMiscellaneousOpsReal_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsComplex_8C</filename>
    <includes id="PatchEdgeDataNormOpsComplex_8h" name="PatchEdgeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsComplex.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsComplex_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsReal_8C</filename>
    <includes id="PatchEdgeDataNormOpsReal_8h" name="PatchEdgeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataNormOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataNormOpsReal_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsComplex_8C</filename>
    <includes id="PatchEdgeDataOpsComplex_8h" name="PatchEdgeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsComplex.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsComplex_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="PatchEdgeDataNormOpsComplex_8h" name="PatchEdgeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsInteger_8C</filename>
    <includes id="PatchEdgeDataOpsInteger_8h" name="PatchEdgeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsInteger.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsInteger_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsReal_8C</filename>
    <includes id="PatchEdgeDataOpsReal_8h" name="PatchEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchEdgeDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchEdgeDataOpsReal_8h</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="PatchEdgeDataBasicOps_8h" name="PatchEdgeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataBasicOps.h</includes>
    <includes id="PatchEdgeDataMiscellaneousOpsReal_8h" name="PatchEdgeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchEdgeDataNormOpsReal_8h" name="PatchEdgeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchEdgeDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataBasicOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataBasicOps_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataBasicOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataBasicOps_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataBasicOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataMiscellaneousOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchFaceDataMiscellaneousOpsReal_8h" name="PatchFaceDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataMiscellaneousOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataMiscellaneousOpsReal_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsComplex_8C</filename>
    <includes id="PatchFaceDataNormOpsComplex_8h" name="PatchFaceDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsComplex.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsComplex_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsReal_8C</filename>
    <includes id="PatchFaceDataNormOpsReal_8h" name="PatchFaceDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataNormOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataNormOpsReal_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsComplex_8C</filename>
    <includes id="PatchFaceDataOpsComplex_8h" name="PatchFaceDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsComplex.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsComplex_8h</filename>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="PatchFaceDataNormOpsComplex_8h" name="PatchFaceDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsInteger_8C</filename>
    <includes id="PatchFaceDataOpsInteger_8h" name="PatchFaceDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsInteger.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsInteger_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsReal_8C</filename>
    <includes id="PatchFaceDataOpsReal_8h" name="PatchFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchFaceDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchFaceDataOpsReal_8h</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="PatchFaceDataBasicOps_8h" name="PatchFaceDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataBasicOps.h</includes>
    <includes id="PatchFaceDataMiscellaneousOpsReal_8h" name="PatchFaceDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchFaceDataNormOpsReal_8h" name="PatchFaceDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchFaceDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataBasicOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataBasicOps_8C</filename>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataBasicOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataBasicOps_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataBasicOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataMiscellaneousOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchNodeDataMiscellaneousOpsReal_8h" name="PatchNodeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataMiscellaneousOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataMiscellaneousOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataMiscellaneousOpsReal_8h</filename>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsComplex_8C</filename>
    <includes id="PatchNodeDataNormOpsComplex_8h" name="PatchNodeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsComplex.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsComplex_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsReal_8C</filename>
    <includes id="PatchNodeDataNormOpsReal_8h" name="PatchNodeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataNormOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataNormOpsReal_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsComplex_8C</filename>
    <includes id="PatchNodeDataOpsComplex_8h" name="PatchNodeDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsComplex.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsComplex_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="PatchNodeDataNormOpsComplex_8h" name="PatchNodeDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsInteger_8C</filename>
    <includes id="PatchNodeDataOpsInteger_8h" name="PatchNodeDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsInteger.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsInteger_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsReal_8C</filename>
    <includes id="PatchNodeDataOpsReal_8h" name="PatchNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchNodeDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchNodeDataOpsReal_8h</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="PatchNodeDataBasicOps_8h" name="PatchNodeDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataBasicOps.h</includes>
    <includes id="PatchNodeDataMiscellaneousOpsReal_8h" name="PatchNodeDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchNodeDataNormOpsReal_8h" name="PatchNodeDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchNodeDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataBasicOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataBasicOps_8C</filename>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataBasicOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataBasicOps_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataBasicOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataMiscellaneousOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataMiscellaneousOpsReal_8C</filename>
    <includes id="PatchSideDataMiscellaneousOpsReal_8h" name="PatchSideDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataMiscellaneousOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataMiscellaneousOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataMiscellaneousOpsReal_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataMiscellaneousOpsReal_8h" name="ArrayDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataMiscellaneousOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataMiscellaneousOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsComplex_8C</filename>
    <includes id="PatchSideDataNormOpsComplex_8h" name="PatchSideDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsComplex.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsComplex_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataNormOpsComplex_8h" name="ArrayDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsReal_8C</filename>
    <includes id="PatchSideDataNormOpsReal_8h" name="PatchSideDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsReal.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataNormOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataNormOpsReal_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="ArrayDataNormOpsReal_8h" name="ArrayDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsComplex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsComplex_8C</filename>
    <includes id="PatchSideDataOpsComplex_8h" name="PatchSideDataOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsComplex.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsComplex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsComplex_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="PatchSideDataNormOpsComplex_8h" name="PatchSideDataNormOpsComplex.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsComplex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataOpsComplex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsInteger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsInteger_8C</filename>
    <includes id="PatchSideDataOpsInteger_8h" name="PatchSideDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsInteger.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsInteger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsInteger_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="ArrayDataNormOpsInteger_8h" name="ArrayDataNormOpsInteger.h" local="yes" imported="no">SAMRAI/math/ArrayDataNormOpsInteger.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataOpsInteger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsReal_8C</filename>
    <includes id="PatchSideDataOpsReal_8h" name="PatchSideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataOpsReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>PatchSideDataOpsReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/</path>
    <filename>PatchSideDataOpsReal_8h</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="PatchSideDataMiscellaneousOpsReal_8h" name="PatchSideDataMiscellaneousOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataMiscellaneousOpsReal.h</includes>
    <includes id="PatchSideDataNormOpsReal_8h" name="PatchSideDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchSideDataNormOpsReal.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::math::PatchSideDataOpsReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>BalanceUtilities.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BalanceUtilities_8C</filename>
    <includes id="BalanceUtilities_8h" name="BalanceUtilities.h" local="yes" imported="no">SAMRAI/mesh/BalanceUtilities.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BalanceUtilities.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BalanceUtilities_8h</filename>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <includes id="PatchCellDataNormOpsReal_8h" name="PatchCellDataNormOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataNormOpsReal.h</includes>
    <includes id="SpatialKey_8h" name="SpatialKey.h" local="yes" imported="no">SAMRAI/mesh/SpatialKey.h</includes>
    <class kind="struct">SAMRAI::mesh::BalanceUtilities</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsos.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsos_8C</filename>
    <includes id="BergerRigoutsos_8h" name="BergerRigoutsos.h" local="yes" imported="no">SAMRAI/mesh/BergerRigoutsos.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="BergerRigoutsosNode_8h" name="BergerRigoutsosNode.h" local="yes" imported="no">SAMRAI/mesh/BergerRigoutsosNode.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsos.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsos_8h</filename>
    <includes id="BoxGeneratorStrategy_8h" name="BoxGeneratorStrategy.h" local="yes" imported="no">SAMRAI/mesh/BoxGeneratorStrategy.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::mesh::BergerRigoutsos</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsosNode.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsosNode_8C</filename>
    <includes id="BergerRigoutsosNode_8h" name="BergerRigoutsosNode.h" local="yes" imported="no">SAMRAI/mesh/BergerRigoutsosNode.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BergerRigoutsosNode.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BergerRigoutsosNode_8h</filename>
    <includes id="AsyncCommGroup_8h" name="AsyncCommGroup.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.h</includes>
    <includes id="vector_8h" name="vector.h" local="yes" imported="no">SAMRAI/tbox/vector.h</includes>
    <includes id="BlockId_8h" name="BlockId.h" local="yes" imported="no">SAMRAI/hier/BlockId.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <class kind="class">SAMRAI::mesh::BergerRigoutsosNode</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeneratorStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BoxGeneratorStrategy_8C</filename>
    <includes id="BoxGeneratorStrategy_8h" name="BoxGeneratorStrategy.h" local="yes" imported="no">SAMRAI/mesh/BoxGeneratorStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeneratorStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>BoxGeneratorStrategy_8h</filename>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <class kind="class">SAMRAI::mesh::BoxGeneratorStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>ChopAndPackLoadBalancer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>ChopAndPackLoadBalancer_8C</filename>
    <includes id="ChopAndPackLoadBalancer_8h" name="ChopAndPackLoadBalancer.h" local="yes" imported="no">SAMRAI/mesh/ChopAndPackLoadBalancer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="BalanceUtilities_8h" name="BalanceUtilities.h" local="yes" imported="no">SAMRAI/mesh/BalanceUtilities.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="ChopAndPackLoadBalancer_8I" name="ChopAndPackLoadBalancer.I" local="yes" imported="no">SAMRAI/mesh/ChopAndPackLoadBalancer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ChopAndPackLoadBalancer_MARKLOADFORPOSTPROCESSING</name>
      <anchorfile>ChopAndPackLoadBalancer_8C.html</anchorfile>
      <anchor>abc74ea13264aa312a554d793d0408720</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChopAndPackLoadBalancer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>ChopAndPackLoadBalancer_8h</filename>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::mesh::ChopAndPackLoadBalancer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>ChopAndPackLoadBalancer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>ChopAndPackLoadBalancer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_clustering.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/dox/</path>
    <filename>manual__clustering_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_gridding.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/dox/</path>
    <filename>manual__gridding_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_load_balance.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/dox/</path>
    <filename>manual__load__balance_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithm.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithm_8C</filename>
    <includes id="GriddingAlgorithm_8h" name="GriddingAlgorithm.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.h</includes>
    <includes id="IEEE_8h" name="IEEE.h" local="yes" imported="no">SAMRAI/tbox/IEEE.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="PatchCellDataBasicOps_8h" name="PatchCellDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchCellDataBasicOps.h</includes>
    <includes id="PatchCellDataOpsInteger_8h" name="PatchCellDataOpsInteger.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsInteger.h</includes>
    <includes id="StandardTagAndInitialize_8h" name="StandardTagAndInitialize.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitialize.h</includes>
    <includes id="GriddingAlgorithm_8I" name="GriddingAlgorithm.I" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithm.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithm.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithm_8h</filename>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <includes id="BoxGeneratorStrategy_8h" name="BoxGeneratorStrategy.h" local="yes" imported="no">SAMRAI/mesh/BoxGeneratorStrategy.h</includes>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <includes id="GriddingAlgorithmConnectorWidthRequestor_8h" name="GriddingAlgorithmConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmConnectorWidthRequestor.h</includes>
    <includes id="MultiblockGriddingTagger_8h" name="MultiblockGriddingTagger.h" local="yes" imported="no">SAMRAI/mesh/MultiblockGriddingTagger.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithm</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="define">
      <type>#define</type>
      <name>GA_RECORD_STATS</name>
      <anchorfile>GriddingAlgorithm_8h.html</anchorfile>
      <anchor>ab73a998b33d552f9100fafdbb5bdb5ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithm.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithm_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmConnectorWidthRequestor.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmConnectorWidthRequestor_8C</filename>
    <includes id="GriddingAlgorithmConnectorWidthRequestor_8h" name="GriddingAlgorithmConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmConnectorWidthRequestor.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmConnectorWidthRequestor.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmConnectorWidthRequestor_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmConnectorWidthRequestor</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmStrategy_8C</filename>
    <includes id="GriddingAlgorithmStrategy_8h" name="GriddingAlgorithmStrategy.h" local="yes" imported="no">SAMRAI/mesh/GriddingAlgorithmStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>GriddingAlgorithmStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>GriddingAlgorithmStrategy_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="TagAndInitializeStrategy_8h" name="TagAndInitializeStrategy.h" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>LoadBalanceStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>LoadBalanceStrategy_8C</filename>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>LoadBalanceStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>LoadBalanceStrategy_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="ProcessorMapping_8h" name="ProcessorMapping.h" local="yes" imported="no">SAMRAI/hier/ProcessorMapping.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RankGroup_8h" name="RankGroup.h" local="yes" imported="no">SAMRAI/tbox/RankGroup.h</includes>
    <class kind="class">SAMRAI::mesh::LoadBalanceStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockGriddingTagger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>MultiblockGriddingTagger_8C</filename>
    <includes id="MultiblockGriddingTagger_8h" name="MultiblockGriddingTagger.h" local="yes" imported="no">SAMRAI/mesh/MultiblockGriddingTagger.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockGriddingTagger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>MultiblockGriddingTagger_8h</filename>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <class kind="class">SAMRAI::mesh::MultiblockGriddingTagger</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>SpatialKey.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>SpatialKey_8C</filename>
    <includes id="SpatialKey_8h" name="SpatialKey.h" local="yes" imported="no">SAMRAI/mesh/SpatialKey.h</includes>
    <includes id="SpatialKey_8I" name="SpatialKey.I" local="yes" imported="no">SAMRAI/mesh/SpatialKey.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>a9c82905b5f96e24b85545ce47c3e18ff</anchor>
      <arglist>(std::ostream &amp;s, const SpatialKey &amp;spatial_key)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpatialKey.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>SpatialKey_8h</filename>
    <class kind="class">SAMRAI::mesh::SpatialKey</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>SpatialKey.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>SpatialKey_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitialize.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitialize_8C</filename>
    <includes id="StandardTagAndInitialize_8h" name="StandardTagAndInitialize.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitialize.h</includes>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="StandardTagAndInitialize_8I" name="StandardTagAndInitialize.I" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitialize.I</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_TIMES</name>
      <anchorfile>StandardTagAndInitialize_8C.html</anchorfile>
      <anchor>a6783bd9082ec870ad21966f4cfbabaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>StandardTagAndInitialize_8C.html</anchorfile>
      <anchor>a790df7882dfad090bcdde45ea4ec66bf</anchor>
      <arglist>(coarsentags1d, COARSENTAGS1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitialize.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitialize_8h</filename>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="StandardTagAndInitializeConnectorWidthRequestor_8h" name="StandardTagAndInitializeConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitializeConnectorWidthRequestor.h</includes>
    <includes id="TagAndInitializeStrategy_8h" name="TagAndInitializeStrategy.h" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitialize</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitialize.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitialize_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitializeConnectorWidthRequestor.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitializeConnectorWidthRequestor_8C</filename>
    <includes id="StandardTagAndInitializeConnectorWidthRequestor_8h" name="StandardTagAndInitializeConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitializeConnectorWidthRequestor.h</includes>
    <includes id="RefineScheduleConnectorWidthRequestor_8h" name="RefineScheduleConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/xfer/RefineScheduleConnectorWidthRequestor.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GCD</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>ae1fa4be093def34c110b92efdd8da30d</anchor>
      <arglist>(const int a, const int b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitializeConnectorWidthRequestor.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitializeConnectorWidthRequestor_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitializeConnectorWidthRequestor</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitStrategy_8C</filename>
    <includes id="StandardTagAndInitStrategy_8h" name="StandardTagAndInitStrategy.h" local="yes" imported="no">SAMRAI/mesh/StandardTagAndInitStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>StandardTagAndInitStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>StandardTagAndInitStrategy_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TagAndInitializeStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>TagAndInitializeStrategy_8C</filename>
    <includes id="TagAndInitializeStrategy_8h" name="TagAndInitializeStrategy.h" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TagAndInitializeStrategy_8I" name="TagAndInitializeStrategy.I" local="yes" imported="no">SAMRAI/mesh/TagAndInitializeStrategy.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TagAndInitializeStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>TagAndInitializeStrategy_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::mesh::TagAndInitializeStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TagAndInitializeStrategy.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>TagAndInitializeStrategy_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TreeLoadBalancer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>TreeLoadBalancer_8C</filename>
    <includes id="TreeLoadBalancer_8h" name="TreeLoadBalancer.h" local="yes" imported="no">SAMRAI/mesh/TreeLoadBalancer.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="BalanceUtilities_8h" name="BalanceUtilities.h" local="yes" imported="no">SAMRAI/mesh/BalanceUtilities.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="AsyncCommGroup_8h" name="AsyncCommGroup.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TreeLoadBalancer_8I" name="TreeLoadBalancer.I" local="yes" imported="no">SAMRAI/mesh/TreeLoadBalancer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>a50a6ce05b222e1b5814e2496d4415b0d</anchor>
      <arglist>(std::ostream &amp;co, const TreeLoadBalancer::BoxInTransit &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TreeLoadBalancer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>TreeLoadBalancer_8h</filename>
    <includes id="LoadBalanceStrategy_8h" name="LoadBalanceStrategy.h" local="yes" imported="no">SAMRAI/mesh/LoadBalanceStrategy.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="BalancedDepthFirstTree_8h" name="BalancedDepthFirstTree.h" local="yes" imported="no">SAMRAI/tbox/BalancedDepthFirstTree.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RankGroup_8h" name="RankGroup.h" local="yes" imported="no">SAMRAI/tbox/RankGroup.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::mesh::TreeLoadBalancer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>TreeLoadBalancer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/</path>
    <filename>TreeLoadBalancer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayData_8C</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="ArrayDataOperationUtilities_8h" name="ArrayDataOperationUtilities.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataOperationUtilities.h</includes>
    <includes id="CopyOperation_8h" name="CopyOperation.h" local="yes" imported="no">SAMRAI/pdat/CopyOperation.h</includes>
    <includes id="SumOperation_8h" name="SumOperation.h" local="yes" imported="no">SAMRAI/pdat/SumOperation.h</includes>
    <includes id="ArrayData_8I" name="ArrayData.I" local="yes" imported="no">SAMRAI/pdat/ArrayData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayData_8h</filename>
    <includes id="ArrayDataIterator_8h" name="ArrayDataIterator.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <class kind="class">SAMRAI::pdat::ArrayData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataAccess.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataAccess_8C</filename>
    <includes id="ArrayDataAccess_8h" name="ArrayDataAccess.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataAccess.h</includes>
    <member kind="function">
      <type>MDA_Access&lt; double, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>ArrayDataAccess_8C.html</anchorfile>
      <anchor>a38a71a5de19946e0fd46135bbb69c6bf</anchor>
      <arglist>(SAMRAI::pdat::ArrayData&lt; double &gt; &amp;array_data, int depth)</arglist>
    </member>
    <member kind="function">
      <type>const MDA_AccessConst&lt; double, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>ArrayDataAccess_8C.html</anchorfile>
      <anchor>a07856224b89ee2c3dc74cddb1458c3a1</anchor>
      <arglist>(const SAMRAI::pdat::ArrayData&lt; double &gt; &amp;array_data, int depth)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayDataAccess.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataAccess_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MDA__Access_8h" name="MDA_Access.h" local="yes" imported="no">SAMRAI/pdat/MDA_Access.h</includes>
    <class kind="class">SAMRAI::pdat::ArrayDataAccess</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataIterator_8C</filename>
    <includes id="ArrayDataIterator_8h" name="ArrayDataIterator.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataIterator.h</includes>
    <includes id="ArrayDataIterator_8I" name="ArrayDataIterator.I" local="yes" imported="no">SAMRAI/pdat/ArrayDataIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>ArrayDataIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataIterator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <class kind="class">SAMRAI::pdat::ArrayDataIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataOperationUtilities.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataOperationUtilities_8C</filename>
    <includes id="ArrayDataOperationUtilities_8h" name="ArrayDataOperationUtilities.h" local="yes" imported="no">SAMRAI/pdat/ArrayDataOperationUtilities.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>ArrayDataOperationUtilities.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>ArrayDataOperationUtilities_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <class kind="class">SAMRAI::pdat::ArrayDataOperationUtilities</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellComplexConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellComplexConstantRefine_8C</filename>
    <includes id="CellComplexConstantRefine_8h" name="CellComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellComplexConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellComplexConstantRefine_8C.html</anchorfile>
      <anchor>af1b0c31b05406a32a516e9d11f5f25b1</anchor>
      <arglist>(conrefcellcplx1d, CONREFCELLCPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellComplexConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellComplexConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <class kind="class">SAMRAI::pdat::CellComplexConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="CellComplexLinearTimeInterpolateOp_8h" name="CellComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a5211a95572c303dddbfe785976c1858e</anchor>
      <arglist>(lintimeintcellcmplx1d, LINTIMEINTCELLCMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <class kind="class">SAMRAI::pdat::CellComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellData_8C</filename>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellData_8I" name="CellData.I" local="yes" imported="no">SAMRAI/pdat/CellData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellIterator_8h" name="CellIterator.h" local="yes" imported="no">SAMRAI/pdat/CellIterator.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDataFactory_8C</filename>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="CellDataFactory_8I" name="CellDataFactory.I" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDataFactory_8h</filename>
    <includes id="MultiblockCellDataTranslator_8h" name="MultiblockCellDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockCellDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDoubleConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDoubleConstantRefine_8C</filename>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellDoubleConstantRefine_8C.html</anchorfile>
      <anchor>a2f7930a2151396190d35b1cab0d18a61</anchor>
      <arglist>(conrefcelldoub1d, CONREFCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellDoubleConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellDoubleConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="CellDoubleLinearTimeInterpolateOp_8h" name="CellDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a729a5792ce1f34ca15b3d89f3037e303</anchor>
      <arglist>(lintimeintcelldoub1d, LINTIMEINTCELLDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellFloatConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellFloatConstantRefine_8C</filename>
    <includes id="CellFloatConstantRefine_8h" name="CellFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellFloatConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellFloatConstantRefine_8C.html</anchorfile>
      <anchor>a0c02fafb21186d36690a00aa19f8df57</anchor>
      <arglist>(conrefcellflot1d, CONREFCELLFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellFloatConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellFloatConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="CellFloatLinearTimeInterpolateOp_8h" name="CellFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/CellFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>ae08961ecbf2aa4eb14e401b01fb56529</anchor>
      <arglist>(lintimeintcellfloat1d, LINTIMEINTCELLFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellGeometry_8C</filename>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellGeometry_8I" name="CellGeometry.I" local="yes" imported="no">SAMRAI/pdat/CellGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellGeometry_8h</filename>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIndex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIndex_8C</filename>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellIndex_8I" name="CellIndex.I" local="yes" imported="no">SAMRAI/pdat/CellIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>CellIndex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <class kind="class">SAMRAI::pdat::CellIndex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIndex.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIntegerConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIntegerConstantRefine_8C</filename>
    <includes id="CellIntegerConstantRefine_8h" name="CellIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellIntegerConstantRefine.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellIntegerConstantRefine_8C.html</anchorfile>
      <anchor>a585e257bc5855a3e2c8ec88b6caef3ba</anchor>
      <arglist>(conrefcellintg1d, CONREFCELLINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellIntegerConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIntegerConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <class kind="class">SAMRAI::pdat::CellIntegerConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIterator_8C</filename>
    <includes id="CellIterator_8h" name="CellIterator.h" local="yes" imported="no">SAMRAI/pdat/CellIterator.h</includes>
    <includes id="CellIterator_8I" name="CellIterator.I" local="yes" imported="no">SAMRAI/pdat/CellIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>CellIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIterator_8h</filename>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <class kind="class">SAMRAI::pdat::CellIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellOverlap.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellOverlap_8C</filename>
    <includes id="CellOverlap_8h" name="CellOverlap.h" local="yes" imported="no">SAMRAI/pdat/CellOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="CellOverlap_8I" name="CellOverlap.I" local="yes" imported="no">SAMRAI/pdat/CellOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellOverlap.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::CellOverlap</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellOverlap.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellOverlap_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellVariable_8C</filename>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="CellDataFactory_8h" name="CellDataFactory.h" local="yes" imported="no">SAMRAI/pdat/CellDataFactory.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CellVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CellVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::CellVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CopyOperation.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CopyOperation_8C</filename>
    <includes id="CopyOperation_8h" name="CopyOperation.h" local="yes" imported="no">SAMRAI/pdat/CopyOperation.h</includes>
    <includes id="CopyOperation_8I" name="CopyOperation.I" local="yes" imported="no">SAMRAI/pdat/CopyOperation.I</includes>
  </compound>
  <compound kind="file">
    <name>CopyOperation.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CopyOperation_8h</filename>
    <class kind="class">SAMRAI::pdat::CopyOperation</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CopyOperation.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>CopyOperation_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>DoubleAttributeId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>DoubleAttributeId_8C</filename>
    <includes id="DoubleAttributeId_8h" name="DoubleAttributeId.h" local="yes" imported="no">SAMRAI/pdat/DoubleAttributeId.h</includes>
    <includes id="DoubleAttributeId_8I" name="DoubleAttributeId.I" local="yes" imported="no">SAMRAI/pdat/DoubleAttributeId.I</includes>
  </compound>
  <compound kind="file">
    <name>DoubleAttributeId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>DoubleAttributeId_8h</filename>
    <class kind="class">SAMRAI::pdat::DoubleAttributeId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>DoubleAttributeId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>DoubleAttributeId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_array.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__array_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_array.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/dox/</path>
    <filename>math_2dox_2manual__array_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual_boxgeometry.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__boxgeometry_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cell.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_cell.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/dox/</path>
    <filename>math_2dox_2manual__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual_edge.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__edge_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_face.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__face_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_fortran.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__fortran_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_index.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__index_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_multiblock.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__multiblock_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_multiblock.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/dox/</path>
    <filename>mesh_2dox_2manual__multiblock_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual_node.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__node_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_constant_cell.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__constant__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_constant_outernode.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__constant__outernode_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_time_interpolate.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__time__interpolate_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_time_interpolate_cell.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__time__interpolate__cell_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators_time_interpolate_fortran.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__operators__time__interpolate__fortran_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outeredge.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outeredge_8dox</filename>
    <namespace>SAMRAI</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outerface.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outerface_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outernode.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outernode_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_outerside.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__outerside_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual_side.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>manual__side_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeComplexConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexConstantRefine_8C</filename>
    <includes id="EdgeComplexConstantRefine_8h" name="EdgeComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeComplexConstantRefine_8C.html</anchorfile>
      <anchor>a759ee9e208f218b0ab891749cab7ec47</anchor>
      <arglist>(conrefedgecplx1d, CONREFEDGECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeComplexConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeComplexConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="EdgeComplexLinearTimeInterpolateOp_8h" name="EdgeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>ad39dcf48e07aec76a912cbf0e196581a</anchor>
      <arglist>(lintimeintedgecmplx1d, LINTIMEINTEDGECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeData_8C</filename>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeData_8I" name="EdgeData.I" local="yes" imported="no">SAMRAI/pdat/EdgeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeIterator_8h" name="EdgeIterator.h" local="yes" imported="no">SAMRAI/pdat/EdgeIterator.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDataFactory_8C</filename>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="OuteredgeDataFactory_8h" name="OuteredgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <includes id="EdgeDataFactory_8I" name="EdgeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDataFactory_8h</filename>
    <includes id="MultiblockEdgeDataTranslator_8h" name="MultiblockEdgeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockEdgeDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleConstantRefine_8C</filename>
    <includes id="EdgeDoubleConstantRefine_8h" name="EdgeDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeDoubleConstantRefine_8C.html</anchorfile>
      <anchor>a3dd713546643d3f839184d892e87df4a</anchor>
      <arglist>(conrefedgedoub1d, CONREFEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeDoubleConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="EdgeDoubleLinearTimeInterpolateOp_8h" name="EdgeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a95b318a85db8f7776d599c8a56901275</anchor>
      <arglist>(lintimeintedgedoub1d, LINTIMEINTEDGEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeFloatConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatConstantRefine_8C</filename>
    <includes id="EdgeFloatConstantRefine_8h" name="EdgeFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeFloatConstantRefine_8C.html</anchorfile>
      <anchor>ad13ab085a3739151067161028f06e70c</anchor>
      <arglist>(conrefedgeflot1d, CONREFEDGEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeFloatConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeFloatConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="EdgeFloatLinearTimeInterpolateOp_8h" name="EdgeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/EdgeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a06eba7d5a37d91c9558a655c6a25f906</anchor>
      <arglist>(lintimeintedgefloat1d, LINTIMEINTEDGEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeGeometry_8C</filename>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="EdgeGeometry_8I" name="EdgeGeometry.I" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeGeometry_8h</filename>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIndex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIndex_8C</filename>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeIndex_8I" name="EdgeIndex.I" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>EdgeIndex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeIndex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIndex.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIntegerConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIntegerConstantRefine_8C</filename>
    <includes id="EdgeIntegerConstantRefine_8h" name="EdgeIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/EdgeIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>EdgeIntegerConstantRefine_8C.html</anchorfile>
      <anchor>a556e83d3ad364264f2d0a1dff4ef2fca</anchor>
      <arglist>(conrefedgeintg1d, CONREFEDGEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EdgeIntegerConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIntegerConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeIntegerConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIterator_8C</filename>
    <includes id="EdgeIterator_8h" name="EdgeIterator.h" local="yes" imported="no">SAMRAI/pdat/EdgeIterator.h</includes>
    <includes id="EdgeIterator_8I" name="EdgeIterator.I" local="yes" imported="no">SAMRAI/pdat/EdgeIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>EdgeIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIterator_8h</filename>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeOverlap.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeOverlap_8C</filename>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="EdgeOverlap_8I" name="EdgeOverlap.I" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeOverlap.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeOverlap</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeOverlap.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeOverlap_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeVariable_8C</filename>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>EdgeVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>EdgeVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::EdgeVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceComplexConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceComplexConstantRefine_8C</filename>
    <includes id="FaceComplexConstantRefine_8h" name="FaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceComplexConstantRefine_8C.html</anchorfile>
      <anchor>a92e13ca2815d6fb45b3b810677f218be</anchor>
      <arglist>(conreffacecplx1d, CONREFFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceComplexConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceComplexConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceComplexConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="FaceComplexLinearTimeInterpolateOp_8h" name="FaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a6a9abd2ae48f9e3e21d2c19a0b492962</anchor>
      <arglist>(lintimeintfacecmplx1d, LINTIMEINTFACECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceData_8C</filename>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceData_8I" name="FaceData.I" local="yes" imported="no">SAMRAI/pdat/FaceData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceIterator_8h" name="FaceIterator.h" local="yes" imported="no">SAMRAI/pdat/FaceIterator.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDataFactory_8C</filename>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="OuterfaceDataFactory_8h" name="OuterfaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="FaceDataFactory_8I" name="FaceDataFactory.I" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDataFactory_8h</filename>
    <includes id="MultiblockFaceDataTranslator_8h" name="MultiblockFaceDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockFaceDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDoubleConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleConstantRefine_8C</filename>
    <includes id="FaceDoubleConstantRefine_8h" name="FaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceDoubleConstantRefine_8C.html</anchorfile>
      <anchor>ab6235ba84075cb9c3b045925f859394f</anchor>
      <arglist>(conreffacedoub1d, CONREFFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceDoubleConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceDoubleConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="FaceDoubleLinearTimeInterpolateOp_8h" name="FaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a9c834db16d98caafcb9e8e0dd101e7c9</anchor>
      <arglist>(lintimeintfacedoub1d, LINTIMEINTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceFloatConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceFloatConstantRefine_8C</filename>
    <includes id="FaceFloatConstantRefine_8h" name="FaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceFloatConstantRefine_8C.html</anchorfile>
      <anchor>a67bb4f683f2e7396cf25dd0e32204dbc</anchor>
      <arglist>(conreffaceflot1d, CONREFFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceFloatConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceFloatConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="FaceFloatLinearTimeInterpolateOp_8h" name="FaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/FaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>aa0511083e75a2248bbf0086ac88ebcf3</anchor>
      <arglist>(lintimeintfacefloat1d, LINTIMEINTFACEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceGeometry_8C</filename>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="FaceGeometry_8I" name="FaceGeometry.I" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceGeometry_8h</filename>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIndex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIndex_8C</filename>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceIndex_8I" name="FaceIndex.I" local="yes" imported="no">SAMRAI/pdat/FaceIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>FaceIndex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <class kind="class">SAMRAI::pdat::FaceIndex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIndex.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIntegerConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIntegerConstantRefine_8C</filename>
    <includes id="FaceIntegerConstantRefine_8h" name="FaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/FaceIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>FaceIntegerConstantRefine_8C.html</anchorfile>
      <anchor>a549c541dd82ee2f112fe821bd1844bcc</anchor>
      <arglist>(conreffaceintg1d, CONREFFACEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FaceIntegerConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIntegerConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <class kind="class">SAMRAI::pdat::FaceIntegerConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIterator_8C</filename>
    <includes id="FaceIterator_8h" name="FaceIterator.h" local="yes" imported="no">SAMRAI/pdat/FaceIterator.h</includes>
    <includes id="FaceIterator_8I" name="FaceIterator.I" local="yes" imported="no">SAMRAI/pdat/FaceIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>FaceIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIterator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <class kind="class">SAMRAI::pdat::FaceIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceOverlap.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceOverlap_8C</filename>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="FaceOverlap_8I" name="FaceOverlap.I" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceOverlap.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::FaceOverlap</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceOverlap.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceOverlap_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceVariable_8C</filename>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FaceVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FaceVariable_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <class kind="class">SAMRAI::pdat::FaceVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellNoCornersVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellNoCornersVariableFillPattern_8C</filename>
    <includes id="FirstLayerCellNoCornersVariableFillPattern_8h" name="FirstLayerCellNoCornersVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/FirstLayerCellNoCornersVariableFillPattern.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellNoCornersVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellNoCornersVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::pdat::FirstLayerCellNoCornersVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_pdat_FirstLayerCellNoCornersVariableFillPattern</name>
      <anchorfile>FirstLayerCellNoCornersVariableFillPattern_8h.html</anchorfile>
      <anchor>a6af79047bcd3f500217254b8c9d7b353</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellVariableFillPattern_8C</filename>
    <includes id="FirstLayerCellVariableFillPattern_8h" name="FirstLayerCellVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/FirstLayerCellVariableFillPattern.h</includes>
    <includes id="CellGeometry_8h" name="CellGeometry.h" local="yes" imported="no">SAMRAI/pdat/CellGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerCellVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FirstLayerCellVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::pdat::FirstLayerCellVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerNodeVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FirstLayerNodeVariableFillPattern_8C</filename>
    <includes id="FirstLayerNodeVariableFillPattern_8h" name="FirstLayerNodeVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/FirstLayerNodeVariableFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>FirstLayerNodeVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>FirstLayerNodeVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::pdat::FirstLayerNodeVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexData_8C</filename>
    <includes id="IndexData_8h" name="IndexData.h" local="yes" imported="no">SAMRAI/pdat/IndexData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="IndexData_8I" name="IndexData.I" local="yes" imported="no">SAMRAI/pdat/IndexData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexData_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::pdat::IndexData</class>
    <class kind="class">SAMRAI::pdat::IndexDataNode</class>
    <class kind="class">SAMRAI::pdat::IndexIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexDataFactory_8C</filename>
    <includes id="IndexDataFactory_8h" name="IndexDataFactory.h" local="yes" imported="no">SAMRAI/pdat/IndexDataFactory.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IndexData_8h" name="IndexData.h" local="yes" imported="no">SAMRAI/pdat/IndexData.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::IndexDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexVariable_8C</filename>
    <includes id="IndexVariable_8h" name="IndexVariable.h" local="yes" imported="no">SAMRAI/pdat/IndexVariable.h</includes>
    <includes id="IndexDataFactory_8h" name="IndexDataFactory.h" local="yes" imported="no">SAMRAI/pdat/IndexDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IndexVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IndexVariable_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <class kind="class">SAMRAI::pdat::IndexVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IntegerAttributeId.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IntegerAttributeId_8C</filename>
    <includes id="IntegerAttributeId_8h" name="IntegerAttributeId.h" local="yes" imported="no">SAMRAI/pdat/IntegerAttributeId.h</includes>
    <includes id="IntegerAttributeId_8I" name="IntegerAttributeId.I" local="yes" imported="no">SAMRAI/pdat/IntegerAttributeId.I</includes>
  </compound>
  <compound kind="file">
    <name>IntegerAttributeId.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IntegerAttributeId_8h</filename>
    <class kind="class">SAMRAI::pdat::IntegerAttributeId</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>IntegerAttributeId.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>IntegerAttributeId_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MDA_Access.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MDA__Access_8h</filename>
    <class kind="class">MDA_IndexRange</class>
    <class kind="class">MDA_OrderRowMajor</class>
    <class kind="class">MDA_OrderColMajor</class>
    <class kind="class">MDA_Access</class>
    <class kind="class">MDA_AccessConst</class>
  </compound>
  <compound kind="file">
    <name>MultiblockCellDataTranslator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockCellDataTranslator_8C</filename>
    <includes id="MultiblockCellDataTranslator_8h" name="MultiblockCellDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockCellDataTranslator.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockCellDataTranslator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockCellDataTranslator_8h</filename>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <class kind="class">SAMRAI::pdat::MultiblockCellDataTranslator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockEdgeDataTranslator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockEdgeDataTranslator_8C</filename>
    <includes id="MultiblockEdgeDataTranslator_8h" name="MultiblockEdgeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockEdgeDataTranslator.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockEdgeDataTranslator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockEdgeDataTranslator_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <class kind="class">SAMRAI::pdat::MultiblockEdgeDataTranslator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockFaceDataTranslator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockFaceDataTranslator_8C</filename>
    <includes id="MultiblockFaceDataTranslator_8h" name="MultiblockFaceDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockFaceDataTranslator.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockFaceDataTranslator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockFaceDataTranslator_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <class kind="class">SAMRAI::pdat::MultiblockFaceDataTranslator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockNodeDataTranslator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockNodeDataTranslator_8C</filename>
    <includes id="MultiblockNodeDataTranslator_8h" name="MultiblockNodeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockNodeDataTranslator.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockNodeDataTranslator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockNodeDataTranslator_8h</filename>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <class kind="class">SAMRAI::pdat::MultiblockNodeDataTranslator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockSideDataTranslator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockSideDataTranslator_8C</filename>
    <includes id="MultiblockSideDataTranslator_8h" name="MultiblockSideDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockSideDataTranslator.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>MultiblockSideDataTranslator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>MultiblockSideDataTranslator_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="MultiblockDataTranslator_8h" name="MultiblockDataTranslator.h" local="yes" imported="no">SAMRAI/hier/MultiblockDataTranslator.h</includes>
    <class kind="class">SAMRAI::pdat::MultiblockSideDataTranslator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeComplexInjection.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeComplexInjection_8C</filename>
    <includes id="NodeComplexInjection_8h" name="NodeComplexInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexInjection.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeComplexInjection_8C.html</anchorfile>
      <anchor>abdfd891bb8398586fefefad2a1cc138f</anchor>
      <arglist>(conavgnodecplx1d, CONAVGNODECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeComplexInjection.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeComplexInjection_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeComplexInjection</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="NodeComplexLinearTimeInterpolateOp_8h" name="NodeComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a5319893a58256207e2f7624c0e4a9673</anchor>
      <arglist>(lintimeintnodecmplx1d, LINTIMEINTNODECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <class kind="class">SAMRAI::pdat::NodeComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeData_8C</filename>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeData_8I" name="NodeData.I" local="yes" imported="no">SAMRAI/pdat/NodeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeIterator_8h" name="NodeIterator.h" local="yes" imported="no">SAMRAI/pdat/NodeIterator.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDataFactory_8C</filename>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="OuternodeDataFactory_8h" name="OuternodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="NodeDataFactory_8I" name="NodeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDataFactory_8h</filename>
    <includes id="MultiblockNodeDataTranslator_8h" name="MultiblockNodeDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockNodeDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDoubleInjection.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleInjection_8C</filename>
    <includes id="NodeDoubleInjection_8h" name="NodeDoubleInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleInjection.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeDoubleInjection_8C.html</anchorfile>
      <anchor>ab8072ed40301710ae0a3a754bc945aa0</anchor>
      <arglist>(conavgnodedoub1d, CONAVGNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeDoubleInjection.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleInjection_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeDoubleInjection</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="NodeDoubleLinearTimeInterpolateOp_8h" name="NodeDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a9ad70b61c8e2ffa859e220504d068867</anchor>
      <arglist>(lintimeintnodedoub1d, LINTIMEINTNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeFloatInjection.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeFloatInjection_8C</filename>
    <includes id="NodeFloatInjection_8h" name="NodeFloatInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatInjection.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeFloatInjection_8C.html</anchorfile>
      <anchor>a5c2ddcc27da0fe3179004d2b3d6d5695</anchor>
      <arglist>(conavgnodeflot1d, CONAVGNODEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeFloatInjection.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeFloatInjection_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeFloatInjection</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="NodeFloatLinearTimeInterpolateOp_8h" name="NodeFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/NodeFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>aa33a8d086b9e0052aef29c4aa79c855a</anchor>
      <arglist>(lintimeintnodefloat1d, LINTIMEINTNODEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <class kind="class">SAMRAI::pdat::NodeFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeGeometry_8C</filename>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="NodeGeometry_8I" name="NodeGeometry.I" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeGeometry_8h</filename>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIndex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIndex_8C</filename>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeIndex_8I" name="NodeIndex.I" local="yes" imported="no">SAMRAI/pdat/NodeIndex.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIndex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <class kind="class">SAMRAI::pdat::NodeIndex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIndex.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIntegerInjection.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIntegerInjection_8C</filename>
    <includes id="NodeIntegerInjection_8h" name="NodeIntegerInjection.h" local="yes" imported="no">SAMRAI/pdat/NodeIntegerInjection.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>NodeIntegerInjection_8C.html</anchorfile>
      <anchor>a1f9b97dd05d15776dc1839b91ca7d53f</anchor>
      <arglist>(conavgnodeintg1d, CONAVGNODEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NodeIntegerInjection.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIntegerInjection_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <class kind="class">SAMRAI::pdat::NodeIntegerInjection</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIterator_8C</filename>
    <includes id="NodeIterator_8h" name="NodeIterator.h" local="yes" imported="no">SAMRAI/pdat/NodeIterator.h</includes>
    <includes id="NodeIterator_8I" name="NodeIterator.I" local="yes" imported="no">SAMRAI/pdat/NodeIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>NodeIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIterator_8h</filename>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <class kind="class">SAMRAI::pdat::NodeIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeOverlap.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeOverlap_8C</filename>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="NodeOverlap_8I" name="NodeOverlap.I" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeOverlap.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::NodeOverlap</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeOverlap.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeOverlap_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeVariable_8C</filename>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>NodeVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>NodeVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::NodeVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeData_8C</filename>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="OuteredgeGeometry_8h" name="OuteredgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuteredgeData_8I" name="OuteredgeData.I" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="EdgeData_8h" name="EdgeData.h" local="yes" imported="no">SAMRAI/pdat/EdgeData.h</includes>
    <includes id="EdgeIndex_8h" name="EdgeIndex.h" local="yes" imported="no">SAMRAI/pdat/EdgeIndex.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuteredgeData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeDataFactory_8C</filename>
    <includes id="EdgeDataFactory_8h" name="EdgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/EdgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="OuteredgeData_8h" name="OuteredgeData.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeData.h</includes>
    <includes id="OuteredgeDataFactory_8h" name="OuteredgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.h</includes>
    <includes id="OuteredgeGeometry_8h" name="OuteredgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="OuteredgeDataFactory_8I" name="OuteredgeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuteredgeDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeGeometry_8C</filename>
    <includes id="OuteredgeGeometry_8h" name="OuteredgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.h</includes>
    <includes id="EdgeGeometry_8h" name="EdgeGeometry.h" local="yes" imported="no">SAMRAI/pdat/EdgeGeometry.h</includes>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuteredgeGeometry_8I" name="OuteredgeGeometry.I" local="yes" imported="no">SAMRAI/pdat/OuteredgeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeGeometry_8h</filename>
    <includes id="EdgeOverlap_8h" name="EdgeOverlap.h" local="yes" imported="no">SAMRAI/pdat/EdgeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuteredgeGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeVariable_8C</filename>
    <includes id="OuteredgeVariable_8h" name="OuteredgeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeVariable.h</includes>
    <includes id="OuteredgeDataFactory_8h" name="OuteredgeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuteredgeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuteredgeVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuteredgeVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::OuteredgeVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexConstantRefine_8C</filename>
    <includes id="OuterfaceComplexConstantRefine_8h" name="OuterfaceComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceComplexConstantRefine_8C.html</anchorfile>
      <anchor>afc5ecaf99d31083174614311b5e69acf</anchor>
      <arglist>(conrefoutfacecplx1d, CONREFOUTFACECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="OuterfaceComplexLinearTimeInterpolateOp_8h" name="OuterfaceComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a5ec1ff319598b3bc5e09c1496d038cc5</anchor>
      <arglist>(lintimeintoutfacecmplx1d, LINTIMEINTOUTFACECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceData_8C</filename>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuterfaceData_8I" name="OuterfaceData.I" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="FaceData_8h" name="FaceData.h" local="yes" imported="no">SAMRAI/pdat/FaceData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDataFactory_8C</filename>
    <includes id="OuterfaceDataFactory_8h" name="OuterfaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceGeometry_8h" name="OuterfaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="FaceDataFactory_8h" name="FaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/FaceDataFactory.h</includes>
    <includes id="OuterfaceDataFactory_8I" name="OuterfaceDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleConstantRefine_8C</filename>
    <includes id="OuterfaceDoubleConstantRefine_8h" name="OuterfaceDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceDoubleConstantRefine_8C.html</anchorfile>
      <anchor>a54d209353e7987ac6cc86dc0778ca43f</anchor>
      <arglist>(conrefoutfacedoub1d, CONREFOUTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="OuterfaceDoubleLinearTimeInterpolateOp_8h" name="OuterfaceDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a968c75d719ca26a9a675174fc0a8d34a</anchor>
      <arglist>(lintimeintoutfacedoub1d, LINTIMEINTOUTFACEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatConstantRefine_8C</filename>
    <includes id="OuterfaceFloatConstantRefine_8h" name="OuterfaceFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceFloatConstantRefine_8C.html</anchorfile>
      <anchor>a14e95e2269ef2a46ecfa7e8a16335453</anchor>
      <arglist>(conrefoutfaceflot1d, CONREFOUTFACEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="OuterfaceFloatLinearTimeInterpolateOp_8h" name="OuterfaceFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceFloatLinearTimeInterpolateOp.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a22284a727f3d7c326c73834d96e1b109</anchor>
      <arglist>(lintimeintoutfacefloat1d, LINTIMEINTOUTFACEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceGeometry_8C</filename>
    <includes id="OuterfaceGeometry_8h" name="OuterfaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceGeometry.h</includes>
    <includes id="FaceGeometry_8h" name="FaceGeometry.h" local="yes" imported="no">SAMRAI/pdat/FaceGeometry.h</includes>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuterfaceGeometry_8I" name="OuterfaceGeometry.I" local="yes" imported="no">SAMRAI/pdat/OuterfaceGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceGeometry_8h</filename>
    <includes id="FaceOverlap_8h" name="FaceOverlap.h" local="yes" imported="no">SAMRAI/pdat/FaceOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceIntegerConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceIntegerConstantRefine_8C</filename>
    <includes id="OuterfaceIntegerConstantRefine_8h" name="OuterfaceIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuterfaceIntegerConstantRefine_8C.html</anchorfile>
      <anchor>aa6c1ec5201a1c27b02ac52619bb61c12</anchor>
      <arglist>(conrefoutfaceintg1d, CONREFOUTFACEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuterfaceIntegerConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceIntegerConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceIntegerConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceVariable_8C</filename>
    <includes id="OuterfaceVariable_8h" name="OuterfaceVariable.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceVariable.h</includes>
    <includes id="OuterfaceDataFactory_8h" name="OuterfaceDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuterfaceVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuterfaceVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::OuterfaceVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeData_8C</filename>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuternodeData_8I" name="OuternodeData.I" local="yes" imported="no">SAMRAI/pdat/OuternodeData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeData_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="NodeIndex_8h" name="NodeIndex.h" local="yes" imported="no">SAMRAI/pdat/NodeIndex.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuternodeData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeDataFactory_8C</filename>
    <includes id="OuternodeDataFactory_8h" name="OuternodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="NodeDataFactory_8h" name="NodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/NodeDataFactory.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeGeometry_8h" name="OuternodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuternodeGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="OuternodeDataFactory_8I" name="OuternodeDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuternodeDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeDoubleConstantCoarsen.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeDoubleConstantCoarsen_8C</filename>
    <includes id="OuternodeDoubleConstantCoarsen_8h" name="OuternodeDoubleConstantCoarsen.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDoubleConstantCoarsen.h</includes>
    <includes id="OuternodeData_8h" name="OuternodeData.h" local="yes" imported="no">SAMRAI/pdat/OuternodeData.h</includes>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OuternodeDoubleConstantCoarsen_8C.html</anchorfile>
      <anchor>ae1358db83415ee3095867a77ddd84195</anchor>
      <arglist>(conavgouternodedoub1d, CONAVGOUTERNODEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OuternodeDoubleConstantCoarsen.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeDoubleConstantCoarsen_8h</filename>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuternodeDoubleConstantCoarsen</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeGeometry_8C</filename>
    <includes id="OuternodeGeometry_8h" name="OuternodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/OuternodeGeometry.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OuternodeGeometry_8I" name="OuternodeGeometry.I" local="yes" imported="no">SAMRAI/pdat/OuternodeGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeGeometry_8h</filename>
    <includes id="NodeOverlap_8h" name="NodeOverlap.h" local="yes" imported="no">SAMRAI/pdat/NodeOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OuternodeGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeVariable_8C</filename>
    <includes id="OuternodeVariable_8h" name="OuternodeVariable.h" local="yes" imported="no">SAMRAI/pdat/OuternodeVariable.h</includes>
    <includes id="OuternodeDataFactory_8h" name="OuternodeDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OuternodeDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OuternodeVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OuternodeVariable_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <class kind="class">SAMRAI::pdat::OuternodeVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="OutersideComplexLinearTimeInterpolateOp_8h" name="OutersideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OutersideComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>aa495462ef08b3d6c411015c58af20af0</anchor>
      <arglist>(lintimeintoutsidecmplx1d, LINTIMEINTOUTSIDECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OutersideComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideData_8C</filename>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OutersideData_8I" name="OutersideData.I" local="yes" imported="no">SAMRAI/pdat/OutersideData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideIterator_8h" name="SideIterator.h" local="yes" imported="no">SAMRAI/pdat/SideIterator.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideDataFactory_8C</filename>
    <includes id="OutersideDataFactory_8h" name="OutersideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideGeometry_8h" name="OutersideGeometry.h" local="yes" imported="no">SAMRAI/pdat/OutersideGeometry.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="OutersideDataFactory_8I" name="OutersideDataFactory.I" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideDataFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="OutersideDoubleLinearTimeInterpolateOp_8h" name="OutersideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OutersideDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>adbf66da1e38e2e3b910e0e6b36a9cbc2</anchor>
      <arglist>(lintimeintoutsidedoub1d, LINTIMEINTOUTSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OutersideDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="OutersideFloatLinearTimeInterpolateOp_8h" name="OutersideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/OutersideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>OutersideFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a599136d7de497bb4c7527f9b8829675f</anchor>
      <arglist>(lintimeintoutsidefloat1d, LINTIMEINTOUTSIDEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>OutersideFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideGeometry_8C</filename>
    <includes id="OutersideGeometry_8h" name="OutersideGeometry.h" local="yes" imported="no">SAMRAI/pdat/OutersideGeometry.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="OutersideGeometry_8I" name="OutersideGeometry.I" local="yes" imported="no">SAMRAI/pdat/OutersideGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideGeometry_8h</filename>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideVariable_8C</filename>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="OutersideDataFactory_8h" name="OutersideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>OutersideVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>OutersideVariable_8h</filename>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::OutersideVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeNoCornersVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeNoCornersVariableFillPattern_8C</filename>
    <includes id="SecondLayerNodeNoCornersVariableFillPattern_8h" name="SecondLayerNodeNoCornersVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/SecondLayerNodeNoCornersVariableFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeNoCornersVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeNoCornersVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeNoCornersVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeVariableFillPattern_8C</filename>
    <includes id="SecondLayerNodeVariableFillPattern_8h" name="SecondLayerNodeVariableFillPattern.h" local="yes" imported="no">SAMRAI/pdat/SecondLayerNodeVariableFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="NodeGeometry_8h" name="NodeGeometry.h" local="yes" imported="no">SAMRAI/pdat/NodeGeometry.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SecondLayerNodeVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SecondLayerNodeVariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideComplexConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideComplexConstantRefine_8C</filename>
    <includes id="SideComplexConstantRefine_8h" name="SideComplexConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideComplexConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideComplexConstantRefine_8C.html</anchorfile>
      <anchor>a92d6eb9166ce187e5a56d3d1933b93e6</anchor>
      <arglist>(conrefsidecplx1d, CONREFSIDECPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideComplexConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideComplexConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <class kind="class">SAMRAI::pdat::SideComplexConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideComplexLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideComplexLinearTimeInterpolateOp_8C</filename>
    <includes id="SideComplexLinearTimeInterpolateOp_8h" name="SideComplexLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideComplexLinearTimeInterpolateOp.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideComplexLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>aa42eae2f4c366a7af521de808ea7e473</anchor>
      <arglist>(lintimeintsidecmplx1d, LINTIMEINTSIDECMPLX1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideComplexLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideComplexLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideComplexLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideData_8C</filename>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideData_8I" name="SideData.I" local="yes" imported="no">SAMRAI/pdat/SideData.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideData_8h</filename>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideIterator_8h" name="SideIterator.h" local="yes" imported="no">SAMRAI/pdat/SideIterator.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideData</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDataFactory_8C</filename>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="OutersideDataFactory_8h" name="OutersideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/OutersideDataFactory.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="SideDataFactory_8I" name="SideDataFactory.I" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDataFactory_8h</filename>
    <includes id="MultiblockSideDataTranslator_8h" name="MultiblockSideDataTranslator.h" local="yes" imported="no">SAMRAI/pdat/MultiblockSideDataTranslator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideDataFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDataFactory.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDataFactory_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDoubleConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDoubleConstantRefine_8C</filename>
    <includes id="SideDoubleConstantRefine_8h" name="SideDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideDoubleConstantRefine_8C.html</anchorfile>
      <anchor>aaf6b78b2f60762cfc943cd8051e6d654</anchor>
      <arglist>(conrefsidedoub1d, CONREFSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideDoubleConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDoubleConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideDoubleConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideDoubleLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDoubleLinearTimeInterpolateOp_8C</filename>
    <includes id="SideDoubleLinearTimeInterpolateOp_8h" name="SideDoubleLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideDoubleLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideDoubleLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a844ac52bb0858aa0f4dd9e2db98cbb3b</anchor>
      <arglist>(lintimeintsidedoub1d, LINTIMEINTSIDEDOUB1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideDoubleLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideDoubleLinearTimeInterpolateOp_8h</filename>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideDoubleLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideFloatConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideFloatConstantRefine_8C</filename>
    <includes id="SideFloatConstantRefine_8h" name="SideFloatConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideFloatConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideFloatConstantRefine_8C.html</anchorfile>
      <anchor>acf2d04ffd824b0654a03072cfecb2aaf</anchor>
      <arglist>(conrefsideflot1d, CONREFSIDEFLOT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideFloatConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideFloatConstantRefine_8h</filename>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideFloatConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideFloatLinearTimeInterpolateOp.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideFloatLinearTimeInterpolateOp_8C</filename>
    <includes id="SideFloatLinearTimeInterpolateOp_8h" name="SideFloatLinearTimeInterpolateOp.h" local="yes" imported="no">SAMRAI/pdat/SideFloatLinearTimeInterpolateOp.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideFloatLinearTimeInterpolateOp_8C.html</anchorfile>
      <anchor>a7b78a36359d4895f1aaaf06cd181adf6</anchor>
      <arglist>(lintimeintsidefloat1d, LINTIMEINTSIDEFLOAT1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideFloatLinearTimeInterpolateOp.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideFloatLinearTimeInterpolateOp_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <class kind="class">SAMRAI::pdat::SideFloatLinearTimeInterpolateOp</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideGeometry.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideGeometry_8C</filename>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SideGeometry_8I" name="SideGeometry.I" local="yes" imported="no">SAMRAI/pdat/SideGeometry.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideGeometry.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideGeometry_8h</filename>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideGeometry</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideGeometry.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideGeometry_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIndex.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIndex_8C</filename>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideIndex_8I" name="SideIndex.I" local="yes" imported="no">SAMRAI/pdat/SideIndex.I</includes>
  </compound>
  <compound kind="file">
    <name>SideIndex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIndex_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <class kind="class">SAMRAI::pdat::SideIndex</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIndex.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIndex_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIntegerConstantRefine.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIntegerConstantRefine_8C</filename>
    <includes id="SideIntegerConstantRefine_8h" name="SideIntegerConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/SideIntegerConstantRefine.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>SideIntegerConstantRefine_8C.html</anchorfile>
      <anchor>a0e270fc6b4dbadcb8cf5d955ff227381</anchor>
      <arglist>(conrefsideintg1d, CONREFSIDEINTG1D) const</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SideIntegerConstantRefine.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIntegerConstantRefine_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <class kind="class">SAMRAI::pdat::SideIntegerConstantRefine</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIterator.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIterator_8C</filename>
    <includes id="SideIterator_8h" name="SideIterator.h" local="yes" imported="no">SAMRAI/pdat/SideIterator.h</includes>
    <includes id="SideIterator_8I" name="SideIterator.I" local="yes" imported="no">SAMRAI/pdat/SideIterator.I</includes>
  </compound>
  <compound kind="file">
    <name>SideIterator.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIterator_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="SideGeometry_8h" name="SideGeometry.h" local="yes" imported="no">SAMRAI/pdat/SideGeometry.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <class kind="class">SAMRAI::pdat::SideIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideIterator.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideIterator_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideOverlap.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideOverlap_8C</filename>
    <includes id="SideOverlap_8h" name="SideOverlap.h" local="yes" imported="no">SAMRAI/pdat/SideOverlap.h</includes>
    <includes id="SideOverlap_8I" name="SideOverlap.I" local="yes" imported="no">SAMRAI/pdat/SideOverlap.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideOverlap.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideOverlap_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainer_8h" name="BoxContainer.h" local="yes" imported="no">SAMRAI/hier/BoxContainer.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::pdat::SideOverlap</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideOverlap.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideOverlap_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideVariable_8C</filename>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="SideDataFactory_8h" name="SideDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SideDataFactory.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SideVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SideVariable_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::pdat::SideVariable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SparseData.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseData_8C</filename>
    <includes id="SparseData_8h" name="SparseData.h" local="yes" imported="no">SAMRAI/pdat/SparseData.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseData.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseData_8h</filename>
  </compound>
  <compound kind="file">
    <name>SparseData.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseData_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SparseDataFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseDataFactory_8C</filename>
    <includes id="SparseDataFactory_8h" name="SparseDataFactory.h" local="yes" imported="no">SAMRAI/pdat/SparseDataFactory.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseDataFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseDataFactory_8h</filename>
  </compound>
  <compound kind="file">
    <name>SparseDataVariable.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseDataVariable_8C</filename>
    <includes id="SparseDataVariable_8h" name="SparseDataVariable.h" local="yes" imported="no">SAMRAI/pdat/SparseDataVariable.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseDataVariable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SparseDataVariable_8h</filename>
  </compound>
  <compound kind="file">
    <name>SumOperation.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SumOperation_8C</filename>
    <includes id="SumOperation_8h" name="SumOperation.h" local="yes" imported="no">SAMRAI/pdat/SumOperation.h</includes>
    <includes id="SumOperation_8I" name="SumOperation.I" local="yes" imported="no">SAMRAI/pdat/SumOperation.I</includes>
  </compound>
  <compound kind="file">
    <name>SumOperation.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SumOperation_8h</filename>
    <class kind="class">SAMRAI::pdat::SumOperation</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>SumOperation.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/</path>
    <filename>SumOperation_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianRobinBcHelper.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CartesianRobinBcHelper_8C</filename>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="PatchCellDataOpsReal_8h" name="PatchCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/PatchCellDataOpsReal.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CartesianRobinBcHelper_8h" name="CartesianRobinBcHelper.h" local="yes" imported="no">SAMRAI/solv/CartesianRobinBcHelper.h</includes>
    <includes id="CartesianRobinBcHelper_8I" name="CartesianRobinBcHelper.I" local="yes" imported="no">SAMRAI/solv/CartesianRobinBcHelper.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CartesianRobinBcHelper_8C.html</anchorfile>
      <anchor>a6f3f75196ad5278abb04cde08e0af7ec</anchor>
      <arglist>(settype1cells2d, SETTYPE1CELLS2D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CartesianRobinBcHelper.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CartesianRobinBcHelper_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="NodeData_8h" name="NodeData.h" local="yes" imported="no">SAMRAI/pdat/NodeData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::CartesianRobinBcHelper</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CartesianRobinBcHelper.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CartesianRobinBcHelper_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACOps.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACOps_8C</filename>
    <includes id="CellPoissonFACOps_8h" name="CellPoissonFACOps.h" local="yes" imported="no">SAMRAI/solv/CellPoissonFACOps.h</includes>
    <includes id="BoundaryBoxUtils_8h" name="BoundaryBoxUtils.h" local="yes" imported="no">SAMRAI/hier/BoundaryBoxUtils.h</includes>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="CellPoissonHypreSolver_8h" name="CellPoissonHypreSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="CellPoissonFACOps_8I" name="CellPoissonFACOps.I" local="yes" imported="no">SAMRAI/solv/CellPoissonFACOps.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>namespaceSAMRAI_1_1solv.html</anchorfile>
      <anchor>a046930b1fb6beb06e2c9cc852e7f8a66</anchor>
      <arglist>(compfluxvardc2d, COMPFLUXVARDC2D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACOps.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACOps_8h</filename>
    <includes id="CartesianRobinBcHelper_8h" name="CartesianRobinBcHelper.h" local="yes" imported="no">SAMRAI/solv/CartesianRobinBcHelper.h</includes>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="FACOperatorStrategy_8h" name="FACOperatorStrategy.h" local="yes" imported="no">SAMRAI/solv/FACOperatorStrategy.h</includes>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="CellPoissonHypreSolver_8h" name="CellPoissonHypreSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="CellDoubleConstantRefine_8h" name="CellDoubleConstantRefine.h" local="yes" imported="no">SAMRAI/pdat/CellDoubleConstantRefine.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::solv::CellPoissonFACOps</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACOps.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACOps_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACSolver.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACSolver_8C</filename>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="CellPoissonFACSolver_8h" name="CellPoissonFACSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonFACSolver.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="CellPoissonFACSolver_8I" name="CellPoissonFACSolver.I" local="yes" imported="no">SAMRAI/solv/CellPoissonFACSolver.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACSolver.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACSolver_8h</filename>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="CellPoissonFACOps_8h" name="CellPoissonFACOps.h" local="yes" imported="no">SAMRAI/solv/CellPoissonFACOps.h</includes>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8h" name="SimpleCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::CellPoissonFACSolver</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonFACSolver.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonFACSolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CellPoissonHypreSolver.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonHypreSolver_8C</filename>
    <includes id="CellPoissonHypreSolver_8h" name="CellPoissonHypreSolver.h" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="CartesianGridGeometry_8h" name="CartesianGridGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianGridGeometry.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="PatchSideDataBasicOps_8h" name="PatchSideDataBasicOps.h" local="yes" imported="no">SAMRAI/math/PatchSideDataBasicOps.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="CellIndex_8h" name="CellIndex.h" local="yes" imported="no">SAMRAI/pdat/CellIndex.h</includes>
    <includes id="CellIterator_8h" name="CellIterator.h" local="yes" imported="no">SAMRAI/pdat/CellIterator.h</includes>
    <includes id="FaceIndex_8h" name="FaceIndex.h" local="yes" imported="no">SAMRAI/pdat/FaceIndex.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SideIndex_8h" name="SideIndex.h" local="yes" imported="no">SAMRAI/pdat/SideIndex.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="OutersideData_8h" name="OutersideData.h" local="yes" imported="no">SAMRAI/pdat/OutersideData.h</includes>
    <includes id="BoundaryBoxUtils_8h" name="BoundaryBoxUtils.h" local="yes" imported="no">SAMRAI/hier/BoundaryBoxUtils.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CellPoissonHypreSolver_8I" name="CellPoissonHypreSolver.I" local="yes" imported="no">SAMRAI/solv/CellPoissonHypreSolver.I</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>CellPoissonHypreSolver_8C.html</anchorfile>
      <anchor>a1d6cc5cd5aac4827ba89a3bf0aa84a64</anchor>
      <arglist>(compdiagvariablec2d, COMPDIAGVARIABLEC2D)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellPoissonHypreSolver.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonHypreSolver_8h</filename>
    <includes id="GhostCellRobinBcCoefs_8h" name="GhostCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/GhostCellRobinBcCoefs.h</includes>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8h" name="SimpleCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="OutersideVariable_8h" name="OutersideVariable.h" local="yes" imported="no">SAMRAI/pdat/OutersideVariable.h</includes>
    <includes id="CoarseFineBoundary_8h" name="CoarseFineBoundary.h" local="yes" imported="no">SAMRAI/hier/CoarseFineBoundary.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="VariableContext_8h" name="VariableContext.h" local="yes" imported="no">SAMRAI/hier/VariableContext.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::CellPoissonHypreSolver</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_HYPRE_struct_ls</name>
      <anchorfile>CellPoissonHypreSolver_8h.html</anchorfile>
      <anchor>afc694dff963e8ea2611ff6423fdbc2f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CellPoissonHypreSolver.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CellPoissonHypreSolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CVODEAbstractFunctions.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CVODEAbstractFunctions_8C</filename>
    <includes id="CVODEAbstractFunctions_8h" name="CVODEAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/CVODEAbstractFunctions.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CVODEAbstractFunctions.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CVODEAbstractFunctions_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <class kind="class">SAMRAI::solv::CVODEAbstractFunctions</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>CVODESolver.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CVODESolver_8C</filename>
    <includes id="CVODESolver_8h" name="CVODESolver.h" local="yes" imported="no">SAMRAI/solv/CVODESolver.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CVODESolver_8I" name="CVODESolver.I" local="yes" imported="no">SAMRAI/solv/CVODESolver.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>CVODESolver_8C.html</anchorfile>
      <anchor>ad5d8128cf8f1eb372d5f4e5288822521</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CVODESolver.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CVODESolver_8h</filename>
    <includes id="CVODEAbstractFunctions_8h" name="CVODEAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/CVODEAbstractFunctions.h</includes>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <class kind="class">SAMRAI::solv::CVODESolver</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CVODE_SAMRAI_ERROR</name>
      <anchorfile>CVODESolver_8h.html</anchorfile>
      <anchor>a648f49a7dd2ae5a6d149a5d1975b474d</anchor>
      <arglist>(ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CVODESolver.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>CVODESolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_FAC.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__FAC_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_nonlinear.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__nonlinear_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_petsc.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__petsc_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials_cvode.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials__cvode_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials_kinsol.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials__kinsol_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_packages_sundials_vector.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__packages__sundials__vector_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_poisson.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__poisson_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual_vectors.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>manual__vectors_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACOperatorStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>FACOperatorStrategy_8C</filename>
    <includes id="FACOperatorStrategy_8h" name="FACOperatorStrategy.h" local="yes" imported="no">SAMRAI/solv/FACOperatorStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACOperatorStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>FACOperatorStrategy_8h</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::FACOperatorStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACPreconditioner.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>FACPreconditioner_8C</filename>
    <includes id="HierarchyDataOpsManager_8h" name="HierarchyDataOpsManager.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsManager.h</includes>
    <includes id="FACPreconditioner_8h" name="FACPreconditioner.h" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="FACPreconditioner_8I" name="FACPreconditioner.I" local="yes" imported="no">SAMRAI/solv/FACPreconditioner.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACPreconditioner.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>FACPreconditioner_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="FACOperatorStrategy_8h" name="FACOperatorStrategy.h" local="yes" imported="no">SAMRAI/solv/FACOperatorStrategy.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::FACPreconditioner</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>FACPreconditioner.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>FACPreconditioner_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>GhostCellRobinBcCoefs.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>GhostCellRobinBcCoefs_8C</filename>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="GhostCellRobinBcCoefs_8h" name="GhostCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/GhostCellRobinBcCoefs.h</includes>
    <includes id="GhostCellRobinBcCoefs_8I" name="GhostCellRobinBcCoefs.I" local="yes" imported="no">SAMRAI/solv/GhostCellRobinBcCoefs.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>GhostCellRobinBcCoefs.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>GhostCellRobinBcCoefs_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::solv::GhostCellRobinBcCoefs</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>GhostCellRobinBcCoefs.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>GhostCellRobinBcCoefs_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOL_SAMRAIContext.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOL__SAMRAIContext_8C</filename>
    <includes id="KINSOL__SAMRAIContext_8h" name="KINSOL_SAMRAIContext.h" local="yes" imported="no">SAMRAI/solv/KINSOL_SAMRAIContext.h</includes>
    <includes id="Sundials__SAMRAIVector_8h" name="Sundials_SAMRAIVector.h" local="yes" imported="no">SAMRAI/solv/Sundials_SAMRAIVector.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="KINSOL__SAMRAIContext_8I" name="KINSOL_SAMRAIContext.I" local="yes" imported="no">SAMRAI/solv/KINSOL_SAMRAIContext.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOL_SAMRAIContext.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOL__SAMRAIContext_8h</filename>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <includes id="KINSOLSolver_8h" name="KINSOLSolver.h" local="yes" imported="no">SAMRAI/solv/KINSOLSolver.h</includes>
    <includes id="KINSOLAbstractFunctions_8h" name="KINSOLAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/KINSOLAbstractFunctions.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <class kind="class">SAMRAI::solv::KINSOL_SAMRAIContext</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOL_SAMRAIContext.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOL__SAMRAIContext_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOLAbstractFunctions.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOLAbstractFunctions_8C</filename>
    <includes id="KINSOLAbstractFunctions_8h" name="KINSOLAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/KINSOLAbstractFunctions.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOLAbstractFunctions.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOLAbstractFunctions_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <class kind="class">SAMRAI::solv::KINSOLAbstractFunctions</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>KINSOLSolver.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOLSolver_8C</filename>
    <includes id="KINSOLSolver_8h" name="KINSOLSolver.h" local="yes" imported="no">SAMRAI/solv/KINSOLSolver.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="KINSOLSolver_8I" name="KINSOLSolver.I" local="yes" imported="no">SAMRAI/solv/KINSOLSolver.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>KINSOLSolver_8C.html</anchorfile>
      <anchor>ad5d8128cf8f1eb372d5f4e5288822521</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KINSOLSolver.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOLSolver_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="KINSOLAbstractFunctions_8h" name="KINSOLAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/KINSOLAbstractFunctions.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <class kind="class">SAMRAI::solv::KINSOLSolver</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>KINSOL_SAMRAI_ERROR</name>
      <anchorfile>KINSOLSolver_8h.html</anchorfile>
      <anchor>a4cd1c0396345b09e124730e2ea42e5bc</anchor>
      <arglist>(ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>KINSOLSolver.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>KINSOLSolver_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>LocationIndexRobinBcCoefs.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>LocationIndexRobinBcCoefs_8C</filename>
    <includes id="LocationIndexRobinBcCoefs_8h" name="LocationIndexRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/LocationIndexRobinBcCoefs.h</includes>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="Index_8h" name="Index.h" local="yes" imported="no">SAMRAI/hier/Index.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="LocationIndexRobinBcCoefs_8I" name="LocationIndexRobinBcCoefs.I" local="yes" imported="no">SAMRAI/solv/LocationIndexRobinBcCoefs.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>LocationIndexRobinBcCoefs.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>LocationIndexRobinBcCoefs_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::LocationIndexRobinBcCoefs</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>LocationIndexRobinBcCoefs.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>LocationIndexRobinBcCoefs_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>NonlinearSolverStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>NonlinearSolverStrategy_8C</filename>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>NonlinearSolverStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>NonlinearSolverStrategy_8h</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::NonlinearSolverStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>nvector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>nvector_8h</filename>
    <includes id="solv__NVector_8h" name="solv_NVector.h" local="yes" imported="no">SAMRAI/solv/solv_NVector.h</includes>
  </compound>
  <compound kind="file">
    <name>PETSc_SAMRAIVectorReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PETSc__SAMRAIVectorReal_8C</filename>
    <includes id="PETSc__SAMRAIVectorReal_8h" name="PETSc_SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETSc_SAMRAIVectorReal.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="PETSc__SAMRAIVectorReal_8I" name="PETSc_SAMRAIVectorReal.I" local="yes" imported="no">SAMRAI/solv/PETSc_SAMRAIVectorReal.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>PETSc_SAMRAIVectorReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PETSc__SAMRAIVectorReal_8h</filename>
    <includes id="PETScAbstractVectorReal_8h" name="PETScAbstractVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETScAbstractVectorReal.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::PETSc_SAMRAIVectorReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_petsc_vec</name>
      <anchorfile>PETSc__SAMRAIVectorReal_8h.html</anchorfile>
      <anchor>afb6bd8a4755a28576f3f4a41f00ba130</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PETSc_SAMRAIVectorReal.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PETSc__SAMRAIVectorReal_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>C_PSVEC_CAST</name>
      <anchorfile>PETSc__SAMRAIVectorReal_8I.html</anchorfile>
      <anchor>a86f00c14fb40a275f69b98dfb592775d</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PETScAbstractVectorReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PETScAbstractVectorReal_8C</filename>
    <includes id="PETScAbstractVectorReal_8h" name="PETScAbstractVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETScAbstractVectorReal.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PABSVEC_CAST</name>
      <anchorfile>PETScAbstractVectorReal_8C.html</anchorfile>
      <anchor>ade57c6c603abb309848530cbce5e15c6</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PETScAbstractVectorReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PETScAbstractVectorReal_8h</filename>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <class kind="class">SAMRAI::solv::PETScAbstractVectorReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_petsc_vec</name>
      <anchorfile>PETScAbstractVectorReal_8h.html</anchorfile>
      <anchor>afb6bd8a4755a28576f3f4a41f00ba130</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PoissonSpecifications.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PoissonSpecifications_8C</filename>
    <includes id="PoissonSpecifications_8h" name="PoissonSpecifications.h" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.h</includes>
    <includes id="PoissonSpecifications_8I" name="PoissonSpecifications.I" local="yes" imported="no">SAMRAI/solv/PoissonSpecifications.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>PoissonSpecifications.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PoissonSpecifications_8h</filename>
    <class kind="class">SAMRAI::solv::PoissonSpecifications</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>PoissonSpecifications.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>PoissonSpecifications_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>RobinBcCoefStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>RobinBcCoefStrategy_8C</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>RobinBcCoefStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>RobinBcCoefStrategy_8h</filename>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::RobinBcCoefStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAIVectorReal.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SAMRAIVectorReal_8C</filename>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="HierarchyCellDataOpsReal_8h" name="HierarchyCellDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyCellDataOpsReal.h</includes>
    <includes id="HierarchyEdgeDataOpsReal_8h" name="HierarchyEdgeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyEdgeDataOpsReal.h</includes>
    <includes id="HierarchyFaceDataOpsReal_8h" name="HierarchyFaceDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyFaceDataOpsReal.h</includes>
    <includes id="HierarchyNodeDataOpsReal_8h" name="HierarchyNodeDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyNodeDataOpsReal.h</includes>
    <includes id="HierarchySideDataOpsReal_8h" name="HierarchySideDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchySideDataOpsReal.h</includes>
    <includes id="CellVariable_8h" name="CellVariable.h" local="yes" imported="no">SAMRAI/pdat/CellVariable.h</includes>
    <includes id="EdgeVariable_8h" name="EdgeVariable.h" local="yes" imported="no">SAMRAI/pdat/EdgeVariable.h</includes>
    <includes id="FaceVariable_8h" name="FaceVariable.h" local="yes" imported="no">SAMRAI/pdat/FaceVariable.h</includes>
    <includes id="NodeVariable_8h" name="NodeVariable.h" local="yes" imported="no">SAMRAI/pdat/NodeVariable.h</includes>
    <includes id="SideVariable_8h" name="SideVariable.h" local="yes" imported="no">SAMRAI/pdat/SideVariable.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAIVectorReal_8I" name="SAMRAIVectorReal.I" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAIVectorReal.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SAMRAIVectorReal_8h</filename>
    <includes id="HierarchyDataOpsReal_8h" name="HierarchyDataOpsReal.h" local="yes" imported="no">SAMRAI/math/HierarchyDataOpsReal.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Variable_8h" name="Variable.h" local="yes" imported="no">SAMRAI/hier/Variable.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::SAMRAIVectorReal</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAIVectorReal.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SAMRAIVectorReal_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleCellRobinBcCoefs.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SimpleCellRobinBcCoefs_8C</filename>
    <includes id="CartesianPatchGeometry_8h" name="CartesianPatchGeometry.h" local="yes" imported="no">SAMRAI/geom/CartesianPatchGeometry.h</includes>
    <includes id="ArrayDataBasicOps_8h" name="ArrayDataBasicOps.h" local="yes" imported="no">SAMRAI/math/ArrayDataBasicOps.h</includes>
    <includes id="CellData_8h" name="CellData.h" local="yes" imported="no">SAMRAI/pdat/CellData.h</includes>
    <includes id="OuterfaceData_8h" name="OuterfaceData.h" local="yes" imported="no">SAMRAI/pdat/OuterfaceData.h</includes>
    <includes id="SideData_8h" name="SideData.h" local="yes" imported="no">SAMRAI/pdat/SideData.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8h" name="SimpleCellRobinBcCoefs.h" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SimpleCellRobinBcCoefs_8I" name="SimpleCellRobinBcCoefs.I" local="yes" imported="no">SAMRAI/solv/SimpleCellRobinBcCoefs.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleCellRobinBcCoefs.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SimpleCellRobinBcCoefs_8h</filename>
    <includes id="RobinBcCoefStrategy_8h" name="RobinBcCoefStrategy.h" local="yes" imported="no">SAMRAI/solv/RobinBcCoefStrategy.h</includes>
    <includes id="ArrayData_8h" name="ArrayData.h" local="yes" imported="no">SAMRAI/pdat/ArrayData.h</includes>
    <includes id="BoundaryBox_8h" name="BoundaryBox.h" local="yes" imported="no">SAMRAI/hier/BoundaryBox.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::SimpleCellRobinBcCoefs</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SimpleCellRobinBcCoefs.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SimpleCellRobinBcCoefs_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNES_SAMRAIContext.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SNES__SAMRAIContext_8C</filename>
    <includes id="SNES__SAMRAIContext_8h" name="SNES_SAMRAIContext.h" local="yes" imported="no">SAMRAI/solv/SNES_SAMRAIContext.h</includes>
    <includes id="PETSc__SAMRAIVectorReal_8h" name="PETSc_SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/PETSc_SAMRAIVectorReal.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SNES__SAMRAIContext_8I" name="SNES_SAMRAIContext.I" local="yes" imported="no">SAMRAI/solv/SNES_SAMRAIContext.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNES_SAMRAIContext.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SNES__SAMRAIContext_8h</filename>
    <includes id="NonlinearSolverStrategy_8h" name="NonlinearSolverStrategy.h" local="yes" imported="no">SAMRAI/solv/NonlinearSolverStrategy.h</includes>
    <includes id="SNESAbstractFunctions_8h" name="SNESAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/SNESAbstractFunctions.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <class kind="class">SAMRAI::solv::SNES_SAMRAIContext</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_petsc_snes</name>
      <anchorfile>SNES__SAMRAIContext_8h.html</anchorfile>
      <anchor>ad05fa186db4be9f9dcc8346ae6c31612</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SNES_SAMRAIContext.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SNES__SAMRAIContext_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNESAbstractFunctions.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SNESAbstractFunctions_8C</filename>
    <includes id="SNESAbstractFunctions_8h" name="SNESAbstractFunctions.h" local="yes" imported="no">SAMRAI/solv/SNESAbstractFunctions.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>SNESAbstractFunctions.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SNESAbstractFunctions_8h</filename>
    <class kind="class">SAMRAI::solv::SNESAbstractFunctions</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>samrai_included_petsc_snes</name>
      <anchorfile>SNESAbstractFunctions_8h.html</anchorfile>
      <anchor>a6f02ea1f6af43b01db62e3d2c2e98699</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPICH_SKIP_MPICXX</name>
      <anchorfile>SNESAbstractFunctions_8h.html</anchorfile>
      <anchor>a077ffa213bd6af61ce94d0b0e1d4942a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>solv_NVector.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>solv__NVector_8C</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="solv__NVector_8h" name="solv_NVector.h" local="yes" imported="no">SAMRAI/solv/solv_NVector.h</includes>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>solv__NVector_8C.html</anchorfile>
      <anchor>ad5d8128cf8f1eb372d5f4e5288822521</anchor>
      <arglist>(v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>N_VPrint_SAMRAI</name>
      <anchorfile>solv__NVector_8C.html</anchorfile>
      <anchor>a0c59ff774da547e5a08dfb813abb2c88</anchor>
      <arglist>(N_Vector v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>solv_NVector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>solv__NVector_8h</filename>
    <member kind="function">
      <type>void</type>
      <name>N_VPrint_SAMRAI</name>
      <anchorfile>solv__NVector_8h.html</anchorfile>
      <anchor>a0c59ff774da547e5a08dfb813abb2c88</anchor>
      <arglist>(N_Vector v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Sundials_SAMRAIVector.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>Sundials__SAMRAIVector_8C</filename>
    <includes id="Sundials__SAMRAIVector_8h" name="Sundials_SAMRAIVector.h" local="yes" imported="no">SAMRAI/solv/Sundials_SAMRAIVector.h</includes>
    <includes id="Sundials__SAMRAIVector_8I" name="Sundials_SAMRAIVector.I" local="yes" imported="no">SAMRAI/solv/Sundials_SAMRAIVector.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>Sundials_SAMRAIVector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>Sundials__SAMRAIVector_8h</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="SAMRAIVectorReal_8h" name="SAMRAIVectorReal.h" local="yes" imported="no">SAMRAI/solv/SAMRAIVectorReal.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::solv::Sundials_SAMRAIVector</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>Sundials_SAMRAIVector.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>Sundials__SAMRAIVector_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SKVEC_CAST</name>
      <anchorfile>Sundials__SAMRAIVector_8I.html</anchorfile>
      <anchor>ac397a857ff737f614f49b2d3ed1a896a</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SundialsAbstractVector.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SundialsAbstractVector_8C</filename>
    <includes id="SundialsAbstractVector_8h" name="SundialsAbstractVector.h" local="yes" imported="no">SAMRAI/solv/SundialsAbstractVector.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SABSVEC_CAST</name>
      <anchorfile>SundialsAbstractVector_8C.html</anchorfile>
      <anchor>ad5d8128cf8f1eb372d5f4e5288822521</anchor>
      <arglist>(v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SundialsAbstractVector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/</path>
    <filename>SundialsAbstractVector_8h</filename>
    <class kind="class">SAMRAI::solv::SundialsAbstractVector</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
    <member kind="define">
      <type>#define</type>
      <name>included_sundials_nvector</name>
      <anchorfile>SundialsAbstractVector_8h.html</anchorfile>
      <anchor>ab56fafaad1ca481830ae4c465dfd6be4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Array.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Array_8C</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Array_8I" name="Array.I" local="yes" imported="no">SAMRAI/tbox/Array.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Array.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Array_8h</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <class kind="class">SAMRAI::tbox::Array</class>
    <class kind="class">SAMRAI::tbox::Array::DoNotInitialize</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Array.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Array_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ArraySpecial.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ArraySpecial_8C</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommGroup.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommGroup_8C</filename>
    <includes id="AsyncCommGroup_8h" name="AsyncCommGroup.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.h</includes>
    <includes id="AsyncCommGroup_8I" name="AsyncCommGroup.I" local="yes" imported="no">SAMRAI/tbox/AsyncCommGroup.I</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommGroup.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommGroup_8h</filename>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::tbox::AsyncCommGroup</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommGroup.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommGroup_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommPeer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommPeer_8C</filename>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="AsyncCommPeer_8I" name="AsyncCommPeer.I" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommPeer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommPeer_8h</filename>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <class kind="class">SAMRAI::tbox::AsyncCommPeer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommPeer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommPeer_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommStage.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommStage_8C</filename>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>AsyncCommStage.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>AsyncCommStage_8h</filename>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::tbox::AsyncCommStage</class>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Handler</class>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Member</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>BalancedDepthFirstTree.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>BalancedDepthFirstTree_8C</filename>
    <includes id="BalancedDepthFirstTree_8h" name="BalancedDepthFirstTree.h" local="yes" imported="no">SAMRAI/tbox/BalancedDepthFirstTree.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>BalancedDepthFirstTree.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>BalancedDepthFirstTree_8h</filename>
    <class kind="class">SAMRAI::tbox::BalancedDepthFirstTree</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Boost.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Boost_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_BOOST_WARNING_SUPPRESSION</name>
      <anchorfile>Boost_8h.html</anchorfile>
      <anchor>aa19d68dc42f96dc286b26624f326b86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_BOOST_WARNING_SUPPRESSION</name>
      <anchorfile>Boost_8h.html</anchorfile>
      <anchor>a2508b339eb3892bb6560c987fd86ad34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Clock.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Clock_8C</filename>
    <includes id="Clock_8h" name="Clock.h" local="yes" imported="no">SAMRAI/tbox/Clock.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Clock.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Clock_8h</filename>
    <class kind="struct">SAMRAI::tbox::Clock</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Complex.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Complex_8h</filename>
    <member kind="typedef">
      <type>std::complex&lt; double &gt;</type>
      <name>dcomplex</name>
      <anchorfile>Complex_8h.html</anchorfile>
      <anchor>aa7b4cfa83fe868296abd1ba4d67d9563</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConstPointer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ConstPointer_8C</filename>
    <includes id="ConstPointer_8h" name="ConstPointer.h" local="yes" imported="no">SAMRAI/tbox/ConstPointer.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="ConstPointer_8I" name="ConstPointer.I" local="yes" imported="no">SAMRAI/tbox/ConstPointer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ConstPointer_8h</filename>
    <includes id="ConstPointerBase_8h" name="ConstPointerBase.h" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.h</includes>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <class kind="class">SAMRAI::tbox::ConstPointer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ConstPointer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointerBase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ConstPointerBase_8C</filename>
    <includes id="ConstPointerBase_8h" name="ConstPointerBase.h" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.h</includes>
    <includes id="ConstPointerBase_8I" name="ConstPointerBase.I" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointerBase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ConstPointerBase_8h</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <class kind="class">SAMRAI::tbox::ConstPointerBase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ConstPointerBase.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ConstPointerBase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Database_8C</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Database_8I" name="Database.I" local="yes" imported="no">SAMRAI/tbox/Database.I</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Database_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::tbox::Database</class>
    <class kind="class">SAMRAI::tbox::Database::Serializable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Database_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Database_template_methods.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Database__template__methods_8C</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseBox.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>DatabaseBox_8C</filename>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="DatabaseBox_8I" name="DatabaseBox.I" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseBox.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>DatabaseBox_8h</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <class kind="struct">SAMRAI::tbox::DatabaseBox_POD</class>
    <class kind="class">SAMRAI::tbox::DatabaseBox</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DatabaseBox_MAX_DIM</name>
      <anchorfile>DatabaseBox_8h.html</anchorfile>
      <anchor>aac18ded66d2a51f392bc2606a40dc0a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseBox.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>DatabaseBox_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>DatabaseFactory_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <class kind="class">SAMRAI::tbox::DatabaseFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Dimension.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Dimension_8C</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="Dimension_8I" name="Dimension.I" local="yes" imported="no">SAMRAI/tbox/Dimension.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>afb643ccf275c7f30adceb8eb78b4159a</anchor>
      <arglist>(std::ostream &amp;s, const Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Dimension.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Dimension_8h</filename>
    <class kind="class">SAMRAI::tbox::Dimension</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Dimension.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Dimension_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>tbox_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/hier/dox/</path>
    <filename>hier_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::hier</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/dox/</path>
    <filename>xfer_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/math/dox/</path>
    <filename>math_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::math</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/mesh/dox/</path>
    <filename>mesh_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::mesh</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/geom/dox/</path>
    <filename>geom_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::geom</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/solv/dox/</path>
    <filename>solv_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::solv</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/algs/dox/</path>
    <filename>algs_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::algs</namespace>
  </compound>
  <compound kind="file">
    <name>manual.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/appu/dox/</path>
    <filename>appu_2dox_2manual_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="file">
    <name>manual_base.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__base_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_database.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__database_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_inputdb.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__inputdb_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_memory.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__memory_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_parallel.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__parallel_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_restartdb.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__restartdb_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_stream.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__stream_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>manual_timers.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/dox/</path>
    <filename>manual__timers_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Grammar.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Grammar_8C</filename>
    <includes id="Dimension_8h" name="Dimension.h" local="yes" imported="no">SAMRAI/tbox/Dimension.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <class kind="struct">KeyData</class>
    <class kind="union">YYSTYPE</class>
    <class kind="union">yyalloc</class>
    <class kind="struct">arith_functions</class>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a9f092f5b1dca6a6249fb2c7c8065b031</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBISON_VERSION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a72ebd0ca5807efcc6a5ae4fb72dd1553</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSKELETON_NAME</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a50db5aef8c2b6f13961b2480b37f84c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPURE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a9fa797a1f3c4fc9b12d1e4d569612767</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLSP_NEEDED</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abb3943553c2b5e911c89a3ea973d3079</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_AND</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ada3508d0d5e70b42b104a1e87d160a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abb2ddc60c9de325340ae9a0e9338891c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CHAR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae2381f297a8fbb736886d7d1b6b99b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aff53a47def3d299036bf7c298a490319</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>acff7732b9de8b36f0278ef4443978ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a0ef72076529a92a3b8e52fe5691e5342</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_COMMA</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aaac9d99da0dc59197cb3f5e807a72a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DIV</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a40dc75ac1d597229f4006df0211939ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a6e80924a839d0f80571bcd1d2b6ec084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ELSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa12b64ad6852b23d9e8f7114bfdedfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EXP</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a458c449b08071991777e2ebc32aa8e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa152633a83da426890c801b9930f650f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa313da8c1710b9cd86958cf278f3aef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af8ad113d0ebd559f591b7ab51cc1129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa0a59f4b5b2a13f13b90fa02a5b976ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a820771e8572738c211732191bbfe0ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_FALSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a9ab816c37c9173898ff256b7be9e5ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>afb71b00ae386dca61ecd09449a2eb956</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af462c7f74238450849431c331b86c9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MINUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aab33ab20ff3b4b8354b8fc1b47a62281</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MULT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a4d3b3f1c8d8fcc398f4dc6d7c8f5a768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a825c91d636ba331c98c75e70b46afbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae1db4b46669881c57ec6724b6fd07998</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a1162c0bf589783d36a671d3661126866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aec6bdfbf228f69fccc89f852678c1658</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a38fe42a8c140ee84aa4ec588b1265b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a6680e52a42683ab01870e08cb7971be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_PLUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa0d70e9d37b4ca5f1421881aa584532e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae29fad487492f03d459bc7cefe42842f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SEMI</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad4ca6422034cf5300fdd69f9ab083f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_STRING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a22a8c2a4bbaae9b68f65c9bb92fd4e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TRUE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a7fc7e09f45d0ef129ea29f3a5b0c32b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a80ee9e1cd12528def1f8023267e12f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_COMPLEX</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a985d2a9dc008e38fc9c12622e13b1b12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_DOUBLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a34caf7e733629ffc4484bbdd01cf49e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_INTEGER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abdbe3c09620c56673436429fb9540c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_BOOL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a196e697a314e99a9b94e56bc35827ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_BOX</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a91523f7eabb45afa6579f4db1bde990a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_CHAR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a26496b8c5fa1f306dcd3601b2e3e6f91</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KEY_STRING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abb4c27eef3b9a087d8276ad8181e6107</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NUMBER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ac0564a1e18a3f7dd267e6f0aec7ee94e</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROMOTE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa234face701de16fd7530b6a52954c77</anchor>
      <arglist>(X, Y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDEBUG</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a853b3bfad6d2b2ff693dce81182e0c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR_VERBOSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a0943f558a560b9b5fa0593d7e36496c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTOKEN_TABLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a3499e31aa832edc82b632ae811286a4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_T</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a7d535939e93253736c6eeda569d24de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSIZE_MAXIMUM</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ab4bb7ad82d4a7e2df49ff6a8fb484109</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a86f079016f11f0600f4259f3f03f8d43</anchor>
      <arglist>(msgid)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad7d1ef1bbc6adfe69894bc8221f557e1</anchor>
      <arglist>(e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYID</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a0a6ff515042340dd341cf6ca8dd05f2d</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af45042ce56e04d634420d76caeb2ee73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_FREE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a1a9dc526fd390d4808252bd631c4c2f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_ALLOC_MAXIMUM</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a7e55d995c7458f2f4af94a426d0adde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMALLOC</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a573b05852d8f080c907dfba725773d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFREE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ac8adfd73c006c1926f387feb1eced3ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_GAP_MAXIMUM</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>afcd15dd0fa87ffba0371c6d6a0cc9631</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_BYTES</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a40beb355f2cf230a99e2e2bb54909a5a</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYCOPY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad6586b145b5cddce4eec46f35d59b1dd</anchor>
      <arglist>(To, From, Count)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTACK_RELOCATE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ac70c64089ec70937293b65ddbd083412</anchor>
      <arglist>(Stack)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFINAL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a6419f3fd69ecb6b7e063410fd4e73b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLAST</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae67923760a28e3b7ed3aa2cfaef7f9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNTOKENS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a75d260730a6c379a94ea28f63a7b9275</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNNTS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af54ae9e588f0ecc32eabbfdf1959df10</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNRULES</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aceaba8997dc3867478ae3b816647eb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYNSTATES</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a2c387ba2caaade8bf8f78ed30023f79f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYUNDEFTOK</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a926181abd06b6d1df27b6133971c24ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXUTOK</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af3f5ed4bc4517eff0ef1b17541192a58</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTRANSLATE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aad19ee88e33c02c4e720b28f78249bd7</anchor>
      <arglist>(YYX)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPACT_NINF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a62bf0ed0c4360b077071b5cf3177823b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTABLE_NINF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a504faa93b92f37fcc147f68e8d111a1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyerrok</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a20bf055e53dc4fd5afddfd752a4d1adb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyclearin</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a5035d59933b3f5388c44f596145db047</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEMPTY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae59196b3765411a06cf234cf9bcae2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYEOF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a3b1e3628411fabac03abe0a337322016</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYACCEPT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa6c7a65b580c214b2ea832fd7bdd472e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYABORT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a3bcde0b05b9aa4ec5169092d9d211dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERROR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af1eef6197be78122699013d0784acc80</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYFAIL</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a383d9671b1abd97e4c6f3708d1ca32f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRECOVERING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad860e18ca4b79fc589895b531bdb7948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYBACKUP</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>adfcaf974b837e3efc130377e9837b4fd</anchor>
      <arglist>(Token, Value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYTERROR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad2b58b1851184ddb3b60fede50bc7946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYERRCODE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a552f295255821fa7dea11b0237e1d61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYRHSLOC</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ab2b4f027a2b092ac14ca4464e7b3db60</anchor>
      <arglist>(Rhs, K)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLLOC_DEFAULT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a485d38f93de30679900c9cad6e7f3446</anchor>
      <arglist>(Current, Rhs, N)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_LOCATION_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a52c7d936ca7e6c34687ff71f29b8cfd1</anchor>
      <arglist>(File, Loc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYLEX</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a0ea34e09602d1ede033f16ba669ef24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYDPRINTF</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af6d6ca80e87922f90264f1a4a802ea04</anchor>
      <arglist>(Args)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SYMBOL_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a1c510d33cb388afc9411141ba3076a36</anchor>
      <arglist>(Title, Type, Value, Location)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STACK_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a7a52157fbe194e3a347afc4ef750af77</anchor>
      <arglist>(Bottom, Top)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_REDUCE_PRINT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a49ad456240785266cadae498ddae9310</anchor>
      <arglist>(Rule)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYINITDEPTH</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aeb1508a3a38ec5d64c27e8eca25330b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYMAXDEPTH</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a14ba2b263c446ffed1c888c4b42ae40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYPOPSTACK</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad2f9773cd9c031026b2ef4c1ee7be1be</anchor>
      <arglist>(N)</arglist>
    </member>
    <member kind="typedef">
      <type>union YYSTYPE</type>
      <name>YYSTYPE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af2bb2348b7b2379f06e8c6aea49cb742</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>yytype_uint8</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a79c09f9dcfd0f7a32f598ea3910d2206</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int8</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>afd56a33ef7e59189deccc83706e0becd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short int</type>
      <name>yytype_uint16</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a00c27c9da5ed06a830b216c8934e6b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>short int</type>
      <name>yytype_int16</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ade5b97f0021a4f6c5922ead3744ab297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_AND</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a09d3f67b151bc1e002a78de682fc1c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9abfcd8d771490f5e44b29e69cad5bf720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CHAR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9afc1d9070a444ece92960119b8b6d71b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae42e05cc414a81f9fd58e0073bcc16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15655ee10cce71e52f4e9956352d6c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a5da03dfd6a47ef2423f51f3b3839fd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_COMMA</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ae201ec41e309242dd482980cbf20fec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DIV</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a4258358e78b8a083e17005efb73eac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a875b555dccbb4f76c01f6d3b64cb23be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ELSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa3624108e89b325c2bc7b7fe968182b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EXP</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a13decc3b00e3d8934a1a693f14f602e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15032d2373f146d828e947ff20dd7768</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa9c37344dac6ebefdebcc3be18a9165d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae7d1ee5ed71c400ba55db04f16437a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a485e7c46b63de949ebb3b0afa52342cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ada95264d25249b2a3d495210ba0914bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_FALSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad04c6fedfc6e82b9cd961d926579f541</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a9e4181ad64c506080e27af1e0e2fff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab9eea88fa355999ea4acf5ac43e6622f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MINUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aeabbf9419f82ec47ab35d6931784dfb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MULT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6f79423aaab078cd239e0992f2975c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a36d22df926b610573f0870bcb5c896f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab213f08b61c46b1e0e78356df9ee40ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aee13d53546c9358e6b15a455f1c81fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6878ebedeefce3e087cd34942990cef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aba8fffd66e7fec5a70b8cec38866b04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a627d888495b0154c3a309808f31a6d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_PLUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad7d408f184b5312670748bbddf0077d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a14f7637fe9e94058ac70ab4f86fde81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_SEMI</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a346b418eb2ed484e5f3216b78ee00f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_STRING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a2b93aac4bda1ecc9cd242c671411c323</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_TRUE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a66901c4f0f0cf6cd9002834b1f8f2075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9adcfa670a201b661c3c1f1059bd02075b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_AND</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a09d3f67b151bc1e002a78de682fc1c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9abfcd8d771490f5e44b29e69cad5bf720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CHAR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9afc1d9070a444ece92960119b8b6d71b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae42e05cc414a81f9fd58e0073bcc16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15655ee10cce71e52f4e9956352d6c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a5da03dfd6a47ef2423f51f3b3839fd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_COMMA</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ae201ec41e309242dd482980cbf20fec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DIV</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a4258358e78b8a083e17005efb73eac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a875b555dccbb4f76c01f6d3b64cb23be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ELSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa3624108e89b325c2bc7b7fe968182b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EXP</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a13decc3b00e3d8934a1a693f14f602e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15032d2373f146d828e947ff20dd7768</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa9c37344dac6ebefdebcc3be18a9165d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae7d1ee5ed71c400ba55db04f16437a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a485e7c46b63de949ebb3b0afa52342cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ada95264d25249b2a3d495210ba0914bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_FALSE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad04c6fedfc6e82b9cd961d926579f541</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a9e4181ad64c506080e27af1e0e2fff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab9eea88fa355999ea4acf5ac43e6622f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MINUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aeabbf9419f82ec47ab35d6931784dfb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MULT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6f79423aaab078cd239e0992f2975c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a36d22df926b610573f0870bcb5c896f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab213f08b61c46b1e0e78356df9ee40ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OR</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aee13d53546c9358e6b15a455f1c81fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6878ebedeefce3e087cd34942990cef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aba8fffd66e7fec5a70b8cec38866b04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a627d888495b0154c3a309808f31a6d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_PLUS</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad7d408f184b5312670748bbddf0077d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a14f7637fe9e94058ac70ab4f86fde81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_SEMI</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a346b418eb2ed484e5f3216b78ee00f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_STRING</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a2b93aac4bda1ecc9cd242c671411c323</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_TRUE</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a66901c4f0f0cf6cd9002834b1f8f2075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9adcfa670a201b661c3c1f1059bd02075b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa40b27ae32d6d1ae7160bd6256e08eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyerror</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a663a59e97b2c3a56ab8ddcb47f665fc1</anchor>
      <arglist>(const char *const error)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_list</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a575a314ea91d34b6499d5b37be60fc2e</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_boolean</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a96c9928e36af5e776dbc770b0373e7a8</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_integer</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a41e948b6c81c6a3bfd70d455f1fa29b2</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_double</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa6d2f8f4cbf1a26a07057928d50a3202</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>to_complex</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad7c9898272316ba1cfac1b4939abe8bf</anchor>
      <arglist>(KeyData *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>binary_op</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>affdc2a6c9359fee8c11bb46410943782</anchor>
      <arglist>(KeyData *, KeyData *, const int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>compare_op</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a86bde7d8053c5d601a362ab6c4586a0d</anchor>
      <arglist>(KeyData *, KeyData *, const int)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>eval_function</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aadbb83c5e0b8fe67e4f4bfda4cd0c3f6</anchor>
      <arglist>(KeyData *, const string &amp;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyData *</type>
      <name>lookup_variable</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aee67f84a7ed5484fd8f4bb7811416f30</anchor>
      <arglist>(const string &amp;, const int, const bool)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yydestruct</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ad9dfa6a565300b75edd5ca82923074e3</anchor>
      <arglist>(char *yymsg, int yytype, YYSTYPE *yyvaluep) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>acd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>imag_thunk</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a5fbd54b1351382d7d1e4dc1c861f52bf</anchor>
      <arglist>(const dcomplex &amp;a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>real_thunk</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a583f3d9aa47b52600dfcb29e35a3d87c</anchor>
      <arglist>(const dcomplex &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parser_static_table_initialize</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a1576ce3f1b6bcb2560ef529bc6fd1517</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static string</type>
      <name>type_names</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a4276f2e30cc6003935a3280663c28f86</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yytranslate</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a384fb3797a340a5415c03719ebab9c67</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr1</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a0c34e3be3d497abf630697f406f3cc62</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yyr2</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa6be1bc256e649b3e922410e291bc7a5</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yydefact</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>af80f4a4ea9a69eb19837849cc7083c77</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yydefgoto</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>add50b39c93bd000e59c735788074a427</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int16</type>
      <name>yypact</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a52c12de9f634391f03b1680c3b680852</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yypgoto</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abb1d1e685ef953f65410be5d32544cfe</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yytable</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aebb94255a7d4c72e6f9eea0a8e755c56</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_int8</type>
      <name>yycheck</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a40faef92d80fc0e07e3d399311c5ec88</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const yytype_uint8</type>
      <name>yystos</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>abc7e1225b6a8ee7619f19504cbefd97b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SAMRAI_yychar</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>aa95851a331618e1e82f24d4d61041698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>SAMRAI_yylval</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae7cedc42c3f9812176a9a1622130e5f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SAMRAI_yynerrs</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>a1e5948201c1c631c3755430a07ac0813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static arith_functions</type>
      <name>af</name>
      <anchorfile>Grammar_8C.html</anchorfile>
      <anchor>ae5a501b8d1cc2face582eb4cadf196ee</anchor>
      <arglist>[20]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Grammar.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Grammar_8h</filename>
    <class kind="union">YYSTYPE</class>
    <member kind="define">
      <type>#define</type>
      <name>T_AND</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ada3508d0d5e70b42b104a1e87d160a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>abb2ddc60c9de325340ae9a0e9338891c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CHAR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ae2381f297a8fbb736886d7d1b6b99b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aff53a47def3d299036bf7c298a490319</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>acff7732b9de8b36f0278ef4443978ccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a0ef72076529a92a3b8e52fe5691e5342</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_COMMA</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aaac9d99da0dc59197cb3f5e807a72a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DIV</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a40dc75ac1d597229f4006df0211939ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a6e80924a839d0f80571bcd1d2b6ec084</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_ELSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aa12b64ad6852b23d9e8f7114bfdedfd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EXP</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a458c449b08071991777e2ebc32aa8e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aa152633a83da426890c801b9930f650f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aa313da8c1710b9cd86958cf278f3aef4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_GREATER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>af8ad113d0ebd559f591b7ab51cc1129a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aa0a59f4b5b2a13f13b90fa02a5b976ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_LESS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a820771e8572738c211732191bbfe0ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_FALSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a9ab816c37c9173898ff256b7be9e5ea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>afb71b00ae386dca61ecd09449a2eb956</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>af462c7f74238450849431c331b86c9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MINUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aab33ab20ff3b4b8354b8fc1b47a62281</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_MULT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a4d3b3f1c8d8fcc398f4dc6d7c8f5a768</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a825c91d636ba331c98c75e70b46afbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ae1db4b46669881c57ec6724b6fd07998</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a1162c0bf589783d36a671d3661126866</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aec6bdfbf228f69fccc89f852678c1658</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a38fe42a8c140ee84aa4ec588b1265b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a6680e52a42683ab01870e08cb7971be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_PLUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>aa0d70e9d37b4ca5f1421881aa584532e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ae29fad487492f03d459bc7cefe42842f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_SEMI</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ad4ca6422034cf5300fdd69f9ab083f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_STRING</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a22a8c2a4bbaae9b68f65c9bb92fd4e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_TRUE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a7fc7e09f45d0ef129ea29f3a5b0c32b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a80ee9e1cd12528def1f8023267e12f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yystype</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a4ccf5315e8f5c1cec48ec67ca1771e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_DECLARED</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>af0232d21120b2cfc5e5f82f0fbadab3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTYPE_IS_TRIVIAL</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a2e3dbf169c5ee24cf6af37c61cf3995d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>union YYSTYPE</type>
      <name>YYSTYPE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>af2bb2348b7b2379f06e8c6aea49cb742</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>yytokentype</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_AND</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a09d3f67b151bc1e002a78de682fc1c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9abfcd8d771490f5e44b29e69cad5bf720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CHAR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9afc1d9070a444ece92960119b8b6d71b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae42e05cc414a81f9fd58e0073bcc16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15655ee10cce71e52f4e9956352d6c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a5da03dfd6a47ef2423f51f3b3839fd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_COMMA</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ae201ec41e309242dd482980cbf20fec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DIV</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a4258358e78b8a083e17005efb73eac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a875b555dccbb4f76c01f6d3b64cb23be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ELSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa3624108e89b325c2bc7b7fe968182b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EXP</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a13decc3b00e3d8934a1a693f14f602e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15032d2373f146d828e947ff20dd7768</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa9c37344dac6ebefdebcc3be18a9165d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae7d1ee5ed71c400ba55db04f16437a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a485e7c46b63de949ebb3b0afa52342cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ada95264d25249b2a3d495210ba0914bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_FALSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad04c6fedfc6e82b9cd961d926579f541</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a9e4181ad64c506080e27af1e0e2fff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab9eea88fa355999ea4acf5ac43e6622f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MINUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aeabbf9419f82ec47ab35d6931784dfb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MULT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6f79423aaab078cd239e0992f2975c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a36d22df926b610573f0870bcb5c896f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab213f08b61c46b1e0e78356df9ee40ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aee13d53546c9358e6b15a455f1c81fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6878ebedeefce3e087cd34942990cef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aba8fffd66e7fec5a70b8cec38866b04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a627d888495b0154c3a309808f31a6d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_PLUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad7d408f184b5312670748bbddf0077d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a14f7637fe9e94058ac70ab4f86fde81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_SEMI</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a346b418eb2ed484e5f3216b78ee00f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_STRING</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a2b93aac4bda1ecc9cd242c671411c323</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_TRUE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a66901c4f0f0cf6cd9002834b1f8f2075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9adcfa670a201b661c3c1f1059bd02075b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_AND</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a09d3f67b151bc1e002a78de682fc1c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ASSIGN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9abfcd8d771490f5e44b29e69cad5bf720</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CHAR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9afc1d9070a444ece92960119b8b6d71b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae42e05cc414a81f9fd58e0073bcc16f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15655ee10cce71e52f4e9956352d6c9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_CLOSE_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a5da03dfd6a47ef2423f51f3b3839fd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_COMMA</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ae201ec41e309242dd482980cbf20fec4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DIV</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a4258358e78b8a083e17005efb73eac6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_DOUBLE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a875b555dccbb4f76c01f6d3b64cb23be</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_ELSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa3624108e89b325c2bc7b7fe968182b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EXP</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a13decc3b00e3d8934a1a693f14f602e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a15032d2373f146d828e947ff20dd7768</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aa9c37344dac6ebefdebcc3be18a9165d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_GREATER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aae7d1ee5ed71c400ba55db04f16437a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a485e7c46b63de949ebb3b0afa52342cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_LESS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ada95264d25249b2a3d495210ba0914bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_FALSE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad04c6fedfc6e82b9cd961d926579f541</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_INTEGER</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a9e4181ad64c506080e27af1e0e2fff4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_KEYWORD</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab9eea88fa355999ea4acf5ac43e6622f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MINUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aeabbf9419f82ec47ab35d6931784dfb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_MULT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6f79423aaab078cd239e0992f2975c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a36d22df926b610573f0870bcb5c896f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NOT_EQUALS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ab213f08b61c46b1e0e78356df9ee40ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OR</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aee13d53546c9358e6b15a455f1c81fb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_CURLY</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a6878ebedeefce3e087cd34942990cef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_PAREN</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9aba8fffd66e7fec5a70b8cec38866b04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_OPEN_SQBKT</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a627d888495b0154c3a309808f31a6d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_PLUS</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9ad7d408f184b5312670748bbddf0077d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_QUESTION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a14f7637fe9e94058ac70ab4f86fde81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_SEMI</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a346b418eb2ed484e5f3216b78ee00f58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_STRING</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a2b93aac4bda1ecc9cd242c671411c323</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_TRUE</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9a66901c4f0f0cf6cd9002834b1f8f2075</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>T_NEGATION</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>a15c9f7bd2f0e9686df5d9df4f3314aa9adcfa670a201b661c3c1f1059bd02075b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>SAMRAI_yylval</name>
      <anchorfile>Grammar_8h.html</anchorfile>
      <anchor>ae7cedc42c3f9812176a9a1622130e5f2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HDFDatabase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>HDFDatabase_8C</filename>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_INT</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>a2f0b759577fb2146ab3b112227b4de19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_FLOAT</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>a20560f12b467612c0d23f6487357e519</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_DOUBLE</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>a8cbd53607fc2626ae57b1f4b954d6d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_BOOL</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>a4775d20b8a8d98b89db3dba7928dde94</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>H5T_SAMRAI_ATTR</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>a53587a172f6dfa64c7f863d9d1984651</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN_SUPPRESS_HDF5_WARNINGS</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>a1c8cc5c542cbeb35aeac3058a2ed70f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>END_SUPPRESS_HDF5_WARNINGS</name>
      <anchorfile>HDFDatabase_8C.html</anchorfile>
      <anchor>ac541e4b452ff64cd472a6b96f850a325</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HDFDatabase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>HDFDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <class kind="class">SAMRAI::tbox::HDFDatabase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>HDFDatabaseFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>HDFDatabaseFactory_8C</filename>
    <includes id="HDFDatabaseFactory_8h" name="HDFDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabaseFactory.h</includes>
    <includes id="HDFDatabase_8h" name="HDFDatabase.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>HDFDatabaseFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>HDFDatabaseFactory_8h</filename>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <class kind="class">SAMRAI::tbox::HDFDatabaseFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>IEEE.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>IEEE_8C</filename>
    <includes id="IEEE_8h" name="IEEE.h" local="yes" imported="no">SAMRAI/tbox/IEEE.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="IEEE_8I" name="IEEE.I" local="yes" imported="no">SAMRAI/tbox/IEEE.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>IEEE.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>IEEE_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="struct">SAMRAI::tbox::IEEE</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>IEEE.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>IEEE_8I</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>InputDatabase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>InputDatabase_8h</filename>
    <includes id="MemoryDatabase_8h" name="MemoryDatabase.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="typedef">
      <type>SAMRAI::tbox::MemoryDatabase</type>
      <name>InputDatabase</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>af506c0b86c47956e0b66d35aff487e0d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InputManager.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>InputManager_8C</filename>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>InputManager.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>InputManager_8h</filename>
    <includes id="InputDatabase_8h" name="InputDatabase.h" local="yes" imported="no">SAMRAI/tbox/InputDatabase.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <class kind="class">SAMRAI::tbox::InputManager</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>IOStream.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>IOStream_8h</filename>
  </compound>
  <compound kind="file">
    <name>List.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>List_8C</filename>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="List_8I" name="List.I" local="yes" imported="no">SAMRAI/tbox/List.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>List.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>List_8h</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <class kind="class">SAMRAI::tbox::List</class>
    <class kind="class">SAMRAI::tbox::ListNode</class>
    <class kind="class">SAMRAI::tbox::ListIterator</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>List.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>List_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Logger.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Logger_8C</filename>
    <includes id="Logger_8h" name="Logger.h" local="yes" imported="no">SAMRAI/tbox/Logger.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <class kind="class">SAMRAI::tbox::AbortAppender</class>
    <class kind="class">SAMRAI::tbox::WarningAppender</class>
    <class kind="class">SAMRAI::tbox::DebugAppender</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Logger.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Logger_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::tbox::Logger</class>
    <class kind="class">SAMRAI::tbox::Logger::Appender</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MathUtilities.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MathUtilities_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="MathUtilities_8I" name="MathUtilities.I" local="yes" imported="no">SAMRAI/tbox/MathUtilities.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MathUtilities.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MathUtilities_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <class kind="class">SAMRAI::tbox::MathUtilities</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MathUtilities.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MathUtilities_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MathUtilitiesSpecial.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MathUtilitiesSpecial_8C</filename>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SAMRAI_FLT_SNAN</name>
      <anchorfile>MathUtilitiesSpecial_8C.html</anchorfile>
      <anchor>ab6b68b7e4846c0820151528134437ae9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAMRAI_DBL_SNAN</name>
      <anchorfile>MathUtilitiesSpecial_8C.html</anchorfile>
      <anchor>aeb7313a63c70c849c2ce432409a592d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>round_internal</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a8fb80f5f7c49e400c31d0a58f00414fe</anchor>
      <arglist>(TYPE x)</arglist>
    </member>
    <member kind="function">
      <type>template float</type>
      <name>round_internal&lt; float &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a415e3675aa1cdf8e34bb5d073a78057c</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>round_internal&lt; double &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a3b11f55b23390dd0f75956ad05a1e782</anchor>
      <arglist>(double x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryDatabase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabase_8C</filename>
    <includes id="MemoryDatabase_8h" name="MemoryDatabase.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="MemoryDatabase_8I" name="MemoryDatabase.I" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.I</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MEMORY_DB_ERROR</name>
      <anchorfile>MemoryDatabase_8C.html</anchorfile>
      <anchor>a1a5c88c03a09714805ae0ad495af5b17</anchor>
      <arglist>(X)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryDatabase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <class kind="class">SAMRAI::tbox::MemoryDatabase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryDatabase.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryDatabaseFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabaseFactory_8C</filename>
    <includes id="MemoryDatabaseFactory_8h" name="MemoryDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabaseFactory.h</includes>
    <includes id="MemoryDatabase_8h" name="MemoryDatabase.h" local="yes" imported="no">SAMRAI/tbox/MemoryDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryDatabaseFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryDatabaseFactory_8h</filename>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <class kind="class">SAMRAI::tbox::MemoryDatabaseFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryUtilities.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryUtilities_8C</filename>
    <includes id="MemoryUtilities_8h" name="MemoryUtilities.h" local="yes" imported="no">SAMRAI/tbox/MemoryUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MemoryUtilities.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MemoryUtilities_8h</filename>
    <class kind="struct">SAMRAI::tbox::MemoryUtilities</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MessageStream.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MessageStream_8C</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MessageStream_8I" name="MessageStream.I" local="yes" imported="no">SAMRAI/tbox/MessageStream.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MessageStream.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MessageStream_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::tbox::MessageStream</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MessageStream.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MessageStream_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>MessageStream_template_methods.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>MessageStream__template__methods_8C</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>NullDatabase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>NullDatabase_8C</filename>
    <includes id="NullDatabase_8h" name="NullDatabase.h" local="yes" imported="no">SAMRAI/tbox/NullDatabase.h</includes>
    <includes id="NullDatabase_8I" name="NullDatabase.I" local="yes" imported="no">SAMRAI/tbox/NullDatabase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>NullDatabase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>NullDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::tbox::NullDatabase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>NullDatabase.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>NullDatabase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ParallelBuffer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ParallelBuffer_8C</filename>
    <includes id="ParallelBuffer_8h" name="ParallelBuffer.h" local="yes" imported="no">SAMRAI/tbox/ParallelBuffer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ParallelBuffer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ParallelBuffer_8h</filename>
    <class kind="class">SAMRAI::tbox::ParallelBuffer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Parser.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Parser_8C</filename>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Parser_8I" name="Parser.I" local="yes" imported="no">SAMRAI/tbox/Parser.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function">
      <type>int</type>
      <name>yyparse</name>
      <anchorfile>Parser_8C.html</anchorfile>
      <anchor>acd8617a8f2ac0de8bc1cc032cf449e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Parser_8C.html</anchorfile>
      <anchor>aaefa7be34bfd03cd1e250f9f418b63e9</anchor>
      <arglist>(FILE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>parser_static_table_initialize</name>
      <anchorfile>Parser_8C.html</anchorfile>
      <anchor>a1576ce3f1b6bcb2560ef529bc6fd1517</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Parser.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Parser_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::tbox::Parser</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Parser.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Parser_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PIO.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>PIO_8C</filename>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="ParallelBuffer_8h" name="ParallelBuffer.h" local="yes" imported="no">SAMRAI/tbox/ParallelBuffer.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>pout_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>aaafff0bbde1815d1e4661864aa54c85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>perr_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a5ff8d206d2e85ac4f715aa01967fcf42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>plog_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ade90ffa35166163af6107adacde08691</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PIO.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>PIO_8h</filename>
    <class kind="struct">SAMRAI::tbox::PIO</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="variable">
      <type>std::ostream</type>
      <name>pout</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a1e98e73dc869d986f7ffe5b295075979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>perr</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ad72fd66574b63c87061563d2c66b5475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>plog</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ab84041705493761fb17a8127e3a2dca2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Pointer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Pointer_8C</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Pointer_8I" name="Pointer.I" local="yes" imported="no">SAMRAI/tbox/Pointer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Pointer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Pointer_8h</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <includes id="PointerBase_8h" name="PointerBase.h" local="yes" imported="no">SAMRAI/tbox/PointerBase.h</includes>
    <class kind="class">SAMRAI::tbox::Pointer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Pointer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Pointer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PointerBase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>PointerBase_8C</filename>
    <includes id="PointerBase_8h" name="PointerBase.h" local="yes" imported="no">SAMRAI/tbox/PointerBase.h</includes>
    <includes id="PointerBase_8I" name="PointerBase.I" local="yes" imported="no">SAMRAI/tbox/PointerBase.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PointerBase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>PointerBase_8h</filename>
    <includes id="ConstPointerBase_8h" name="ConstPointerBase.h" local="yes" imported="no">SAMRAI/tbox/ConstPointerBase.h</includes>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <class kind="class">SAMRAI::tbox::PointerBase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>PointerBase.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>PointerBase_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RankGroup.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>RankGroup_8C</filename>
    <includes id="RankGroup_8h" name="RankGroup.h" local="yes" imported="no">SAMRAI/tbox/RankGroup.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="RankGroup_8I" name="RankGroup.I" local="yes" imported="no">SAMRAI/tbox/RankGroup.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RankGroup.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>RankGroup_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <class kind="class">SAMRAI::tbox::RankGroup</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RankGroup.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>RankGroup_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceCounter.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ReferenceCounter_8C</filename>
    <includes id="ReferenceCounter_8h" name="ReferenceCounter.h" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="ReferenceCounter_8I" name="ReferenceCounter.I" local="yes" imported="no">SAMRAI/tbox/ReferenceCounter.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceCounter.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ReferenceCounter_8h</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <class kind="class">SAMRAI::tbox::ReferenceCounter</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>ReferenceCounter.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>ReferenceCounter_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RestartManager.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>RestartManager_8C</filename>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="HDFDatabaseFactory_8h" name="HDFDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/HDFDatabaseFactory.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="NullDatabase_8h" name="NullDatabase.h" local="yes" imported="no">SAMRAI/tbox/NullDatabase.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="RestartManager_8I" name="RestartManager.I" local="yes" imported="no">SAMRAI/tbox/RestartManager.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RestartManager.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>RestartManager_8h</filename>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <class kind="class">SAMRAI::tbox::RestartManager</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>RestartManager.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>RestartManager_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAI_MPI.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SAMRAI__MPI_8C</filename>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SAMRAI__MPI_8I" name="SAMRAI_MPI.I" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAI_MPI.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SAMRAI__MPI_8h</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <class kind="class">SAMRAI::tbox::SAMRAI_MPI</class>
    <class kind="struct">SAMRAI::tbox::SAMRAI_MPI::Status</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="enumvalue">
      <name>MPI_COMM_WORLD</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ade04a1c2575b8efe0f8781d3133fd554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_COMM_NULL</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ae3b7839245aff85a92cce9a50417ee0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_SUCCESS</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a6c5af30b03ec5456780fa783b9b5f066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_CONGRUENT</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a5db0a1a50d45cce86d29bd1193f0bb95</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_REQUEST_NULL</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ab5961a66a4018fb30cebc406afd1a4cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_ERR_IN_STATUS</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a3f51891907532ab300331deae0a65bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_UNDEFINED</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a81fd8fcf04957bebd9bc0d2f78f6999a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_ANY_SOURCE</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a47cc9285198b312ff3fabb173001fc04</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_ANY_TAG</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a20261417343aeaa812217aec1ca64f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_BYTE</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a4fef145536d8f981180fea35d649e5aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_CHAR</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ac0e5bbc531b14be39b0463f167446c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_DOUBLE</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a255b1f27ffa9f4db57f74daea59ff528</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_FLOAT</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a427aafd466b219133f38c7966331096d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_INT</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7acf37d771b9c8f91b5e08b02c53d7fb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_DOUBLE_COMPLEX</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a7ae3cb16d7cf97dffd1fceb0d0bd4b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_2INT</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7aa9953dfaaa452a773234ae48035ece2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_DOUBLE_INT</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a29ba0591f0615bfb235eb60706027ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_FLOAT_INT</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a5bb363dc3e89d8b0f39022697a5c8767</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MIN</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a21176abb85012eed7cf68c32deaaf90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MINLOC</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7aa17e6b6b213dca0febfa5d3b6f5b2e3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MAX</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a19018b14d4414f9923af579ac8290aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_MAXLOC</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a030f3918338bbb53df4463fb5270b3f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_SUM</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ae69cbb6ec714f55e3c9129f284ef9d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MPI_TAG_UB</name>
      <anchorfile>SAMRAI__MPI_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a165389ea39ddc7db26d016fe0c078449</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SAMRAI_MPI.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SAMRAI__MPI_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SAMRAIManager.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SAMRAIManager_8C</filename>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="IEEE_8h" name="IEEE.h" local="yes" imported="no">SAMRAI/tbox/IEEE.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>badnew</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a67dea29da08b2f13fceb709a2bc19532</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SAMRAIManager.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SAMRAIManager_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <class kind="class">SAMRAI::tbox::SAMRAIManager</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Scanner.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Scanner_8C</filename>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="Parser_8h" name="Parser.h" local="yes" imported="no">SAMRAI/tbox/Parser.h</includes>
    <includes id="Grammar_8h" name="Grammar.h" local="yes" imported="no">Grammar.h</includes>
    <class kind="struct">yy_buffer_state</class>
    <member kind="define">
      <type>#define</type>
      <name>FLEX_SCANNER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a3c3d1ef92e93b0bc81d7760a73d5c3b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MAJOR_VERSION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a243ca1d30872935faf05ea5118ed6fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLEX_MINOR_VERSION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a90f9d458829400869e47efb68a865677</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyconst</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa2f1a918be586b44bf08126bde2d7cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_PROTO</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ad1c3fde80f461fe055f996f4ec6d4830</anchor>
      <arglist>(proto)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NULL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a8e0bcf8f8a5b613ea583347f8bc31cbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SC_TO_UI</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>af1185350b7a92cf8aa5324c68850c8a6</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BEGIN</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab766bbbee08d04b67e3fe599d6900873</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a8e14785f9eab7a997d659b25af9584c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YYSTATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a32b5b960944f946b192d54f672569cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_STATE_EOF</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab3077e60914fc54dcc55ecae1ce9700b</anchor>
      <arglist>(state)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEW_FILE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a0406739e64fb5750cf995d2ae68ce69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER_CHAR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab866a64da164ed2d4d444df1ef1fc9b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUF_SIZE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae7e51116e747d3390e7a6cfc6532834c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_CONTINUE_SCAN</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>adf4b0db227e07782e28ade353a7ba7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_END_OF_FILE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a7f71d7fa2c403eb4b2f38cb9536f3c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EOB_ACT_LAST_MATCH</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ad1a0b5ebcabffe388e9e9ebb2619c1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae65cb72d09db0abdc4b8e8c4d533ab14</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>unput</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a448a4e9041a09588332733c6846c770c</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_MAY_BE_UNUSED</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a12a31a0a8414ddef8c3154fe383a89ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NEW</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a53579db42834b88199458993912c646d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_NORMAL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a609d19f40900ecc2a5f812d9388c21fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BUFFER_EOF_PENDING</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ad689d97c15e807a6116ace7a420cea57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_CURRENT_BUFFER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa093d500a6330d06d8e4760c494fac33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FLUSH_BUFFER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac5d478d90ea9a2ecd43d579067a2e89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_new_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab7eb911e18655f2f78e63afe5a8a4a12</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_interactive</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac56eb96366c08862bf0efe5d83d1fc4c</anchor>
      <arglist>(is_interactive)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yy_set_bol</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a12e30d13a76a94e78010db9996d39c50</anchor>
      <arglist>(at_bol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_AT_BOL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a71ca89b3656acd0552f14949a571560b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yywrap</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ade1e2db9970733fbc3d9fecd09ce9771</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_SKIP_YYWRAP</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae1ef5933028cbc587d31328e53d11a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yytext_ptr</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a790a191a93ef4d3b8c0bb43fd7480052</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DO_BEFORE_ACTION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>acc3486d769af4e4b2820346a0093cc79</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NUM_RULES</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae558785bb896e090901c2b905f6790c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_END_OF_BUFFER</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab2708fd42cff29ce6a0a52b91bea40d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REJECT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a835f10dd1ab4bf9a80c4cd80ee6e3058</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yymore</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a745d37b5e002b2e5f93ad42ea7b554be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_MORE_ADJ</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a68792d73820bc46a71d3d4e613f0b977</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RESTORE_YY_MORE_OFFSET</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a56858d18c7eda4f53664496ef566f651</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INITIAL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa3d063564f6ab16f6d408b8369d0e9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NEVER_INTERACTIVE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a15b85de192a189d5a31cdd518e001e6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_UNPUT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae29b9eafd525b0fd9b1ecba8c44e5dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_INPUT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aecc5bc7182966c682c928cc68f42d6e8</anchor>
      <arglist>(b, r, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOKEN</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae61303e288a41f0e25ff8cd0c6296957</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAXIMUM_INCLUDE_DEPTH</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a721eb647ac1cffd18b92750d6610fcf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMMENT</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a180f5b3835bdbfc11b353fd2af5c8659</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_PUSH_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a38e3a1cf6bfd339e7cfe0370e245730f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_POP_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab99a7dbce52206f2cee91121f70f3f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_NO_TOP_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac3eedc6d2e3e4c9b2bacd0f1ebeab98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_READ_BUF_SIZE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aab1491ceccb1c95c14320b2903773a1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aad1dc60a04a1d8cfc8b3ded13601e361</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyterminate</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac3286b18a2e91b4571b97df96a118e84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_START_STACK_INCR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a227e75c43b9e0cd41529974230be7e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_FATAL_ERROR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac0586b8b0b092d02f4ba7d45abe328f2</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_DECL</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae5b01ac2fa5a6ad5fb97559638abe686</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_USER_ACTION</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a6198b2fcf96178b24ad4efff2a3debb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_BREAK</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a3cc40a460ad7df816678bcc05241e84c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_RULE_SETUP</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a690504b662e4281515bf12722df178ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>YY_EXIT_FAILURE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae93e67b85c44f6bd31ead14a552a35c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>yyless</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae65cb72d09db0abdc4b8e8c4d533ab14</anchor>
      <arglist>(n)</arglist>
    </member>
    <member kind="typedef">
      <type>struct yy_buffer_state *</type>
      <name>YY_BUFFER_STATE</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a4e5bd2d129903df83f3d13effaf8f3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>yy_size_t</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa14cc3d400000eef0cd40225fd790cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned char</type>
      <name>YY_CHAR</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a1f324b3cb0839eeb90145f0274e6946e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>yy_state_type</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a9ba7c416f135b0f0c1f4addded4616b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a23078b0f02506465ee6af97eb9e7a8dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_switch_to_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a7d5a512c248e55a913a05633ed597ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_load_buffer_state</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a30fc8e518fa4e332a8657f6f8afa8fd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_create_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>abf00d6d870f5a3e1ec5ede8b97cb81dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_delete_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a27e70d41e1eb328f119adec13c5bd07b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_init_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>af56d7ed5e4869cde3f7d90fef691bd8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_flush_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a1090aaba628649000946f88f48051cf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a2d17bd6111b99026f548ae8022ec721b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_string</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab7e6ffd2e9da914c7a1e56caa1c93720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_bytes</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>afc8343b6f4cacb6d60ad64fcbe2e6626</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_alloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa3b272c3bb84b8562a77c0a854056f32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_realloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>af95a4de4ea9c25f493b95b69d23f7908</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_flex_free</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa48219f1ac8cc58ed7487ecaf5fe1e7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_get_previous_state</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac7941891fb35553e85c394d7240b6fac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_try_NUL_trans</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a4344fdb3bbaea7ea57b2a021a451e942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>yy_get_next_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a941fbfdbb3a4aa1ebc5bbac0be477d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_fatal_error</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a54305b3df006611fd8c8862fdb8a0dff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>input</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab77a69608c1c09f3f14d24fce44e09ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yylex</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa40b27ae32d6d1ae7160bd6256e08eb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static yy_state_type</type>
      <name>yy_try_NUL_trans</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aef834b9da0e6ab2c8100976ec1ebd004</anchor>
      <arglist>(yy_state_type yy_current_state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yyrestart</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ab657ddef65d43cc3ab8dfc2cad0ac5b8</anchor>
      <arglist>(FILE *input_file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_switch_to_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a3098c48a74ef8fd852f7dd4b3331cbce</anchor>
      <arglist>(YY_BUFFER_STATE new_buffer)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_create_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a5bc6f1a5f7812508f425b08283f13ae8</anchor>
      <arglist>(FILE *file, int size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_delete_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae6ac796aa6c45d433a4b89bf45e6e9dc</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_init_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a50748cd5701bec39eeb94d2cd2a011dd</anchor>
      <arglist>(YY_BUFFER_STATE b, FILE *file)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>yy_flush_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a2f59cc88e85e5455c62e4ef7ce095ea8</anchor>
      <arglist>(YY_BUFFER_STATE b)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>af81595b30c0da73f9034ffb511db6388</anchor>
      <arglist>(char *base, yy_size_t size)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_string</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa557728c6948d7264166cb792c355da9</anchor>
      <arglist>(char *yy_str)</arglist>
    </member>
    <member kind="function">
      <type>YY_BUFFER_STATE</type>
      <name>yy_scan_bytes</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>abc56e43879f04c9ee68d9c933e3c4e51</anchor>
      <arglist>(char *bytes, int len)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_fatal_error</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a118e659832b01fdd56f7e75b49856033</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_alloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a015607dc0247ff116630bb45a991f013</anchor>
      <arglist>(yy_size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void *</type>
      <name>yy_flex_realloc</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a1767258672797e00932513dc065026e6</anchor>
      <arglist>(void *ptr, yy_size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>yy_flex_free</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ac713f8130aa0fdb7b4ed03c9d9c32294</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yyleng</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a1b5865350b5ca5c1d69f429c2a652953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyin</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a87a127afa8f6c307fbfba10390675406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>yyout</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a296847b42b0baa62e2af36cb79f3c0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static YY_BUFFER_STATE</type>
      <name>yy_current_buffer</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a38d4b4b5964f7d49b4d9e19bf81996df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char</type>
      <name>yy_hold_char</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a13f78e763996d2d86c85b45cbe146282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_n_chars</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aa86c122f2050dbfd365fcf547e6fc1c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_c_buf_p</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ade8fc57d3529bff56440a4f3e9c29586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_init</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>aeae6dabf9dcc4769518ecf054181b1c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_start</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a2e1e1d9ee4610a6679d49ed8194b00af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_did_buffer_switch_on_eof</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a57edb4569f96dcfce9deaff0eb6a6412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yytext</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a35b96d819f6a8f8638894c429e68b02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_accept</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a600f4b01f6b9946f5871b8413274871e</anchor>
      <arglist>[96]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_ec</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a1a8a1c1ee735421078f9a430e70beb20</anchor>
      <arglist>[256]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>yy_meta</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a679b3c0130e52ccd2af895bc97d999ae</anchor>
      <arglist>[47]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_base</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>ae549d216d3514cf9501ef8dfea2b14a4</anchor>
      <arglist>[103]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_def</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a2c0c50f0ca2d28ec851a3b3ccb24e595</anchor>
      <arglist>[103]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_nxt</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a573900efba4b959eccc5c67117b3b430</anchor>
      <arglist>[206]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static short int</type>
      <name>yy_chk</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>afe10b9585295f7949fc7f1f1b9ddf003</anchor>
      <arglist>[206]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static yy_state_type</type>
      <name>yy_last_accepting_state</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a1e8856234732c99be24858b0073e1297</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static char *</type>
      <name>yy_last_accepting_cpos</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>afc6bef71feb2394eb5291e710139dfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static YY_BUFFER_STATE</type>
      <name>s_include_stack</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a3e7774069fc7a65ab6ce7a289b1b466d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>s_include_stack_top</name>
      <anchorfile>Scanner_8C.html</anchorfile>
      <anchor>a27077b53da223e08fcea8774dfdf01df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Schedule.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Schedule_8C</filename>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="typedef">
      <type>List&lt; Pointer&lt; Transaction &gt; &gt;::Iterator</type>
      <name>Iterator</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ad2da72b30f83887791d4cee7786d95d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Schedule.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Schedule_8h</filename>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="AsyncCommStage_8h" name="AsyncCommStage.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommStage.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <class kind="class">SAMRAI::tbox::Schedule</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Serializable.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Serializable_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::tbox::Serializable</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SiloDatabase.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SiloDatabase_8C</filename>
    <includes id="SiloDatabase_8h" name="SiloDatabase.h" local="yes" imported="no">SAMRAI/tbox/SiloDatabase.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SiloDatabase.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SiloDatabase_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="DatabaseBox_8h" name="DatabaseBox.h" local="yes" imported="no">SAMRAI/tbox/DatabaseBox.h</includes>
    <includes id="Complex_8h" name="Complex.h" local="yes" imported="no">SAMRAI/tbox/Complex.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <class kind="class">SAMRAI::tbox::SiloDatabase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SiloDatabaseFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SiloDatabaseFactory_8C</filename>
    <includes id="SiloDatabaseFactory_8h" name="SiloDatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/SiloDatabaseFactory.h</includes>
    <includes id="SiloDatabase_8h" name="SiloDatabase.h" local="yes" imported="no">SAMRAI/tbox/SiloDatabase.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>SiloDatabaseFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>SiloDatabaseFactory_8h</filename>
    <includes id="DatabaseFactory_8h" name="DatabaseFactory.h" local="yes" imported="no">SAMRAI/tbox/DatabaseFactory.h</includes>
    <class kind="class">SAMRAI::tbox::SiloDatabaseFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StartupShutdownManager.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>StartupShutdownManager_8C</filename>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StartupShutdownManager.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>StartupShutdownManager_8h</filename>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::AbstractHandler</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::Handler</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistic.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Statistic_8C</filename>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Statistic_8I" name="Statistic.I" local="yes" imported="no">SAMRAI/tbox/Statistic.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistic.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Statistic_8h</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <class kind="class">SAMRAI::tbox::Statistic</class>
    <class kind="struct">SAMRAI::tbox::Statistic::ProcStat</class>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStatRecord</class>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStat</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistic.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Statistic_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistician.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Statistician_8C</filename>
    <includes id="Statistician_8h" name="Statistician.h" local="yes" imported="no">SAMRAI/tbox/Statistician.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="StatTransaction_8h" name="StatTransaction.h" local="yes" imported="no">SAMRAI/tbox/StatTransaction.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="Statistician_8I" name="Statistician.I" local="yes" imported="no">SAMRAI/tbox/Statistician.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistician.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Statistician_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <class kind="class">SAMRAI::tbox::Statistician</class>
    <class kind="class">SAMRAI::tbox::StatisticRestartDatabase</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Statistician.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Statistician_8I</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StatTransaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>StatTransaction_8C</filename>
    <includes id="StatTransaction_8h" name="StatTransaction.h" local="yes" imported="no">SAMRAI/tbox/StatTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>StatTransaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>StatTransaction_8h</filename>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Statistic_8h" name="Statistic.h" local="yes" imported="no">SAMRAI/tbox/Statistic.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <class kind="class">SAMRAI::tbox::StatTransaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Timer_8C</filename>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="Timer_8I" name="Timer.I" local="yes" imported="no">SAMRAI/tbox/Timer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Timer_8h</filename>
    <includes id="Clock_8h" name="Clock.h" local="yes" imported="no">SAMRAI/tbox/Clock.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::tbox::Timer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Timer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Timer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>TimerManager.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>TimerManager_8C</filename>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="InputDatabase_8h" name="InputDatabase.h" local="yes" imported="no">SAMRAI/tbox/InputDatabase.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="RestartManager_8h" name="RestartManager.h" local="yes" imported="no">SAMRAI/tbox/RestartManager.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>TimerManager.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>TimerManager_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">SAMRAI/tbox/Database.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Serializable_8h" name="Serializable.h" local="yes" imported="no">SAMRAI/tbox/Serializable.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <class kind="class">SAMRAI::tbox::TimerManager</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Tracer.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Tracer_8C</filename>
    <includes id="Tracer_8h" name="Tracer.h" local="yes" imported="no">SAMRAI/tbox/Tracer.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <includes id="Tracer_8I" name="Tracer.I" local="yes" imported="no">SAMRAI/tbox/Tracer.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Tracer.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Tracer_8h</filename>
    <class kind="class">SAMRAI::tbox::Tracer</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Tracer.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Tracer_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Transaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Transaction_8C</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Transaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Transaction_8h</filename>
    <includes id="MessageStream_8h" name="MessageStream.h" local="yes" imported="no">SAMRAI/tbox/MessageStream.h</includes>
    <class kind="class">SAMRAI::tbox::Transaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Utilities.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Utilities_8C</filename>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="SAMRAIManager_8h" name="SAMRAIManager.h" local="yes" imported="no">SAMRAI/tbox/SAMRAIManager.h</includes>
    <includes id="Logger_8h" name="Logger.h" local="yes" imported="no">SAMRAI/tbox/Logger.h</includes>
    <includes id="PIO_8h" name="PIO.h" local="yes" imported="no">SAMRAI/tbox/PIO.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>Utilities.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>Utilities_8h</filename>
    <includes id="IOStream_8h" name="IOStream.h" local="yes" imported="no">SAMRAI/tbox/IOStream.h</includes>
    <includes id="Logger_8h" name="Logger.h" local="yes" imported="no">SAMRAI/tbox/Logger.h</includes>
    <class kind="struct">SAMRAI::tbox::Utilities</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NULL_STATEMENT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a76d90a17c620625b9d8b0bc1b526ed00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL_USE</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>af9791b527d974ad06e3a35252dd32e2f</anchor>
      <arglist>(variable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_ERROR</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a49120d75ffbdfbaf0b28bbd8ad58e153</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_WARNING</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a5c90a7ee91157f3d5518680273da51f3</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DEBUG</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a79b22d1ff1bda22f837a6ed840ebaaaa</anchor>
      <arglist>(X)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_ASSERT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>afe03f1cedd6dd7fcbea7adf639e6fa4d</anchor>
      <arglist>(EXP)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_ASSERT_MSG</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a3ba84186aa2545cf8df683bb58dbf6ea</anchor>
      <arglist>(EXP, MSG)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DEV_ASSERT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a52c6f125cd9a73427ee5f0a026ef22c6</anchor>
      <arglist>(EXP)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a3879064f83e48a0abd732f236bc2d341</anchor>
      <arglist>(dim)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ALLOW_UNINITIALIZED</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a98abd3298b337edd40af8ff9a4c58897</anchor>
      <arglist>(dim)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS1</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>aeac1a4e38f7be94f2dec4bf77eb1c03a</anchor>
      <arglist>(arg1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS2</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a0f89438b267994ac318d37eb42a9a10a</anchor>
      <arglist>(arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS3</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a8b1de3d2a84478780ac57907182e75ed</anchor>
      <arglist>(arg1, arg2, arg3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS4</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>abeffb311b88b5f91f1efc0d51e2808b5</anchor>
      <arglist>(arg1, arg2, arg3, arg4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS5</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a12ba04394d2094b5f7297939086e338d</anchor>
      <arglist>(arg1, arg2, arg3, arg4, arg5)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS6</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a74f59f97b2934f27f8fca0cc0a131b0b</anchor>
      <arglist>(arg1, arg2, arg3, arg4, arg5, arg6)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_ARGS7</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a900589a19e8cab8ea923a5f76be5b55f</anchor>
      <arglist>(arg1, arg2, arg3, arg4, arg5, arg6, arg7)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS1</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a645b3af52f3a8d982d6b68c679386a6f</anchor>
      <arglist>(dim, arg1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS2</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>aa1e2d6810be0e600c4402e017af6699e</anchor>
      <arglist>(dim, arg1, arg2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS3</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a9fc0b4b7f488553d43f2c8eaee9401f1</anchor>
      <arglist>(dim, arg1, arg2, arg3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS4</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a4fe8ef0396d62a11c669c1fba8871254</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS5</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>ac98552f9906e8f3941b3f0134296314e</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS6</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>afd7d97fbe3d0c1f991a852fe45391a32</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5, arg6)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS7</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a42fc3e5a50b98f5c559e6403fb7f7626</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5, arg6, arg7)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT_CHECK_DIM_ARGS8</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a8dc2a750e4f80d0bd80efa28d384762f</anchor>
      <arglist>(dim, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TBOX_DIM_ASSERT</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>aa7d2633aad0746b2447ade40b067aabd</anchor>
      <arglist>(EXP)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PETSC_SAMRAI_ERROR</name>
      <anchorfile>Utilities_8h.html</anchorfile>
      <anchor>a7128088a2230fdc1c875c8b31f3b94a7</anchor>
      <arglist>(ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/tbox/</path>
    <filename>vector_8h</filename>
    <class kind="class">SAMRAI::tbox::vector</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::tbox</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometryVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>BoxGeometryVariableFillPattern_8C</filename>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>BoxGeometryVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>BoxGeometryVariableFillPattern_8h</filename>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::BoxGeometryVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenAlgorithm.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenAlgorithm_8C</filename>
    <includes id="CoarsenAlgorithm_8h" name="CoarsenAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/CoarsenAlgorithm.h</includes>
    <includes id="StandardCoarsenTransactionFactory_8h" name="StandardCoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardCoarsenTransactionFactory.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenAlgorithm.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenAlgorithm_8h</filename>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::xfer::CoarsenAlgorithm</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenClasses.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenClasses_8C</filename>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenClasses_8I" name="CoarsenClasses.I" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenClasses.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenClasses_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="CoarsenOperator_8h" name="CoarsenOperator.h" local="yes" imported="no">SAMRAI/hier/CoarsenOperator.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::CoarsenClasses</class>
    <class kind="class">SAMRAI::xfer::CoarsenClasses::Data</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenClasses.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenClasses_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenCopyTransaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenCopyTransaction_8C</filename>
    <includes id="CoarsenCopyTransaction_8h" name="CoarsenCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/CoarsenCopyTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenCopyTransaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenCopyTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <class kind="class">SAMRAI::xfer::CoarsenCopyTransaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenPatchStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenPatchStrategy_8C</filename>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenPatchStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenPatchStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <class kind="class">SAMRAI::xfer::CoarsenPatchStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenSchedule.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenSchedule_8C</filename>
    <includes id="CoarsenSchedule_8h" name="CoarsenSchedule.h" local="yes" imported="no">SAMRAI/xfer/CoarsenSchedule.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="CoarsenCopyTransaction_8h" name="CoarsenCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/CoarsenCopyTransaction.h</includes>
    <includes id="PatchLevelInteriorFillPattern_8h" name="PatchLevelInteriorFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelInteriorFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenSchedule.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenSchedule_8h</filename>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="CoarsenPatchStrategy_8h" name="CoarsenPatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/CoarsenPatchStrategy.h</includes>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <class kind="class">SAMRAI::xfer::CoarsenSchedule</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenTransactionFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenTransactionFactory_8C</filename>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>CoarsenTransactionFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>CoarsenTransactionFactory_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <class kind="class">SAMRAI::xfer::CoarsenTransactionFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual_datamovers.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/dox/</path>
    <filename>manual__datamovers_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/dox/</path>
    <filename>xfer_2dox_2manual__operators_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>manual_operators.dox</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/pdat/dox/</path>
    <filename>pdat_2dox_2manual__operators_8dox</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::pdat</namespace>
  </compound>
  <compound kind="file">
    <name>PatchInteriorVariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchInteriorVariableFillPattern_8C</filename>
    <includes id="PatchInteriorVariableFillPattern_8h" name="PatchInteriorVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchInteriorVariableFillPattern.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchInteriorVariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchInteriorVariableFillPattern_8h</filename>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::PatchInteriorVariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderAndInteriorFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderAndInteriorFillPattern_8C</filename>
    <includes id="PatchLevelBorderAndInteriorFillPattern_8h" name="PatchLevelBorderAndInteriorFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderAndInteriorFillPattern.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelBorderAndInteriorFillPattern_8I" name="PatchLevelBorderAndInteriorFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderAndInteriorFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderAndInteriorFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderAndInteriorFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderAndInteriorFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderAndInteriorFillPattern.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderAndInteriorFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderFillPattern_8C</filename>
    <includes id="PatchLevelBorderFillPattern_8h" name="PatchLevelBorderFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelBorderFillPattern_8I" name="PatchLevelBorderFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelBorderFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelBorderFillPattern.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelBorderFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelEnhancedFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelEnhancedFillPattern_8C</filename>
    <includes id="PatchLevelEnhancedFillPattern_8h" name="PatchLevelEnhancedFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelEnhancedFillPattern.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelEnhancedFillPattern_8I" name="PatchLevelEnhancedFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelEnhancedFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelEnhancedFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelEnhancedFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <class kind="class">SAMRAI::xfer::PatchLevelEnhancedFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelEnhancedFillPattern.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelEnhancedFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFillPattern_8C</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFillPattern_8h</filename>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="NeighborhoodSet_8h" name="NeighborhoodSet.h" local="yes" imported="no">SAMRAI/hier/NeighborhoodSet.h</includes>
    <class kind="class">SAMRAI::xfer::PatchLevelFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFullFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFullFillPattern_8C</filename>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="RealBoxConstIterator_8h" name="RealBoxConstIterator.h" local="yes" imported="no">SAMRAI/hier/RealBoxConstIterator.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelFullFillPattern_8I" name="PatchLevelFullFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFullFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFullFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::PatchLevelFullFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelFullFillPattern.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelFullFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelInteriorFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelInteriorFillPattern_8C</filename>
    <includes id="PatchLevelInteriorFillPattern_8h" name="PatchLevelInteriorFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelInteriorFillPattern.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="PatchLevelInteriorFillPattern_8I" name="PatchLevelInteriorFillPattern.I" local="yes" imported="no">SAMRAI/xfer/PatchLevelInteriorFillPattern.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelInteriorFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelInteriorFillPattern_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::PatchLevelInteriorFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>PatchLevelInteriorFillPattern.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>PatchLevelInteriorFillPattern_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineAlgorithm.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineAlgorithm_8C</filename>
    <includes id="RefineAlgorithm_8h" name="RefineAlgorithm.h" local="yes" imported="no">SAMRAI/xfer/RefineAlgorithm.h</includes>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="StandardRefineTransactionFactory_8h" name="StandardRefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardRefineTransactionFactory.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineAlgorithm.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineAlgorithm_8h</filename>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <includes id="Connector_8h" name="Connector.h" local="yes" imported="no">SAMRAI/hier/Connector.h</includes>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxLevel_8h" name="BoxLevel.h" local="yes" imported="no">SAMRAI/hier/BoxLevel.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::xfer::RefineAlgorithm</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineClasses.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineClasses_8C</filename>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="PatchDescriptor_8h" name="PatchDescriptor.h" local="yes" imported="no">SAMRAI/hier/PatchDescriptor.h</includes>
    <includes id="VariableDatabase_8h" name="VariableDatabase.h" local="yes" imported="no">SAMRAI/hier/VariableDatabase.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="RefineClasses_8I" name="RefineClasses.I" local="yes" imported="no">SAMRAI/xfer/RefineClasses.I</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineClasses.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineClasses_8h</filename>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <includes id="List_8h" name="List.h" local="yes" imported="no">SAMRAI/tbox/List.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="RefineOperator_8h" name="RefineOperator.h" local="yes" imported="no">SAMRAI/hier/RefineOperator.h</includes>
    <includes id="TimeInterpolateOperator_8h" name="TimeInterpolateOperator.h" local="yes" imported="no">SAMRAI/hier/TimeInterpolateOperator.h</includes>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <class kind="class">SAMRAI::xfer::RefineClasses</class>
    <class kind="struct">SAMRAI::xfer::RefineClasses::Data</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineClasses.I</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineClasses_8I</filename>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineCopyTransaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineCopyTransaction_8C</filename>
    <includes id="RefineCopyTransaction_8h" name="RefineCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineCopyTransaction.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineCopyTransaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineCopyTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <class kind="class">SAMRAI::xfer::RefineCopyTransaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefinePatchStrategy.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefinePatchStrategy_8C</filename>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefinePatchStrategy.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefinePatchStrategy_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <class kind="class">SAMRAI::xfer::RefinePatchStrategy</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineSchedule.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineSchedule_8C</filename>
    <includes id="RefineSchedule_8h" name="RefineSchedule.h" local="yes" imported="no">SAMRAI/xfer/RefineSchedule.h</includes>
    <includes id="BoxGeometryVariableFillPattern_8h" name="BoxGeometryVariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/BoxGeometryVariableFillPattern.h</includes>
    <includes id="PatchLevelFullFillPattern_8h" name="PatchLevelFullFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFullFillPattern.h</includes>
    <includes id="RefineCopyTransaction_8h" name="RefineCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineCopyTransaction.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineScheduleConnectorWidthRequestor_8h" name="RefineScheduleConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/xfer/RefineScheduleConnectorWidthRequestor.h</includes>
    <includes id="RefineTimeTransaction_8h" name="RefineTimeTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineTimeTransaction.h</includes>
    <includes id="BoxContainerConstIterator_8h" name="BoxContainerConstIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerConstIterator.h</includes>
    <includes id="BoxContainerIterator_8h" name="BoxContainerIterator.h" local="yes" imported="no">SAMRAI/hier/BoxContainerIterator.h</includes>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="BoxUtilities_8h" name="BoxUtilities.h" local="yes" imported="no">SAMRAI/hier/BoxUtilities.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="BoxLevelConnectorUtils_8h" name="BoxLevelConnectorUtils.h" local="yes" imported="no">SAMRAI/hier/BoxLevelConnectorUtils.h</includes>
    <includes id="MappingConnectorAlgorithm_8h" name="MappingConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/MappingConnectorAlgorithm.h</includes>
    <includes id="OverlapConnectorAlgorithm_8h" name="OverlapConnectorAlgorithm.h" local="yes" imported="no">SAMRAI/hier/OverlapConnectorAlgorithm.h</includes>
    <includes id="PeriodicShiftCatalog_8h" name="PeriodicShiftCatalog.h" local="yes" imported="no">SAMRAI/hier/PeriodicShiftCatalog.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="PatchGeometry_8h" name="PatchGeometry.h" local="yes" imported="no">SAMRAI/hier/PatchGeometry.h</includes>
    <includes id="AsyncCommPeer_8h" name="AsyncCommPeer.h" local="yes" imported="no">SAMRAI/tbox/AsyncCommPeer.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <includes id="InputManager_8h" name="InputManager.h" local="yes" imported="no">SAMRAI/tbox/InputManager.h</includes>
    <includes id="StartupShutdownManager_8h" name="StartupShutdownManager.h" local="yes" imported="no">SAMRAI/tbox/StartupShutdownManager.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">SAMRAI/tbox/TimerManager.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>errbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>ad06812e1effed7056dfc0aa43e90a5f4</anchor>
      <arglist>(&quot;E-&gt; &quot;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>logbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>ad258013999ff834ea29a0e7c89f27221</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RefineSchedule.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineSchedule_8h</filename>
    <includes id="PatchLevelFillPattern_8h" name="PatchLevelFillPattern.h" local="yes" imported="no">SAMRAI/xfer/PatchLevelFillPattern.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <includes id="ComponentSelector_8h" name="ComponentSelector.h" local="yes" imported="no">SAMRAI/hier/ComponentSelector.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Schedule_8h" name="Schedule.h" local="yes" imported="no">SAMRAI/tbox/Schedule.h</includes>
    <includes id="Timer_8h" name="Timer.h" local="yes" imported="no">SAMRAI/tbox/Timer.h</includes>
    <includes id="Array_8h" name="Array.h" local="yes" imported="no">SAMRAI/tbox/Array.h</includes>
    <class kind="class">SAMRAI::xfer::RefineSchedule</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineScheduleConnectorWidthRequestor.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineScheduleConnectorWidthRequestor_8C</filename>
    <includes id="RefineScheduleConnectorWidthRequestor_8h" name="RefineScheduleConnectorWidthRequestor.h" local="yes" imported="no">SAMRAI/xfer/RefineScheduleConnectorWidthRequestor.h</includes>
    <includes id="RefinePatchStrategy_8h" name="RefinePatchStrategy.h" local="yes" imported="no">SAMRAI/xfer/RefinePatchStrategy.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineScheduleConnectorWidthRequestor.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineScheduleConnectorWidthRequestor_8h</filename>
    <includes id="PatchHierarchy_8h" name="PatchHierarchy.h" local="yes" imported="no">SAMRAI/hier/PatchHierarchy.h</includes>
    <class kind="class">SAMRAI::xfer::RefineScheduleConnectorWidthRequestor</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineTimeTransaction.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineTimeTransaction_8C</filename>
    <includes id="RefineTimeTransaction_8h" name="RefineTimeTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineTimeTransaction.h</includes>
    <includes id="IntVector_8h" name="IntVector.h" local="yes" imported="no">SAMRAI/hier/IntVector.h</includes>
    <includes id="Patch_8h" name="Patch.h" local="yes" imported="no">SAMRAI/hier/Patch.h</includes>
    <includes id="PatchData_8h" name="PatchData.h" local="yes" imported="no">SAMRAI/hier/PatchData.h</includes>
    <includes id="SAMRAI__MPI_8h" name="SAMRAI_MPI.h" local="yes" imported="no">SAMRAI/tbox/SAMRAI_MPI.h</includes>
    <includes id="Utilities_8h" name="Utilities.h" local="yes" imported="no">SAMRAI/tbox/Utilities.h</includes>
    <includes id="MathUtilities_8h" name="MathUtilities.h" local="yes" imported="no">SAMRAI/tbox/MathUtilities.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineTimeTransaction.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineTimeTransaction_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <class kind="class">SAMRAI::xfer::RefineTimeTransaction</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineTransactionFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineTransactionFactory_8C</filename>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>RefineTransactionFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>RefineTransactionFactory_8h</filename>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="GridGeometry_8h" name="GridGeometry.h" local="yes" imported="no">SAMRAI/hier/GridGeometry.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <class kind="class">SAMRAI::xfer::RefineTransactionFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>StandardCoarsenTransactionFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>StandardCoarsenTransactionFactory_8C</filename>
    <includes id="StandardCoarsenTransactionFactory_8h" name="StandardCoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardCoarsenTransactionFactory.h</includes>
    <includes id="CoarsenCopyTransaction_8h" name="CoarsenCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/CoarsenCopyTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>StandardCoarsenTransactionFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>StandardCoarsenTransactionFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="CoarsenClasses_8h" name="CoarsenClasses.h" local="yes" imported="no">SAMRAI/xfer/CoarsenClasses.h</includes>
    <includes id="CoarsenTransactionFactory_8h" name="CoarsenTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/CoarsenTransactionFactory.h</includes>
    <class kind="class">SAMRAI::xfer::StandardCoarsenTransactionFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>StandardRefineTransactionFactory.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>StandardRefineTransactionFactory_8C</filename>
    <includes id="StandardRefineTransactionFactory_8h" name="StandardRefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/StandardRefineTransactionFactory.h</includes>
    <includes id="RefineCopyTransaction_8h" name="RefineCopyTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineCopyTransaction.h</includes>
    <includes id="RefineTimeTransaction_8h" name="RefineTimeTransaction.h" local="yes" imported="no">SAMRAI/xfer/RefineTimeTransaction.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>StandardRefineTransactionFactory.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>StandardRefineTransactionFactory_8h</filename>
    <includes id="Box_8h" name="Box.h" local="yes" imported="no">SAMRAI/hier/Box.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="PatchLevel_8h" name="PatchLevel.h" local="yes" imported="no">SAMRAI/hier/PatchLevel.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <includes id="Transaction_8h" name="Transaction.h" local="yes" imported="no">SAMRAI/tbox/Transaction.h</includes>
    <includes id="RefineClasses_8h" name="RefineClasses.h" local="yes" imported="no">SAMRAI/xfer/RefineClasses.h</includes>
    <includes id="RefineTransactionFactory_8h" name="RefineTransactionFactory.h" local="yes" imported="no">SAMRAI/xfer/RefineTransactionFactory.h</includes>
    <class kind="class">SAMRAI::xfer::StandardRefineTransactionFactory</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>VariableFillPattern.C</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>VariableFillPattern_8C</filename>
    <includes id="VariableFillPattern_8h" name="VariableFillPattern.h" local="yes" imported="no">SAMRAI/xfer/VariableFillPattern.h</includes>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="file">
    <name>VariableFillPattern.h</name>
    <path>/home/dab/Build/Tools/SAMRAI/source/SAMRAI/xfer/</path>
    <filename>VariableFillPattern_8h</filename>
    <includes id="BoxGeometry_8h" name="BoxGeometry.h" local="yes" imported="no">SAMRAI/hier/BoxGeometry.h</includes>
    <includes id="BoxOverlap_8h" name="BoxOverlap.h" local="yes" imported="no">SAMRAI/hier/BoxOverlap.h</includes>
    <includes id="PatchDataFactory_8h" name="PatchDataFactory.h" local="yes" imported="no">SAMRAI/hier/PatchDataFactory.h</includes>
    <includes id="Pointer_8h" name="Pointer.h" local="yes" imported="no">SAMRAI/tbox/Pointer.h</includes>
    <class kind="class">SAMRAI::xfer::VariableFillPattern</class>
    <namespace>SAMRAI</namespace>
    <namespace>SAMRAI::xfer</namespace>
  </compound>
  <compound kind="page">
    <name>toolbox_complex</name>
    <title>Toolbox Complex Type</title>
    <filename>toolbox_complex</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox</name>
    <title>The Toolbox Package</title>
    <filename>package_toolbox</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_base</name>
    <title>Base Toolbox Classes</title>
    <filename>package_toolbox_base</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_database</name>
    <title>Generic Database Support</title>
    <filename>package_toolbox_database</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_inputdb</name>
    <title>Input Database</title>
    <filename>package_toolbox_inputdb</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_memory</name>
    <title>Memory Support</title>
    <filename>package_toolbox_memory</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_parallel</name>
    <title>Parallel Toolbox Classes</title>
    <filename>package_toolbox_parallel</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_restartdb</name>
    <title>Restart Database</title>
    <filename>package_toolbox_restartdb</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_stream</name>
    <title>Stream Toolbox Classes</title>
    <filename>package_toolbox_stream</filename>
  </compound>
  <compound kind="page">
    <name>package_toolbox_timers</name>
    <title>Timer Classes</title>
    <filename>package_toolbox_timers</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy</name>
    <title>The Hierarchy Package</title>
    <filename>package_hierarchy</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_boxes</name>
    <title>Box Calculus</title>
    <filename>package_hierarchy_boxes</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_dlbg</name>
    <title>Distributed Mesh Metadata</title>
    <filename>package_hierarchy_dlbg</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_patches</name>
    <title>AMR Patch Hierarchy Management</title>
    <filename>package_hierarchy_patches</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_transfer</name>
    <title>Data transfer interfaces</title>
    <filename>package_hierarchy_transfer</filename>
  </compound>
  <compound kind="page">
    <name>package_hierarchy_variables</name>
    <title>AMR Patch Data and Variable Management</title>
    <filename>package_hierarchy_variables</filename>
  </compound>
  <compound kind="page">
    <name>package_transfer</name>
    <title>The Transfer Package</title>
    <filename>package_transfer</filename>
  </compound>
  <compound kind="page">
    <name>package_transfer_datamovers</name>
    <title>Support for Moving Data on SAMR Meshes</title>
    <filename>package_transfer_datamovers</filename>
  </compound>
  <compound kind="page">
    <name>package_transfer_operators</name>
    <title>Patch Data Transfer Operators</title>
    <filename>package_transfer_operators</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata</name>
    <title>The Patchdata Package</title>
    <filename>package_patchdata</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_array</name>
    <title>Array-based Patch Data Support</title>
    <filename>package_patchdata_array</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_boxgeometry</name>
    <title>Box Geometry Computation</title>
    <filename>package_patchdata_boxgeometry</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_cell</name>
    <title>Cell Patch Data</title>
    <filename>package_patchdata_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_edge</name>
    <title>Edge Patch Data</title>
    <filename>package_patchdata_edge</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_face</name>
    <title>Face Patch Data</title>
    <filename>package_patchdata_face</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_fortran</name>
    <title>Support for Patch Data Numerical Routines in FORTRAN</title>
    <filename>package_patchdata_fortran</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_index</name>
    <title>Index Patch Data</title>
    <filename>package_patchdata_index</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_multiblock</name>
    <title>Multiblock Patch Data Operations</title>
    <filename>package_patchdata_multiblock</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_node</name>
    <title>Node Patch Data</title>
    <filename>package_patchdata_node</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators</name>
    <title>Mesh-Independent operators</title>
    <filename>package_patchdata_operators</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_constant_cell</name>
    <title>Cell Data Constant Operators</title>
    <filename>package_patchdata_operators_constant_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_constant_outernode</name>
    <title>Outernode Data Constant Operators</title>
    <filename>package_patchdata_operators_constant_outernode</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_time_interpolate</name>
    <title>Time Interpolation Operators</title>
    <filename>package_patchdata_operators_time_interpolate</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_time_interpolate_cell</name>
    <title>Time Interpolation Operators for Cell Data</title>
    <filename>package_patchdata_operators_time_interpolate_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_operators_time_interpolate_fortran</name>
    <title>Time Interpolation Numerical Routines</title>
    <filename>package_patchdata_operators_time_interpolate_fortran</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outeredge</name>
    <title>Outeredge Patch Data</title>
    <filename>package_patchdata_outeredge</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outerface</name>
    <title>Outerface Patch Data</title>
    <filename>package_patchdata_outerface</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outernode</name>
    <title>Outernode Patch Data</title>
    <filename>package_patchdata_outernode</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_outerside</name>
    <title>Outerside Patch Data</title>
    <filename>package_patchdata_outerside</filename>
  </compound>
  <compound kind="page">
    <name>package_patchdata_side</name>
    <title>Side Patch Data</title>
    <filename>package_patchdata_side</filename>
  </compound>
  <compound kind="page">
    <name>package_mathematical_operations</name>
    <title>Mathematical Operations Package</title>
    <filename>package_mathematical_operations</filename>
  </compound>
  <compound kind="page">
    <name>package_mathops_array</name>
    <title>Basic Array Data Operations</title>
    <filename>package_mathops_array</filename>
  </compound>
  <compound kind="page">
    <name>package_mathops_cell</name>
    <title>Cell Patch Data Operations</title>
    <filename>package_mathops_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_mathops_hierarchy</name>
    <title>Hierarchy Data Operation Base Classes</title>
    <filename>package_mathops_hierarchy</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh</name>
    <title>The Mesh Package</title>
    <filename>package_mesh</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_clustering</name>
    <title>Box Generation</title>
    <filename>package_mesh_clustering</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_gridding</name>
    <title>Patch Hierarchy Construction and Adaptive Meshing</title>
    <filename>package_mesh_gridding</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_load_balance</name>
    <title>Load Balancing</title>
    <filename>package_mesh_load_balance</filename>
  </compound>
  <compound kind="page">
    <name>package_mesh_multiblock</name>
    <title>Multiblock Hierarchy Construction and Adaptive Meshing</title>
    <filename>package_mesh_multiblock</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry</name>
    <title>The Geometry Package</title>
    <filename>package_geometry</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian</name>
    <title>Basic Cartesian Mesh Geometry Support</title>
    <filename>package_geometry_cartesian</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_grid_geom</name>
    <title>Cartesian Grid Geometry</title>
    <filename>package_geometry_cartesian_grid_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_operators_cell</name>
    <title>Cell Data Operators</title>
    <filename>package_geometry_cartesian_operators_cell</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_operators_fortran</name>
    <title>Cartesian Transfer Operator Numerical Routines</title>
    <filename>package_geometry_cartesian_operators_fortran</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_cartesian_patch_geom</name>
    <title>Cartesian Patch Geometry</title>
    <filename>package_geometry_cartesian_patch_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton</name>
    <title>Skeleton Geometry Support</title>
    <filename>package_geometry_skeleton</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton_grid_geom</name>
    <title>Skeleton Grid Geometry</title>
    <filename>package_geometry_skeleton_grid_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton_operators</name>
    <title>Skeleton Operators</title>
    <filename>package_geometry_skeleton_operators</filename>
  </compound>
  <compound kind="page">
    <name>package_geometry_skeleton_patch_geom</name>
    <title>Skeleton Patch Geometry</title>
    <filename>package_geometry_skeleton_patch_geom</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers</name>
    <title>The Solver Package</title>
    <filename>package_solvers</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_FAC</name>
    <title>FAC preconditioner on a SAMRAI hierarchy</title>
    <filename>package_solvers_FAC</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_nonlinear</name>
    <title>Nonlinear solver</title>
    <filename>package_solvers_nonlinear</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages</name>
    <title>Interfaces to Solver Libraries</title>
    <filename>package_solvers_packages</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_petsc</name>
    <title>PETSc Vector Interface</title>
    <filename>package_solvers_packages_petsc</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials</name>
    <title>Interfaces for the Sundials of Solvers</title>
    <filename>package_solvers_packages_sundials</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials_cvode</name>
    <title>CVODE ODE solver interface</title>
    <filename>package_solvers_packages_sundials_cvode</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials_kinsol</name>
    <title>KINSOL Vector and Nonlinear Solver Interface</title>
    <filename>package_solvers_packages_sundials_kinsol</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_packages_sundials_vector</name>
    <title>Sundials Vector Interface</title>
    <filename>package_solvers_packages_sundials_vector</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_poisson</name>
    <title>Poisson solvers on a SAMRAI hierarchy</title>
    <filename>package_solvers_poisson</filename>
  </compound>
  <compound kind="page">
    <name>package_solvers_vectors</name>
    <title>SAMRAI Vector Facilities</title>
    <filename>package_solvers_vectors</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm</name>
    <title>The Algorithm Package</title>
    <filename>package_algorithm</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_femutils</name>
    <title>Rudimentary Support for Finite Element Operations on SAMR Meshes</title>
    <filename>package_algorithm_femutils</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_hyperbolic</name>
    <title>Hyperbolic Conservation Law Integration</title>
    <filename>package_algorithm_hyperbolic</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_implicit</name>
    <title>Implicit time-marching algorithms</title>
    <filename>package_algorithm_implicit</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_method_of_lines</name>
    <title>Time Integration with Method of Lines</title>
    <filename>package_algorithm_method_of_lines</filename>
  </compound>
  <compound kind="page">
    <name>package_algorithm_time_refinement</name>
    <title>Time Integration with Local Time Refinement</title>
    <filename>package_algorithm_time_refinement</filename>
  </compound>
  <compound kind="page">
    <name>package_apputils</name>
    <title>The Application Utilities Package</title>
    <filename>package_apputils</filename>
  </compound>
  <compound kind="page">
    <name>package_apputils_boundary</name>
    <title>Support for physical boundary conditions</title>
    <filename>package_apputils_boundary</filename>
  </compound>
  <compound kind="page">
    <name>package_apputils_plotting</name>
    <title>Visualization Data File Generation</title>
    <filename>package_apputils_plotting</filename>
  </compound>
  <compound kind="struct">
    <name>arith_functions</name>
    <filename>structarith__functions.html</filename>
    <member kind="variable">
      <type>string</type>
      <name>d_name</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>a6838cd6b9483e025e1bcfe2a9226e407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>d_r2r_func</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>afe294daecd3de95c0897ebd843be0ec3</anchor>
      <arglist>)(double)</arglist>
    </member>
    <member kind="variable">
      <type>dcomplex(*</type>
      <name>d_c2c_func</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>a8b2dea25dd45b835b2d7451d66c075ba</anchor>
      <arglist>)(const dcomplex &amp;)</arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>d_c2r_func</name>
      <anchorfile>structarith__functions.html</anchorfile>
      <anchor>a626bf51144619070ddf9d634e633cde4</anchor>
      <arglist>)(const dcomplex &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KeyData</name>
    <filename>structKeyData.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>d_node_type</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a420142f975f55de9e1b8c7a1c8f67c01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_array_type</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a78326cbe9d06f92249cab250df65ad78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_array_size</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>af7a4564332d9d358dacb43b78a3513ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyData *</type>
      <name>d_next</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a9ee2f4730586da87628f02419748430d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_bool</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a1170b06876f4c3e5c8dae35d3000e948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DatabaseBox</type>
      <name>d_box</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a82a9ccd8331ba7243604457840151236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>d_char</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a25be08b7fd5cbe9de9174a6fc91cd961</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>dcomplex</type>
      <name>d_complex</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a48b8c7c9132b3a4bcc4846e6343275d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>d_double</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a642aabda30294210bbadab51480b46e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_integer</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a130b0544158187dc5cd492be08bd646b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string</type>
      <name>d_string</name>
      <anchorfile>structKeyData.html</anchorfile>
      <anchor>a68b76c06c3885c2be591ef2b3eabc972</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_Access</name>
    <filename>classMDA__Access.html</filename>
    <templarg>MDA_TYPE</templarg>
    <templarg>MDA_DIM</templarg>
    <templarg>OrderType</templarg>
    <member kind="typedef">
      <type>MDA_TYPE</type>
      <name>value_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a60138c6ef20a6b04cd3d197bc9bc26bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a8f05cf86e4dfc4cef44b7aa18cc95521</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a9685b2b1275a2a2a5ecbdb62f244c84a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::index_t</type>
      <name>index_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>ab39e940273e205c01dd4a904ba4edb5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OrderType</type>
      <name>order_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>ab08b280293e702c24391d1e04ea94a9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OrderType::reduced_order_t</type>
      <name>reduced_order_t</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a84ff0f1563fb8d116ddff6e47b76d4e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>aae8f806abda69a6f6ae6f7d6df1b7f20</anchor>
      <arglist>(value_t *p=((value_t *) 0), const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>ad7c2181d5e31f3ab439bd0fb80a2c38f</anchor>
      <arglist>(value_t *p, const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a16ada3449cfadc2e0fca244c6945f931</anchor>
      <arglist>(value_t *p, const order_t &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>aaffd9053f09347c30a8b9d208fbaf9f9</anchor>
      <arglist>(const MDA_Access &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SAMRAI_INLINE_KEYWORD</type>
      <name>~MDA_Access</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a898ad1070207746e271441b94a48b439</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>operator bool</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a129dbb968c8baaa6c437e391d851f969</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>operator value_t *</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a95bb2c5692471d042813c0b127ac5dab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setPointer</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a5c46d9eaacc737f90483cf089e05545c</anchor>
      <arglist>(value_t *p)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a1aa6991b870d997a1e81f15f37492156</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a8f0de79baa6054e092704ba3e8e24e62</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a9f3e14d10f2152a07c0340ddf37ef83b</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>af30a76625d44747e40b39579404b68d0</anchor>
      <arglist>(const MDA_Access &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a501a975a146c68d5de02f86155b4686a</anchor>
      <arglist>(const MDA_Access &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>range</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>ae3f46384624d449f7fab1e9a078566ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>beg</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>af3ba92894beae1de1d063a7b23c87211</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>end</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a3ce83bc02e7113fcc0cc835ce9023798</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const size_t &amp;</type>
      <name>size</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a2c44c966ce4c44c9d8e4a98f1ff0be81</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a656e996b978076646e390219283fae9d</anchor>
      <arglist>(const index_t i[MDA_DIM]) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a0309bb525546d593cb30c4dcc47b31d5</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a80a7e3b640d76751b62be44311d2175b</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a5dbb71edb446d4594f75130c9a604693</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator()</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a966fc6b1f414cae4622aaf851eb627e9</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD value_t &amp;</type>
      <name>operator[]</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a4884ddb08c26c0cf6c4e4de29a10b3bc</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD MDA_Access&lt; MDA_TYPE, OrderType::MDA_Reduced_DIM, typename OrderType::reduced_order_t &gt;</type>
      <name>reduce</name>
      <anchorfile>classMDA__Access.html</anchorfile>
      <anchor>a8a44b7e4c0533295c284491574246c3e</anchor>
      <arglist>(index_t i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_AccessConst</name>
    <filename>classMDA__AccessConst.html</filename>
    <templarg>MDA_TYPE</templarg>
    <templarg>MDA_DIM</templarg>
    <templarg>OrderType</templarg>
    <base>MDA_Access&lt; const MDA_TYPE, MDA_DIM, OrderType &gt;</base>
    <member kind="typedef">
      <type>const MDA_TYPE</type>
      <name>value_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>a4f2e45e3fc4c4ae973d26b254fe6bd2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>a7c0069a5e5be48e67b0ba12151fe51e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>a5eeb55753d4aa399c97551fc2119d0db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::index_t</type>
      <name>index_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>ab35cf58fab1be965248f5c91df5174d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OrderType</type>
      <name>order_t</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>a43202f36dbffa0cd94328b960e37ee40</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>abbf323f91bcb1bb95e01d6d269878399</anchor>
      <arglist>(value_t *p=((MDA_TYPE *) 0), const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>aaa1704669f93a7a3ea4a796b2746dd3c</anchor>
      <arglist>(value_t *p, const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>a3d7979449d2e5797d1a5fd3cd618c6bb</anchor>
      <arglist>(value_t *p, const MDA_IndexRange&lt; MDA_DIM &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_AccessConst</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>aafb7635bfe67ecb553dd49f2fcd104bb</anchor>
      <arglist>(const MDA_Access&lt; MDA_TYPE, MDA_DIM, OrderType &gt; &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_AccessConst &amp;</type>
      <name>operator=</name>
      <anchorfile>classMDA__AccessConst.html</anchorfile>
      <anchor>a2f82e98965c8da64449aa70660e0b261</anchor>
      <arglist>(const MDA_Access&lt; MDA_TYPE, MDA_DIM, OrderType &gt; &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_IndexRange</name>
    <filename>classMDA__IndexRange.html</filename>
    <templarg>MDA_DIM</templarg>
    <member kind="typedef">
      <type>short</type>
      <name>dim_t</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>ad1e24f846b5014b25279ce895946e2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>index_t</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>acd9cfdc512e0036bfd969ca477c24665</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_IndexRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a414e145607c9937805e6bf7c7f58070d</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_IndexRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a3a4276fb179530c6dd9e956d30b2d71c</anchor>
      <arglist>(const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual SAMRAI_INLINE_KEYWORD</type>
      <name>~MDA_IndexRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a60d5ec016d34ff43e35b37f59ad9c7db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a1f18189e2837cb5a790fd33471b268fa</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD void</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>aa50439d1dc980bd91ebe947bde7f8982</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_IndexRange &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a1992e4bdf7231b39282d9cf40973eaa8</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a1bc79e53637bfcba6babccc63cf5a640</anchor>
      <arglist>(const MDA_IndexRange &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a3b9fd36c0d0c90fcd7758fc818ed84b1</anchor>
      <arglist>(const MDA_IndexRange &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>beg</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a5ff26e074c473e39cd40c3c05f92132e</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const index_t &amp;</type>
      <name>end</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>af765c98a78faf2e02b20e908110e401f</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const size_t &amp;</type>
      <name>size</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a5181fffc88cc92e4510994c64e0afea8</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>totalSize</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>aa7d5c799041fbc2333b5504ecb0dd802</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a857def9fc361e00a35580a7ff7c75959</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>aa3fcac868cfcc8cd0e93473cf7a51475</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a0d66988e66229652f4e2d8b9c4affde6</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>has</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>ad4b5b4bfa24abdfe3d52455f75cfb9d1</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>adbbbf0ccb2869204e8f3a4d3d6cb5de7ab0cda22b40a4a902bb00c6935a28e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D1</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>adbbbf0ccb2869204e8f3a4d3d6cb5de7a2ce4599ea10e993caf2970c306fde4d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D2</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>adbbbf0ccb2869204e8f3a4d3d6cb5de7afb79982a183a3d2be562491d33d1b92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D3</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>adbbbf0ccb2869204e8f3a4d3d6cb5de7a6d2c2e0f0f5de36a5d7cef9bc263c833</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D4</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>adbbbf0ccb2869204e8f3a4d3d6cb5de7ae9313846a8c1c7834fbb7049732b3dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_t</type>
      <name>d_start</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>ad3a8c156ad6f0d2810d9919d29135020</anchor>
      <arglist>[MDA_DIM &gt; 0?MDA_DIM:1]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_t</type>
      <name>d_stop</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a1c3864147a5c7b31fb1899bad555efcd</anchor>
      <arglist>[MDA_DIM &gt; 0?MDA_DIM:1]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>d_size</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>ab69118bcba9c3803f9d6d656573de811</anchor>
      <arglist>[MDA_DIM &gt; 0?MDA_DIM:1]</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>streamPut</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a0158120cd85ae94ae2a01c10312f10a2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>streamGet</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a06a4a5e4f1b298f330d0310c951f1805</anchor>
      <arglist>(std::istream &amp;is)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>a8e58cc3523c7024ec659a885fe7c10ed</anchor>
      <arglist>(std::ostream &amp;os, const MDA_IndexRange&lt; MDA_DIM &gt; &amp;r)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classMDA__IndexRange.html</anchorfile>
      <anchor>ac0a022894191ddb4dcc33d31eabbedfd</anchor>
      <arglist>(std::istream &amp;is, MDA_IndexRange&lt; MDA_DIM &gt; &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_OrderColMajor</name>
    <filename>classMDA__OrderColMajor.html</filename>
    <templarg>MDA_DIM</templarg>
    <base protection="private">MDA_IndexRange</base>
    <member kind="enumvalue">
      <name>MDA_Reduced_DIM</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a2aabe0a95e8260684bff8d3c900c6f3ca5b75a676baa589bc7f9943a104f833b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>index_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac0fc7c02f4d2d95ba40bc1d8f08eb057</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a8c5ea4b0595b37bd900cd1884dd305c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac4f3eb7e9a7e4d5be0170b8b47bd5d9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_OrderColMajor&lt; MDA_Reduced_DIM &gt;</type>
      <name>reduced_order_t</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ae08bad45317f91bc44016ec5570eb06b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderColMajor</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>addabbb7dad45814f2adb92bb87348a28</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderColMajor</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>abf086bd7cbfbc04aeb4cf2dc6f305bdd</anchor>
      <arglist>(const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderColMajor</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a679d580ca98cd709d123d41e443281d2</anchor>
      <arglist>(const range_t &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>totalSize</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac1c78f92997b9fbe5acc22f8b2f3318e</anchor>
      <arglist>(unsigned short d) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>reduce</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac6da8268961aea4a9e59a88a250f78e3</anchor>
      <arglist>(index_t i, reduced_order_t &amp;new_order) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>range</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ad47fc84a9eec2e0ec9f53b0db62519fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderColMajor &amp;</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a4dd0965da43cf494ad36abe099788ed3</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderColMajor &amp;</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a233554f11683226e496196670804d8df</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderColMajor &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>aac7bacfaaeb2e99be9d50dc493a94a8e</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>aec3c1ec1a0aa30727d7341d3c03c62e3</anchor>
      <arglist>(const MDA_OrderColMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a5d37e7931df926b455afa127bd45fb22</anchor>
      <arglist>(const MDA_OrderColMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a8da021ad2bd8efa5ecbc5cbf2f27ddab</anchor>
      <arglist>(const index_t i[MDA_DIM]) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ada7128e03e600ffef0a5be5f27acd677</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a7a3f6915f1db10de90587c3636ac7998</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a83f5bdd224d5102cdab8da6c440e1cd5</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>a08a2c010969506474f1d0caf5dfa4e74</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>fixedOffset</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>add321314a81d93542fc7211124d38591</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac0ff8ba8689c37e2977a8ae218301f7da201ac16fc91e0b3ba3e6de28ee1e426f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D1</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac0ff8ba8689c37e2977a8ae218301f7da8c163ba36419c9fc4bd0a8974b0ddfc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D2</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac0ff8ba8689c37e2977a8ae218301f7daaba8edb89383c059b1b02ea4f0ce07ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D3</name>
      <anchorfile>classMDA__OrderColMajor.html</anchorfile>
      <anchor>ac0ff8ba8689c37e2977a8ae218301f7da6d9b37eda0b0bc637e6784cd0ec0ef30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MDA_OrderRowMajor</name>
    <filename>classMDA__OrderRowMajor.html</filename>
    <templarg>MDA_DIM</templarg>
    <base protection="private">MDA_IndexRange</base>
    <member kind="enumvalue">
      <name>MDA_Reduced_DIM</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>ae2435729920b6cfcaf9e3d06289daef0a0e4126bfb2dbe11b08fc0c8aa73f8622</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>index_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a7e074033808199321560c8e083c1a1b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_IndexRange&lt; MDA_DIM &gt;</type>
      <name>range_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a21fa6e49209bfff291fa75a4a3749b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>range_t::dim_t</type>
      <name>dim_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>af30a05821286a4685afe94c69e8b82eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>MDA_OrderRowMajor&lt; MDA_Reduced_DIM &gt;</type>
      <name>reduced_order_t</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>ac3a1c2ae597e57f26237104d7a272948</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderRowMajor</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a82ae358d1c44832387ec8836bd5ef3c7</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderRowMajor</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a40a01438e28ae49087099bfc6a93592e</anchor>
      <arglist>(const index_t *si, const index_t *sf)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>MDA_OrderRowMajor</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a2ca1938be01fc37a27fee2d4e4dd3837</anchor>
      <arglist>(const range_t &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>totalSize</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a1890e5e73f1b933be0ebf6b3594e7aeb</anchor>
      <arglist>(unsigned short d) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD size_t</type>
      <name>reduce</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a14a37ad7754a746920a2bc4750d0fc9d</anchor>
      <arglist>(index_t i, reduced_order_t &amp;new_order) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const range_t &amp;</type>
      <name>range</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>aaf9f0808ce649735368ed2fa0524fbcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderRowMajor &amp;</type>
      <name>setSizeAndStart</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a2dd285376ea87369d7625997bad4d6e7</anchor>
      <arglist>(const size_t *sz=((size_t *) 0), const index_t *st=((index_t *) 0))</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderRowMajor &amp;</type>
      <name>setInclusiveRange</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a62a3d8ce3ac83c5cdd7ff31bf160ca89</anchor>
      <arglist>(const index_t first[MDA_DIM], const index_t final[MDA_DIM])</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD const MDA_OrderRowMajor &amp;</type>
      <name>adjustDim</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a5d05eab16521d1da11c28d668697b994</anchor>
      <arglist>(dim_t d, index_t first, index_t final)</arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator==</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a63d0efc50b58ac8b2b099c3027a28eed</anchor>
      <arglist>(const MDA_OrderRowMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD bool</type>
      <name>operator!=</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>ab6d6ce63baa07a7a4e14e9f8b0a3914b</anchor>
      <arglist>(const MDA_OrderRowMajor &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a301cf059d5fcaa75e0e83510bab0b28d</anchor>
      <arglist>(const index_t i[MDA_DIM]) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a5efeebb9b50e02a8c8b227b60cb72295</anchor>
      <arglist>(index_t i0) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a4fa26385a2fb3ed68a0a393e49aab562</anchor>
      <arglist>(index_t i0, index_t i1) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a6ee9549e09323d87907e986e19508f9b</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>offset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a498b6d859dab857ccd542390e6387354</anchor>
      <arglist>(index_t i0, index_t i1, index_t i2, index_t i3) const </arglist>
    </member>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD index_t</type>
      <name>fixedOffset</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a864251e96c635b4c3b01e63de5c91cfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumvalue">
      <name>D0</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a0693464b1c59d31d86fafef0038cff09a58b834c64497a83fe5a10d2a005c83d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D1</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a0693464b1c59d31d86fafef0038cff09ab8e721c3f04ecd26ac4711b9cb71307d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D2</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a0693464b1c59d31d86fafef0038cff09a3b86b8bc3219f89fe69098d4ea48cb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>D3</name>
      <anchorfile>classMDA__OrderRowMajor.html</anchorfile>
      <anchor>a0693464b1c59d31d86fafef0038cff09a5d87951317a1d3d2a889a1cde0c9e00e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>tbox::DescribedClass</name>
    <filename>classtbox_1_1DescribedClass.html</filename>
  </compound>
  <compound kind="struct">
    <name>yy_buffer_state</name>
    <filename>structyy__buffer__state.html</filename>
    <member kind="variable">
      <type>FILE *</type>
      <name>yy_input_file</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a4843d1422e3276b636d475a3095bd948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_ch_buf</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>ad7b8df8d8a4688e57b0b8d3ca75adc85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char *</type>
      <name>yy_buf_pos</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a58aa927f098b99d99e75da80f9b681ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>yy_size_t</type>
      <name>yy_buf_size</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a48302f5f3477a9c78bbddf56d356ef54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_n_chars</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a06406208824817acfec2183b79080945</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_is_our_buffer</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a80ce2431c70dc4f89ced487f18449465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_is_interactive</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>abf5c70eea75581b58c0ee7bd31b14490</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_at_bol</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a9d60c60af6e1a6f69de16871fd64f85f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_fill_buffer</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a63d2afbb1d79a3fc63df9e12626f827d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>yy_buffer_status</name>
      <anchorfile>structyy__buffer__state.html</anchorfile>
      <anchor>a70fd925d37a2f0454fbd0def675d106c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>yyalloc</name>
    <filename>unionyyalloc.html</filename>
    <member kind="variable">
      <type>yytype_int16</type>
      <name>yyss</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>aad44e4a724037e32eeb58333c516bb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>YYSTYPE</type>
      <name>yyvs</name>
      <anchorfile>unionyyalloc.html</anchorfile>
      <anchor>a9494cc8d8cd0eba1b44ca20fe89de5d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="union">
    <name>YYSTYPE</name>
    <filename>unionYYSTYPE.html</filename>
    <member kind="variable">
      <type>char</type>
      <name>u_char</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>a2b65e525f21fb2ae2e40c73426a141b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>u_double</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>afdc2aaac1bee35fc42aaa23c3f24b547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>u_integer</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>a8aad93df7251ff34145802e43323d407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KeyData *</type>
      <name>u_keydata</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>ae234c29a7e2554b3831fe3ec1f7034f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string *</type>
      <name>u_keyword</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>a01d6960b4e8e383622ed4fe73b6b01e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>string *</type>
      <name>u_string</name>
      <anchorfile>unionYYSTYPE.html</anchorfile>
      <anchor>a8ff72d3c3a88d6cfc97abc2e4a78656e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Bdry</name>
    <filename>namespaceBdry.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEFINED</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba362b1042988dd6dd7484015b76e39260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FACE3D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055abaeb57b9d5db99985835df377908fcb076</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE3D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba545ab7e250abb928202f2203c20b96fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE3D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba54acdd9dff31c51ee6a89081fc11ab0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>EDGE2D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055abaa919a6a832c4e925fb55a83c4f108d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE2D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055aba7d837cb077a66a4f6ffc7931f4ac3c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NODE1D</name>
      <anchorfile>namespaceBdry.html</anchorfile>
      <anchor>aad3d96e8fb5584ece448f695bc5055abad8671dc28866256b7bfb8ed9c42bf0f6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>BdryCond</name>
    <filename>namespaceBdryCond.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada6508d34ee94eaac0aeec4dc93b670224</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>REFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada3377087764e427bbf84bcf05490fe5c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadabcfde2b2403594f3acc9c523b3ccc844</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada78ba35a6bdfd280ae3127b910e5778ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XFLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadacf88d17396a28569091ece804b21c567</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YFLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadad1a3e6984bb1f841ee584d9df40cbf3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZFLOW</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadaae2daa9e6bafe5e1cc7dcc81f80680a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XREFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada150739d2a78130a2f916b16de9a4f608</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YREFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada4ccdecd70cf8dd1eb41ff052c58acc12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZREFLECT</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada14321946cc48a1fc327391914b81b638</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XDIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada3c9e860dd167dcad173a79acb7dc2262</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YDIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadadc65a39ac25197e61295cd71afb73e28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZDIRICHLET</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaadab46918087847e9a62a2ef539ed9b0f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XNEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada792dfc264a6250ecd84af96348355b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YNEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada74353458cfc99547da62f64c8a49aff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZNEUMANN</name>
      <anchorfile>namespaceBdryCond.html</anchorfile>
      <anchor>a3665127406930080e9e4761f69dadaada3313306e80b3b14d6a333a33bd71e145</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>BdryLoc</name>
    <filename>namespaceBdryLoc.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731faa78c4eaddbc1c42cb57180bd33e048a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fae71c4036ad2a69d854d5c69d6d0b8cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa34ce3786af9c194354211381ca79a0eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa6d1cbd4a9fef56ddf7d82c7a749e6b43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZLO</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa6081b2b1d87a6250c4693eca7100e8d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ZHI</name>
      <anchorfile>namespaceBdryLoc.html</anchorfile>
      <anchor>a49b41c770aad9ea0ce36dd9cf80b731fa11ed4a34f280d1d9e81a06ceb15b6bae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>EdgeBdyLoc3D</name>
    <filename>namespaceEdgeBdyLoc3D.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98ad9841d711e67c982c9d18530a686c439</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98aa7a2d53657ebc05af365a574f52e47bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a858bc2de524df6a256ad3d64c3a95f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98ab6702ca85e79ec8879da70919b5a38ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a4139c928a385ce281d020885217bf443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98ae015c7751e93ef251b01a9403bd6c521</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a0f73a91e1adfc6797fb8adfe2d065dbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a84c46f5de24d7b4dc66bd0e63cfc87fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a642290223bc0d5e361365a3d7effe29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZLO</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a1dfd0fa1c55d360c2825adfbd7ad0333</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YLO_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a983023c0858deed6eb4510adf3c2e2e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>YHI_ZHI</name>
      <anchorfile>namespaceEdgeBdyLoc3D.html</anchorfile>
      <anchor>a80677abe2604d2a8ee8d738288be0f98a0f4b1b16a167f59be6f654171c40f8a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NodeBdyLoc2D</name>
    <filename>namespaceNodeBdyLoc2D.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1da33c87e68716c8d89ae377eba6cb58179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1daa7a834b68f8fb1237b83fed3880dfa1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1da143473cf6922f5f1b8cf8efc3ea1dd33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI</name>
      <anchorfile>namespaceNodeBdyLoc2D.html</anchorfile>
      <anchor>a18111e3e772b98125a27dea94cbe7c1da799b7ea5bf0215fbeafd8e1179d1f120</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>NodeBdyLoc3D</name>
    <filename>namespaceNodeBdyLoc3D.html</filename>
    <member kind="enumeration">
      <name>Type</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430adb7f44f4bb8c521da9a5a57b9701e649</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430a4f9ae62a85ca17abdfc916214be2f24b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430ad5a9f71ab5d4af29b0f37b0e5a93e418</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZLO</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430a52bc542db4af07afd75c7f009d8d87fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YLO_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430af9a57422ac02726cc49c4db9ad050811</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YLO_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430ae389544f5613b8034259f6f5304119c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XLO_YHI_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430acf1c2882e773ecc4d2aca9b3524cb18a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>XHI_YHI_ZHI</name>
      <anchorfile>namespaceNodeBdyLoc3D.html</anchorfile>
      <anchor>a1710e3668d50a4c92a46747f4298d430aef851cf60880b04f3e8c4195cac1c395</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI</name>
    <filename>namespaceSAMRAI.html</filename>
    <namespace>SAMRAI::tbox</namespace>
    <namespace>SAMRAI::hier</namespace>
    <namespace>SAMRAI::pdat</namespace>
    <namespace>SAMRAI::xfer</namespace>
    <namespace>SAMRAI::math</namespace>
    <namespace>SAMRAI::mesh</namespace>
    <namespace>SAMRAI::geom</namespace>
    <namespace>SAMRAI::solv</namespace>
    <namespace>SAMRAI::algs</namespace>
    <namespace>SAMRAI::appu</namespace>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::algs</name>
    <filename>namespaceSAMRAI_1_1algs.html</filename>
    <class kind="class">SAMRAI::algs::HyperbolicLevelIntegrator</class>
    <class kind="class">SAMRAI::algs::HyperbolicPatchStrategy</class>
    <class kind="class">SAMRAI::algs::ImplicitEquationStrategy</class>
    <class kind="class">SAMRAI::algs::ImplicitIntegrator</class>
    <class kind="class">SAMRAI::algs::MblkPatchBoundaryNodeSum</class>
    <class kind="class">SAMRAI::algs::MethodOfLinesIntegrator</class>
    <class kind="class">SAMRAI::algs::MethodOfLinesPatchStrategy</class>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransaction</class>
    <class kind="class">SAMRAI::algs::OuteredgeSumTransactionFactory</class>
    <class kind="class">SAMRAI::algs::OuternodeSumTransaction</class>
    <class kind="class">SAMRAI::algs::OuternodeSumTransactionFactory</class>
    <class kind="class">SAMRAI::algs::PatchBoundaryEdgeSum</class>
    <class kind="class">SAMRAI::algs::PatchBoundaryNodeSum</class>
    <class kind="class">SAMRAI::algs::TimeRefinementIntegrator</class>
    <class kind="class">SAMRAI::algs::TimeRefinementLevelStrategy</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::HyperbolicLevelIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</filename>
    <base>SAMRAI::algs::TimeRefinementLevelStrategy</base>
    <base>SAMRAI::mesh::StandardTagAndInitStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="enumeration">
      <name>HYP_VAR_TYPE</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2b942773b6adae963741add627777f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TIME_DEP</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2b942773b6adae963741add627777f4da0b702e61e735252458e0c19132477cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INPUT</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2b942773b6adae963741add627777f4da6c92d0f502c292eca993115478274f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_FILL</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2b942773b6adae963741add627777f4da6fa7dc8650ffdf0ad4c2fb9d426648e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FLUX</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2b942773b6adae963741add627777f4da2d61c4a197489f17c392916db2c2e3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TEMPORARY</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2b942773b6adae963741add627777f4da8069329391cb780b2b5d76e73cfbf42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HyperbolicLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>af5fa2447e593a22497301582469269a5</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, HyperbolicPatchStrategy *patch_strategy, bool register_for_restart=true, bool use_time_refinement=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HyperbolicLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aee597348695b9547fe23da382eba4fef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a9465feded30f89fc0e7c9ee79ed90439</anchor>
      <arglist>(tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt; gridding_alg_strategy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a849fb095a9bab541383d52ee692e1a4d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double dt_time, const bool initial_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxFinerLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a4c97ede99c6fb8dad26a6fcfb14e697d</anchor>
      <arglist>(const int finer_level_number, const double coarse_dt, const hier::IntVector &amp;ratio_to_coarser)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>advanceLevel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a5ba2a17c6c9faac17ff334d6109ec3fd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double current_time, const double new_time, const bool first_step, const bool last_step, const bool regrid_advance=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a34f8916fda1edad64672c89a5d5735c0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const tbox::Array&lt; double &gt; &amp;old_times)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ab301426dea6859470977af613c26aded</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const double old_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>synchronizeNewLevels</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a1719a3d9f805060eb2d4d9a81a333bfc</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const bool initial_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a73d431ecf6596132031c9c5895d1f648</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double new_time, const bool can_be_refined)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetDataToPreadvanceState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ab6bac704c80dd3db912a66b4c10af304</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aa65ca0b6f0db34531d96c02679eb5d56</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a6216cd8b3bb691704102c65adf1e7a04</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyGradientDetector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a6916eed77399adaa7222a626dcbea179</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double error_data_time, const int tag_index, const bool initial_time, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a5cbcc25332c0a7a03cf981404542c45b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double error_data_time, const int tag_index, const double deltat, const int error_coarsen_ratio, const bool initial_time, const bool uses_gradient_detector_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>coarsenDataForRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aea889acfc8114745309c36c7f1185f0f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const tbox::Pointer&lt; hier::PatchLevel &gt; coarse_level, const double coarsen_data_time, const bool before_advance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerVariable</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>af522d045051dd53b6e1ba3698623949a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; var, const hier::IntVector ghosts, const HYP_VAR_TYPE h_v_type, const tbox::Pointer&lt; hier::GridGeometry &gt; transfer_geom, const std::string &amp;coarsen_name=std::string(), const std::string &amp;refine_name=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>afc904e9bd24a00f5964b2a3b89aa88e2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2074cb5efc64925a8afcda92dc5fa8d4</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getCurrentContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ac58d6f481476d59b700ef9b92d12c0ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getNewContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a39467039dd573624bbb4a78ce53ba9ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getOldContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a4f8a41901d62ad2908892dfece34de20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getScratchContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a8f4f38510bdd77320d1817ae973933ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getPlotContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a486ef580954429cfecbdfa034e0c6feb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usingRefinedTimestepping</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aeca1cb61d5d5e5f9ce5dd15175b9b50c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ab0fc6774d81a203fc1189d5af578a24d</anchor>
      <arglist>(std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a16f264fb6072d5cd0afbce5ebbb02475</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ad2ce7f0b2c819b22f3f35bbb7e4022c5</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db, bool is_from_restart)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a054e224c8f4f4de88e6697b9c5d6f1a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessFluxData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aac91255ac50bcc1a7cdc3dcb4cf9ec59</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double cur_time, const double new_time, const bool regrid_advance, const bool first_step, const bool last_step)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessFluxData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>abe3256754891e5e02952045785b55ce0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const bool regrid_advance, const bool first_step, const bool last_step)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>copyTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aedcc85d4d6f47e4c8da4a38b30d7c13b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::VariableContext &gt; src_context, const tbox::Pointer&lt; hier::VariableContext &gt; dst_context)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>synchronizeLevelWithCoarser</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ad149b9693b325058400644e3cc0b6142</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; fine, const tbox::Pointer&lt; hier::PatchLevel &gt; coarse, const double sync_time, const double coarse_sim_time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recordStatistics</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a9feb32ec29018e917ffbb5e0e888dcda</anchor>
      <arglist>(const hier::PatchLevel &amp;patch_level, double current_time)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>initializeCallback</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a8af0d40ad9dc6cf40c0c539495757ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>finalizeCallback</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ab60c72a093149e0228e7be4861be4329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const tbox::Dimension</type>
      <name>d_dim</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a56ee516005e1aecaa6e17398d470d9ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HyperbolicPatchStrategy *</type>
      <name>d_patch_strategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ad1fd62450de0975cb5fdafdc8df9fd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; mesh::GriddingAlgorithm &gt;</type>
      <name>d_gridding_alg</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a6e6145a82e06a2693a6b9e446f18ebce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>d_object_name</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a80784753052720d67259c06f291ad47c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_use_time_refinement</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>abcffaf7028f6f01bacd05ec51fc9b2fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_registered_for_restart</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aa831d85dc70a9bd88c926a60458b97e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>d_cfl</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a58c7e19ee086f8cae178f22c316272b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>d_cfl_init</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a5544fbb9b11fd9869fcfce616a916001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_lag_dt_computation</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a00a006b9aca8804410fc8b5a63676a97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_use_ghosts_for_dt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a2825053ac7258fa518458157812d91b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_flux_is_face</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a9ae9fba1d083ad099527ac8db79335ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_flux_face_registered</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>abf73380fa2bf1edd669593261c176514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_flux_side_registered</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a776c618bc1f93655fac5b7110f8d814d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::RefineAlgorithm &gt;</type>
      <name>d_bdry_fill_advance</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>abdc8c2776b482e8a74fd0a469b4208ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Array&lt; tbox::Pointer&lt; xfer::RefineSchedule &gt; &gt;</type>
      <name>d_bdry_sched_advance</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ab5f729f2a277cfa7b37095ff87179ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::RefineAlgorithm &gt;</type>
      <name>d_bdry_fill_advance_new</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>acb9939296ed0981d89f6dea778eb584b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Array&lt; tbox::Pointer&lt; xfer::RefineSchedule &gt; &gt;</type>
      <name>d_bdry_sched_advance_new</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a8834b020910a69548020281be5aca8ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::RefineAlgorithm &gt;</type>
      <name>d_bdry_fill_advance_old</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aaa6a62fc3d3d9b43ea84dc8071e4e7de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::CoarsenAlgorithm &gt;</type>
      <name>d_coarsen_fluxsum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a5a1fe41abb11db83ed241ff66ea0e0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::CoarsenAlgorithm &gt;</type>
      <name>d_coarsen_sync_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a205484f8bd4e63325c7661a285247c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::CoarsenAlgorithm &gt;</type>
      <name>d_sync_initial_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ad58444fcbb08eb7c6b18c6a80c0719f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::CoarsenAlgorithm &gt;</type>
      <name>d_coarsen_rich_extrap_init</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ae2736ef3c58c9dcd20a0257039743a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::CoarsenAlgorithm &gt;</type>
      <name>d_coarsen_rich_extrap_final</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ae537326918f06e7f0169d84860ad58d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; xfer::RefineAlgorithm &gt;</type>
      <name>d_fill_new_level</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ac48ecda85e779dd99f857d278f20c842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>d_number_time_data_levels</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>adbf38da36072aee2585c4837bf96bf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>d_scratch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aef944e9211d227fd4dc5bdb9fadf57c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>d_current</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a3c75ee5f422e82b9973c460f723ada6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>d_new</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a19b271c6339d1c613ac46c5c284e45ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>d_old</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a0f7963b5d3b1cbe6090e11e726737cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>d_plot_context</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ad0d4f548e88783879894db342cb0e4b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::List&lt; tbox::Pointer&lt; hier::Variable &gt; &gt;</type>
      <name>d_all_variables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a4e945e97b7c0712721d7c74cbf5387d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::List&lt; tbox::Pointer&lt; hier::Variable &gt; &gt;</type>
      <name>d_time_dep_variables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a6a84de740a1eded66bb049c4c5bb0c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::List&lt; tbox::Pointer&lt; hier::Variable &gt; &gt;</type>
      <name>d_flux_variables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a62edf806bfad587b5bdc0fd25739d071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>tbox::List&lt; tbox::Pointer&lt; hier::Variable &gt; &gt;</type>
      <name>d_fluxsum_variables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a7a43b561bd0dd1a50939060543bc8265</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_saved_var_scratch_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a0cac9e3ba65f2e0310263ce8192a11f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_temp_var_scratch_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aab460032fadb6cf4d7b8b1d278298009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_new_patch_init_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a737a79b97e43866bb1c74d1b5284d552</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_new_time_dep_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a6ca8cb31b2b57082769d388938309acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_flux_var_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a209b50f00e60dcdc96fd0bb8b23120c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_fluxsum_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a5a8323831734cb0a99005a3e980c9795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_have_flux_on_level_zero</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>af3b0ef4da65463919c4f5d0b73082255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>hier::ComponentSelector</type>
      <name>d_old_time_dep_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a21df7ce79f4fb8ead2b2cdc91507bae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>d_distinguish_mpi_reduction_costs</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a75faaa20205903021fad9d6a245b5272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int</type>
      <name>ALGS_HYPERBOLIC_LEVEL_INTEGRATOR_VERSION</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a52ac7d7e7d43a47347010463814eea2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>s_barrier_after_error_bdry_fill_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a6f8e6951687d0a266b694bbbdb63481a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_advance_bdry_fill_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a69c66019baf8a3ecba001ff80d6a4fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_error_bdry_fill_create</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a591783bf76efbd7285b9705e6880cac8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_error_bdry_fill_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aab144d736503312b1b6bb39bd1daf216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_mpi_reductions</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>af1cf3564b7efd98adbc257397abc498a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_initialize_level_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aae94b9ebc39baf6c61558574d2832310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_init_level_create_sched</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a15fbf5210ee6ee7a01af0a863626e6d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_init_level_fill_data</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ade8145e977214e1b55ebdee09cfa14fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_init_level_fill_interior</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ace72e83bda2ce87d703c37f0a7cf8ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_advance_bdry_fill_create</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>afedd245d544d41c92b842f811a7f7aff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_new_advance_bdry_fill_create</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a9f8041fcb4d40f31a72d93de33269399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_apply_gradient_detector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a4965174f59af9e7a980ed81c94d52172</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_tag_cells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a34627666dd907f4319df746871fb7c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_coarsen_rich_extrap</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a29e1a8c344852b39d23f11eba7fac73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_get_level_dt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>ac6c58bb0a80e659ac1380572de921d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_get_level_dt_sync</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a9f453ecd12cdcb16d2cc896e49eee803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_advance_level</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a34940e7e9211cab5fe33a530c778c6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_new_advance_bdry_fill_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a0c8e0ca9839fd9c310130cf4495a28f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_patch_num_kernel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a35f577ae5cb984b57b909b0c8d251dd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_advance_level_sync</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a659998aa4e7a149fc8223e25f236a9b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_std_level_sync</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a26795e4f679e8e9595c7ec124000510e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_sync_new_levels</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a580e98ec7ba7b3012327b392343259b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_barrier_after_error_bdry_fill_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a8d90c78e32f555898eaf8acf486e0aee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_sync_initial_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>aac8387b520ef6324defdcb6e3bef1fa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_sync_initial_create</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a8124b2be09e0e62b8938bd7abb5c2875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_coarsen_fluxsum_create</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a673d8ce83e5625fa8e909d9c58f1bc4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_coarsen_fluxsum_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>adfb041d372e0157c2edc1efd559ac461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_coarsen_sync_create</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a055b0fd3f93835efb075f817e1dea962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_coarsen_sync_comm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a3cc3059e1d25136a310c4026bda50ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Array&lt; tbox::Pointer&lt; tbox::Statistic &gt; &gt;</type>
      <name>s_boxes_stat</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a154d03e3ade8384b94061dae8a7db61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Array&lt; tbox::Pointer&lt; tbox::Statistic &gt; &gt;</type>
      <name>s_cells_stat</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a4b00a11e8cf65db3c045a9c565116aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::Array&lt; tbox::Pointer&lt; tbox::Statistic &gt; &gt;</type>
      <name>s_timestamp_stat</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a562f5a54d36620f1587bd653fd2c87c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static tbox::StartupShutdownManager::Handler</type>
      <name>s_initialize_handler</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicLevelIntegrator.html</anchorfile>
      <anchor>a4606a7a41a5211b8eef27623280aea7e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::HyperbolicPatchStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <base>SAMRAI::xfer::CoarsenPatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>HyperbolicPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a05b9407c10ef0ae70ee14d756d507bec</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HyperbolicPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>aaa4bc1edb9920d6941819b5ca8eb5a15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>registerModelVariables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a4d86d87131ab8824d6884167639acb70</anchor>
      <arglist>(HyperbolicLevelIntegrator *integrator)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a0daef6ee86089e2c854cc98e6ea90d5a</anchor>
      <arglist>(HyperbolicLevelIntegrator *integrator, mesh::GriddingAlgorithm *gridding_algorithm)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>ab8610a2fa09736537b72315a66bfa326</anchor>
      <arglist>(hier::Patch &amp;patch, const double data_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeStableDtOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>adce818986288899185e5832fd7b565f6</anchor>
      <arglist>(hier::Patch &amp;patch, const bool initial_time, const double dt_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeFluxesOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a6ae2404eb90897f5e311baafbe1a6fd3</anchor>
      <arglist>(hier::Patch &amp;patch, const double time, const double dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>conservativeDifferenceOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a5c416adf7d32d80d73eb8cef33b72e96</anchor>
      <arglist>(hier::Patch &amp;patch, const double time, const double dt, bool at_syncronization)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessAdvanceLevelState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a61a67c8bc038cd3ce70fdff211d060ee</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;level, double current_time, double dt, bool first_step, bool last_step, bool regrid_advance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessAdvanceLevelState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a9adac9ab94c81600721ef801cae4eaa6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;level, double current_time, double dt, bool first_step, bool last_step, bool regrid_advance)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tagGradientDetectorCells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a7acd9a47ff0f33244ffe54a7352ce424</anchor>
      <arglist>(hier::Patch &amp;patch, const double regrid_time, const bool initial_error, const int tag_index, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tagRichardsonExtrapolationCells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a7fa6aaad2f76751da8bf53f55cad7eee</anchor>
      <arglist>(hier::Patch &amp;patch, const int error_level_number, const tbox::Pointer&lt; hier::VariableContext &gt; coarsened_fine, const tbox::Pointer&lt; hier::VariableContext &gt; advanced_coarse, const double regrid_time, const double deltat, const int error_coarsen_ratio, const bool initial_error, const int tag_index, const bool uses_gradient_detector_too)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>af482fa0a13cf89f84276b5d1f6b09822</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a8af2595c466c1d301c6d974d20065907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a1bb51ccf69a95f4b79ca2267b95b024e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a89c015aca82549de607372e86b6ff0a0</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a9a32430cb82ef0e0cf58c5fff2f1cd51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>ad03f79d7e629750703306fc7f9cdf5b5</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a03c73730af7828b262a1b6296f179347</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getDataContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a8a070b517a416e32bc1189879cdc9d5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDataContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a5f293b4c76ab975f00611e518f398060</anchor>
      <arglist>(tbox::Pointer&lt; hier::VariableContext &gt; context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearDataContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a7a96b203c4ce422aba0944c9bca0b469</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1algs_1_1HyperbolicPatchStrategy.html</anchorfile>
      <anchor>a703b82050f9360f44a344272f57ae711</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::ImplicitEquationStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>ImplicitEquationStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>add0a95816c45337f53cb464e3b65d74d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImplicitEquationStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>a6784f714a2a9d8d1c1ae9999a44ad1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setupSolutionVector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>ac8c83eb2d33c0c4326175faa6877101c</anchor>
      <arglist>(tbox::Pointer&lt; solv::SAMRAIVectorReal&lt; double &gt; &gt; solution)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getInitialDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>a16f604968a42cb815c6c7c41de0abbbe</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getNextDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>af694f80e5242f7e8ff152dad6d1191a5</anchor>
      <arglist>(const bool good_solution, const int solver_retcode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setInitialGuess</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>a134f87aeaa08d4b9c56a300699f768d9</anchor>
      <arglist>(const bool first_step, const double current_time, const double current_dt, const double old_dt)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>checkNewSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>adce15089d82d877daeab7935000dddd2</anchor>
      <arglist>(const int solver_retcode)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>updateSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitEquationStrategy.html</anchorfile>
      <anchor>a14c4f95d90ca8e69715c0a820ed2ea67</anchor>
      <arglist>(const double new_time)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::ImplicitIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>ImplicitIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>af6e5923262bfcd07398066278c3feb25</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, ImplicitEquationStrategy *implicit_equations, solv::NonlinearSolverStrategy *nonlinear_solver, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ImplicitIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a708efc1e4ab94b62b36b475c68874307</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a682d2067a0e651b1cabd0d61f65b9e68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>advanceSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a78bcc02aaf136261232b78c5072b65ce</anchor>
      <arglist>(const double dt, const bool first_step)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNextDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>ac165b0444f0f783dae58d70f556950f3</anchor>
      <arglist>(const bool good_solution, const int solver_retcode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkNewSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>ad02fc407ef8863e5523df3cdba6c0eb9</anchor>
      <arglist>(const int solver_retcode) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>updateSolution</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>afde3e964c7d665856e6336c503ebf114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a749fe03b435ec21ea337ed8f81514ff5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFinalTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>acbb5d9f02e662c1e4e1df005957904ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a93021b2fd61b1f0b4d71d18d8c237255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>aecff002b493199a7812019bddc197ba2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegratorStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>aeef01fd3f7314166c2e647499c3cabab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxIntegratorSteps</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a34219481147f9fb6334395f244445d85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stepsRemaining</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>abca81bc5791448092b3aab5071bdd2e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a89e68eacfb6209b36b0b63dad51bb822</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>a425c639963dd565d8e8bc5ae7ddacb79</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1ImplicitIntegrator.html</anchorfile>
      <anchor>ad5dc0565fda474a7f85e79ad80bfe112</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::MblkPatchBoundaryNodeSum</name>
    <filename>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</filename>
    <member kind="function">
      <type></type>
      <name>MblkPatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>a8bfd40431d981aee6934c5986b876ed4</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MblkPatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>a75cbf4ec30d5d2b24cea98716df551e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>a06ac68b1270b5ef2151d7ae3e99385e9</anchor>
      <arglist>(int node_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>ab0b118a5f0e6e1d1e55e861ce1f70ee7</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>a5c6d5dc0154e29b6f47f068ca54ef258</anchor>
      <arglist>(const bool fill_hanging_nodes=false) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MblkPatchBoundaryNodeSum.html</anchorfile>
      <anchor>addeca215ec9b830ef34de698a2af27cd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::MethodOfLinesIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <base>SAMRAI::mesh::StandardTagAndInitStrategy</base>
    <member kind="enumeration">
      <name>MOL_VAR_TYPE</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a25ed25ae080357a46aaac785496e1775</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SOLN</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a25ed25ae080357a46aaac785496e1775a10c156c3215dfc4bbff06ec8eb25d053</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RHS</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a25ed25ae080357a46aaac785496e1775a7e0bc60a9247f08d98d861c39d520594</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MethodOfLinesIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a9e4e2cbeb62d9d220347d0db408dae4f</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, MethodOfLinesPatchStrategy *patch_strategy, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MethodOfLinesIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a313ebec84e01ccd5939bbf6c858c33f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a5271f5265c90c8a56264b2c951670b9b</anchor>
      <arglist>(tbox::Pointer&lt; mesh::GriddingAlgorithm &gt; gridding_alg)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTimestep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>acdbd1112c338a76bd34d78a30790b5c4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double time) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a810362ba773b5dcd8e46d4c5cc542a1f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double time, const double dt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerVariable</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a7342a7bd2298a802fe44437571ad8e29</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const hier::IntVector &amp;ghosts, const MOL_VAR_TYPE m_v_type, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;transfer_geom, const std::string &amp;coarsen_name=std::string(), const std::string &amp;refine_name=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a6e6a7b029afd818fc75f9ce19b25c556</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a05996884055563c35d075cc001768e78</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>aa064fc9f31236649ebf287a5f90c3f69</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyGradientDetector</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a991ad37d70ede7681fbc396fef3ab834</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double time, const int tag_index, const bool initial_time, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a68b9b4e3ec9695e04a3d0e0996f944bf</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesIntegrator.html</anchorfile>
      <anchor>a15a5838ed56904bc287bb7666e7ef09d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::MethodOfLinesPatchStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <base>SAMRAI::xfer::CoarsenPatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>MethodOfLinesPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a6a0fcbec48f805365a33797f5518b2ad</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~MethodOfLinesPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a497f8142c09f645c1cf1d760b86dc413</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>registerModelVariables</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>aff8f6ef934a337a2e4f86f000233851c</anchor>
      <arglist>(MethodOfLinesIntegrator *integrator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>ae4e0d2e3309dbb5be78158c84212db05</anchor>
      <arglist>(hier::Patch &amp;patch, const double time, const bool initial_time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeStableDtOnPatch</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a68c086922e74ae0f8cba318573df1c41</anchor>
      <arglist>(hier::Patch &amp;patch, const double time) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>singleStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a3163b0a1c4d2e11d74f12591aad59e95</anchor>
      <arglist>(hier::Patch &amp;patch, const double dt, const double alpha_1, const double alpha_2, const double beta) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>tagGradientDetectorCells</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a0844652baf6e1088a17bc34459c3942a</anchor>
      <arglist>(hier::Patch &amp;patch, const double regrid_time, const bool initial_error, const int tag_index, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a712040f2a35c444883c9cb8e3f06af14</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a56d986fcc6c49f63c4736aa151c1a2ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a4b2ba01375cb3e44e9403830dc1e016e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a982294cf96ccb6b2a1f1d14fa0d7f77d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a84c6703056ca0ca6bd58cd72a4720cce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>aea26ab0ce2b459b198684bbeb7b19230</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a16adbeea6ca05602dcd88223d96dbd7d</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getInteriorWithGhostsContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a015302cff6efe40346474730564ee72b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getInteriorContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a67568ab21871beabd4b1b6d0ea1a720d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInteriorWithGhostsContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a6cdd927aa27c450389506f5364867d21</anchor>
      <arglist>(tbox::Pointer&lt; hier::VariableContext &gt; context)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInteriorContext</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>a9536a58f1e42ce437aead598c1dff388</anchor>
      <arglist>(tbox::Pointer&lt; hier::VariableContext &gt; context)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1algs_1_1MethodOfLinesPatchStrategy.html</anchorfile>
      <anchor>ad3798ebda19f460a991251c11573bf06</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuteredgeSumTransaction</name>
    <filename>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>afc6f6f7fa1f1e7c2e60bcd62cdb575c9</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a6b8a198711504f2bd127d0a85bae06c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>aa859a20a7118d8ca59a38f5d1468a121</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>aa967f76bd6cd428cb4e8e75921749375</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>abaa62188794a21f7ae3d485430b600e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a2bd60472bebea83d14a6690e685ae61d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a978655d47cd90e8edf64ecbf2d629d34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a8f9b5241347b89525e748d19aebe555c</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a99dce8d595bc9ca7973477bfe02e8b8b</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a03d3b240a4f2ef083ba37b00cea29940</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>aa5bef558346f1d3963cdbdc57f967732</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>ad54990c2b4334e72e367d3bb1faf817a</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransaction.html</anchorfile>
      <anchor>a2956a92a8166308ce79b647aaab453db</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuteredgeSumTransactionFactory</name>
    <filename>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</filename>
    <base>SAMRAI::xfer::RefineTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>a1737e3f6544e59048a7130dd22541ef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>a6406b8048bead2b62baf327dca750cf8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>a2bbfbec30007f132fbe0a2ae8621c770</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>aa8d684255e4c7de98932ece6e2e8141f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>ae9b41e80061c795836ff1764585eb2c4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>a25f83366d0922e21e005bda45671e739</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preprocessScratchSpace</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuteredgeSumTransactionFactory.html</anchorfile>
      <anchor>a5265664cb85ceb165a23e8c830f60bdf</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time, const hier::ComponentSelector &amp;preprocess_vector) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuternodeSumTransaction</name>
    <filename>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>OuternodeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a1c4570c9f198cf294aa7d1146a5043a2</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeSumTransaction</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a612feb2f27363eb710d9d8dba4cbd40a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>afa1f1c42394923ebbe74897be9f8445c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>add88634f39f3813502ac8d0c97dbdf87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>ab7f43386dd4388b651bed94a4e51da74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a89ca3f5e98c4ee68267e18d790591d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>ac884c3efa3b29cd4ae9e9e8d9bf9bc77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a9cf3d27197507ff6c1a6d182b10b5c3b</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>aeec0813aee54dc25d075289485a68cae</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>af5a8a8cc0f8db0802e81d99afdaa033b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>ad6d3ae065b7fdcd8c8f4158c25eb351f</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>a1caaa49d52ff2d07e101d8a239c94284</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransaction.html</anchorfile>
      <anchor>ace1af01d6849a5a2295e44146e098991</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::OuternodeSumTransactionFactory</name>
    <filename>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</filename>
    <base>SAMRAI::xfer::RefineTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>OuternodeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>aab9a0a20962fb3bc598db314f33812cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeSumTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>a1c3ef27cc602ed8e38253454c0d8d8a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>a4e40d3ff242c9ce7f7f6eb4a7de0aead</anchor>
      <arglist>(const xfer::RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>a75a2a18b55df79a3f1db460076056968</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>ae12208fbff8e36ec84e8fd56bea18e92</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>ae2e5e01af085e7eb9c3f325434ee6270</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_node, const hier::Box &amp;src_node, int ritem_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preprocessScratchSpace</name>
      <anchorfile>classSAMRAI_1_1algs_1_1OuternodeSumTransactionFactory.html</anchorfile>
      <anchor>a0a7f27417d8a6cd827bf44d3d892fec8</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time, const hier::ComponentSelector &amp;preprocess_vector) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::PatchBoundaryEdgeSum</name>
    <filename>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchBoundaryEdgeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>a3f6779a264640c2b08789c586f556ebc</anchor>
      <arglist>(const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchBoundaryEdgeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>af170d39869c705b6066a6ffca21565f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>a2d8f676dcb0bc7007e630ef052eb9a74</anchor>
      <arglist>(int edge_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>a52529c3f70e413b2a76ed09da38c6778</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>ad813c9c0520f8d649bb272ab2cc98c15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>a9d05f2399fbcc746ae3c6005f4b7540d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumSharedPatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>a060b27ff4aea1e9774ea54824f16e2e1</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumUniquePatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryEdgeSum.html</anchorfile>
      <anchor>a24075e95e4b60d09a669c8258ef5a1dc</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::PatchBoundaryNodeSum</name>
    <filename>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>aa1832c3d8b885320be4e4aa595fbe6da</anchor>
      <arglist>(const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchBoundaryNodeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>a2e26f5c7bddae4a40e3cc9c3cdb45e97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>aed77c21cae01fd7954e5689993d229aa</anchor>
      <arglist>(int node_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>aea74b3405276117d3d5fd132f8418555</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>a432d12b4f0dbda6400f3f2abd10af97e</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSum</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>a0a8c7e4775157b6dcb33ee1cbb9d5eb1</anchor>
      <arglist>(const bool fill_hanging_nodes=false) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>a1c66353c8bf56cca8b577ad7ef874c18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumSharedPatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>aaae1016ab6a00007dbc51a3660b971de</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNumUniquePatchDataSlots</name>
      <anchorfile>classSAMRAI_1_1algs_1_1PatchBoundaryNodeSum.html</anchorfile>
      <anchor>a3e5f00d614aa88248b0aba35fd68e3e8</anchor>
      <arglist>(int max_variables_to_register)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::TimeRefinementIntegrator</name>
    <filename>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>TimeRefinementIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>aad901dffb0bb40717ade0e9a0d8f544c</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, tbox::Pointer&lt; TimeRefinementLevelStrategy &gt; level_integrator, tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt; gridding_algorithm, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeRefinementIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a9b7ba3a25d927b490225a61e22b210d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>initializeHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a9bb69f278be2cb9033cd4b17870967c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>advanceHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a6d970af336b5733b5d87325be8099ce9</anchor>
      <arglist>(const double dt, const bool rebalance_coarsest=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>atRegridPoint</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>ae8b3fc2a93dbefdc105749bc0695fa89</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getIntegratorTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>aa9c469c622a818cb1dfc93767a8534ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStartTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>acac509949d13de742350250ef533788a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEndTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>addf573e7926a65ce338aa7d6f4c509f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegratorStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a0b91caec9855ab03bdc9c493e8948725</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxIntegratorSteps</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>aac7cf5f6fd057fe5b213c0bf3c625033</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stepsRemaining</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>aa637dea7e6b98f9b92f5a0ee9da856e6</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>stepsRemaining</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a5606ca2b62a312de64a42f87efb77d14</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLevelDtActual</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a921c17fcaf8f6557b6a5dd3f9d975cd3</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLevelDtMax</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a3a81d839dfb35df945a9683245d333f3</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLevelSimTime</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a9c9f46ec0378d2984c57736b72db90c0</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a8c5839ee6ba177907b0d417cb7a83981</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelMaxSteps</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a6503cb2a501f9cb69dd674cdedbf4758</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a21fa1a68f1fbcd0905cc4addc2e6f387</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; TimeRefinementLevelStrategy &gt;</type>
      <name>getLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a0b84f80e7fab5016511f8ff542f84be0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt;</type>
      <name>getGriddingAlgorithm</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a6b663900a6c8aed4c3f62a3fe9a77076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>firstLevelStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a17f4b746ba50f37ecc72a73974e1dbd8</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>lastLevelStep</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a52f49d4c9d75bd2dbad451442e7bc60d</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRegridInterval</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>ad7787f1f1754dd94bb80c073909091c9</anchor>
      <arglist>(const int regrid_interval)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a892af1c027f4407d368c63cd635d5d41</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDataForLevel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a32c6c41d23d2f2a0655da6cecce9e815</anchor>
      <arglist>(std::ostream &amp;os, const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a8c5fc5ff761781dc2d39d32f72da8bc2</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementIntegrator.html</anchorfile>
      <anchor>a5f53c9db842cc8899e36a8adf58f05e4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::algs::TimeRefinementLevelStrategy</name>
    <filename>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeRefinementLevelStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a9997234609f0bd705a27109e3d0014a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeRefinementLevelStrategy</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a68b75415f2548062e5a2f7f7a4ac8c86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeLevelIntegrator</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>ab09dec45172edb9e2ca9e1fb16e53c42</anchor>
      <arglist>(tbox::Pointer&lt; mesh::GriddingAlgorithmStrategy &gt; gridding_alg)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>getLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a0dea73c6d92c0d5650558e74ff6f25ae</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double dt_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getMaxFinerLevelDt</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a7fe9147d19eab00b85f1d0bad43bbebb</anchor>
      <arglist>(const int finer_level_number, const double coarse_dt, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>advanceLevel</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a534939022d062cd2e4882bd593615cc3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double current_time, const double new_time, const bool first_step, const bool last_step, const bool regrid_advance=false)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a8d9264f55b6d846d33b520079adc02e0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const tbox::Array&lt; double &gt; &amp;old_times)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>standardLevelSynchronization</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>af59500374fbb0ab28f05539853019f40</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const double old_time)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>synchronizeNewLevels</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a845d5415e7001ad1d1e135c3f0c06cb6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level, const double sync_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a8f7fe247acece65cc34faaa4bf684ddd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double new_time, const bool can_be_refined)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetDataToPreadvanceState</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a3cd6adacd79c77b9e9967564554ade0c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>usingRefinedTimestepping</name>
      <anchorfile>classSAMRAI_1_1algs_1_1TimeRefinementLevelStrategy.html</anchorfile>
      <anchor>a9ca6bd9cace490319f43f955dac7444f</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::appu</name>
    <filename>namespaceSAMRAI_1_1appu.html</filename>
    <class kind="class">SAMRAI::appu::BoundaryUtilityStrategy</class>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities2</class>
    <class kind="struct">SAMRAI::appu::CartesianBoundaryUtilities3</class>
    <class kind="class">SAMRAI::appu::VisDerivedDataStrategy</class>
    <class kind="class">SAMRAI::appu::VisItDataWriter</class>
    <class kind="class">SAMRAI::appu::VisMaterialsDataStrategy</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::BoundaryUtilityStrategy</name>
    <filename>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundaryUtilityStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>a91925ee13921bbe899abc489d747af17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoundaryUtilityStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>ad4ec3b11faf2d48816241474f60db9d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readDirichletBoundaryDataEntry</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>a7a6202d2412b973fcd0377428f102d2c</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db, std::string &amp;db_name, int bdry_location_index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readNeumannBoundaryDataEntry</name>
      <anchorfile>classSAMRAI_1_1appu_1_1BoundaryUtilityStrategy.html</anchorfile>
      <anchor>ac43db7be1e82562e07449455292fdc23</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db, std::string &amp;db_name, int bdry_location_index)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::appu::CartesianBoundaryUtilities2</name>
    <filename>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readBoundaryInput</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>a3686b2d9ec841d5fb848c9d043de4270</anchor>
      <arglist>(BoundaryUtilityStrategy *bdry_strategy, tbox::Pointer&lt; tbox::Database &gt; bdry_db, tbox::Array&lt; int &gt; &amp;edge_conds, tbox::Array&lt; int &gt; &amp;node_conds, const hier::IntVector &amp;periodic)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillEdgeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>a0eddf803124e7292f9dae016daaa8fdf</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_edge_conds, const tbox::Array&lt; double &gt; &amp;bdry_edge_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillNodeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>a881659432264c670aced983fe91c7f9f</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_node_conds, const tbox::Array&lt; double &gt; &amp;bdry_edge_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getEdgeLocationForNodeBdry</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>a87e4825f55b5a99ef142e4c311cb39da</anchor>
      <arglist>(int node_loc, int node_btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>checkBdryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities2.html</anchorfile>
      <anchor>aed40928d72cbbdf56bb230e35b83daeb</anchor>
      <arglist>(const std::string &amp;varname, const hier::Patch &amp;patch, int data_id, int depth, const hier::IntVector &amp;gcw_to_check, const hier::BoundaryBox &amp;bbox, int bcase, double bstate)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::appu::CartesianBoundaryUtilities3</name>
    <filename>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>readBoundaryInput</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>ad75804fb8af2ed5d577026c72a9835d9</anchor>
      <arglist>(BoundaryUtilityStrategy *bdry_strategy, tbox::Pointer&lt; tbox::Database &gt; bdry_db, tbox::Array&lt; int &gt; &amp;face_conds, tbox::Array&lt; int &gt; &amp;edge_conds, tbox::Array&lt; int &gt; &amp;node_conds, const hier::IntVector &amp;periodic)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillFaceBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>a21108872063e3b36b57fee2090c001c0</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_face_conds, const tbox::Array&lt; double &gt; &amp;bdry_face_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillEdgeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>afa7e3d60f82c4353ffc7c73c16956c63</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_edge_conds, const tbox::Array&lt; double &gt; &amp;bdry_face_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fillNodeBoundaryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>ac1885ed0ca27c651e0b5e38bf847b43a</anchor>
      <arglist>(const std::string &amp;varname, tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;vardata, const hier::Patch &amp;patch, const hier::IntVector &amp;ghost_width_to_fill, const tbox::Array&lt; int &gt; &amp;bdry_node_conds, const tbox::Array&lt; double &gt; &amp;bdry_face_values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getFaceLocationForEdgeBdry</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>ab98159d41eb1fe0152cd431ea4bb8d3d</anchor>
      <arglist>(int edge_loc, int edge_btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getFaceLocationForNodeBdry</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>a9c01b91b459f2f01a2c64ed7ce6aba82</anchor>
      <arglist>(int node_loc, int node_btype)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>checkBdryData</name>
      <anchorfile>structSAMRAI_1_1appu_1_1CartesianBoundaryUtilities3.html</anchorfile>
      <anchor>a81fabf2eeb2a0f8e3c9329114bfc1d5f</anchor>
      <arglist>(const std::string &amp;varname, const hier::Patch &amp;patch, int data_id, int depth, const hier::IntVector &amp;gcw_to_check, const hier::BoundaryBox &amp;bbox, int bcase, double bstate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::VisDerivedDataStrategy</name>
    <filename>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>VisDerivedDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>a7a76f1cc6335c3ede2a513a07c8abdc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisDerivedDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>a50f67bf4ee4cf6b86b514a92c5c9cf98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>packDerivedDataIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>ae97965266e0453219692ed0a438fe659</anchor>
      <arglist>(double *buffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;variable_name, int depth_index) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>packMixedDerivedDataIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisDerivedDataStrategy.html</anchorfile>
      <anchor>a45083218cdd8220f0894d5337b33cc58</anchor>
      <arglist>(double *buffer, std::vector&lt; double &gt; &amp;mixbuffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;variable_name, int depth_index) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::VisItDataWriter</name>
    <filename>classSAMRAI_1_1appu_1_1VisItDataWriter.html</filename>
    <member kind="function">
      <type></type>
      <name>VisItDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a446ed46d6dfe9d1e91b77f4d0b07e623</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, const std::string &amp;dump_directory_name, int number_procs_per_file=1, bool is_multiblock=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisItDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a0a5c9eefe7375936b608923755cfde9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultDerivedDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a5fc1209fb9491f0e0200c8c1582e8a54</anchor>
      <arglist>(VisDerivedDataStrategy *default_derived_writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaterialsDataWriter</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a6c98c4d9c88136e523c8f44b662d0c26</anchor>
      <arglist>(VisMaterialsDataStrategy *materials_data_writer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerPlotQuantity</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>aea9a183d8538e58673e8fd9ea9d4bd18</anchor>
      <arglist>(const std::string &amp;variable_name, const std::string &amp;variable_type, const int patch_data_index, const int start_depth_index=0, const double scale_factor=1.0, const std::string &amp;variable_centering=&quot;UNKNOWN&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerDerivedPlotQuantity</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>ac991c2deaa9968750988207ebf885ea5</anchor>
      <arglist>(const std::string &amp;variable_name, const std::string &amp;variable_type, VisDerivedDataStrategy *derived_writer=(VisDerivedDataStrategy *) NULL, const double scale_factor=1.0, const std::string &amp;variable_centering=&quot;CELL&quot;, const std::string &amp;variable_mix_type=&quot;CLEAN&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevelPlotQuantity</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a073d77fe139d6a5fd6a7b2ff9e5533b4</anchor>
      <arglist>(const std::string &amp;variable_name, const int level_number, const int patch_data_index, const int start_depth_index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNodeCoordinates</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>aa38f8fcfc3489f6bfdde1f05606ea43c</anchor>
      <arglist>(const int patch_data_index, const int start_depth_index=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSingleNodeCoordinate</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a01c0101c10011a41f25bd0bcfb4f5250</anchor>
      <arglist>(const int coordinate_number, const int patch_data_index, const int depth_index=0, const double scale_factor=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerMaterialNames</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>ab22f3e826a4720761ba501250471eea7</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;material_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSparseMaterialNames</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a03c8fc745e3198534869baa78dcb9c19</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;material_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerSpeciesNames</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a240bce76b8b14fdf49fbaa1f92fc0c94</anchor>
      <arglist>(const std::string &amp;material_name, const tbox::Array&lt; std::string &gt; &amp;species_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerVisItExpressions</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a09bdc47db6b21aee735e807741517905</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;expression_keys, const tbox::Array&lt; std::string &gt; &amp;expressions, const tbox::Array&lt; std::string &gt; &amp;expression_types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writePlotData</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>ab34178d123a0e1f1201cb471390345d7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int time_step, double simulation_time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSummaryFilename</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>a303784551016695618fbae5e4b89f5bf</anchor>
      <arglist>(std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisItDataWriter.html</anchorfile>
      <anchor>ae0aea424376e0eb31448b9bfcc97f96a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::appu::VisMaterialsDataStrategy</name>
    <filename>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</filename>
    <member kind="enumeration">
      <name>PACK_RETURN_TYPE</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ae828832a338243edaf88517027ea7c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIT_ALLZERO</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ae828832a338243edaf88517027ea7c81a68a968496a41cea1a7a038c912d23266</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIT_ALLONE</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ae828832a338243edaf88517027ea7c81a8998751fac65758ce15b8bbf0f49e5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VISIT_MIXED</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ae828832a338243edaf88517027ea7c81a6d9ce03a0c338c460cbc5fa66046bef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisMaterialsDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>a0a9baa2b384d9110df6dc836abfd93fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VisMaterialsDataStrategy</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ad06d724f519775689b4d07ca3490a1c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>packMaterialFractionsIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>a5022e62a3f4247665f706ce3fbc6c583</anchor>
      <arglist>(double *buffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;material_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>packMaterialFractionsIntoSparseBuffers</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>ab27b9b1eacbe159492f5071fa3303d41</anchor>
      <arglist>(int *mat_list, std::vector&lt; int &gt; &amp;mix_zones, std::vector&lt; int &gt; &amp;mix_mat, std::vector&lt; double &gt; &amp;vol_fracs, std::vector&lt; int &gt; &amp;next_mat, const hier::Patch &amp;patch, const hier::Box &amp;region) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>packSpeciesFractionsIntoDoubleBuffer</name>
      <anchorfile>classSAMRAI_1_1appu_1_1VisMaterialsDataStrategy.html</anchorfile>
      <anchor>a8d3680574b6764c9f5b8c2bf1b68e4be</anchor>
      <arglist>(double *buffer, const hier::Patch &amp;patch, const hier::Box &amp;region, const std::string &amp;material_name, const std::string &amp;species_name) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::geom</name>
    <filename>namespaceSAMRAI_1_1geom.html</filename>
    <class kind="class">SAMRAI::geom::CartesianCellComplexConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellComplexLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianCellFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellFloatLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianCellFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianEdgeFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianFaceComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianFaceDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianFaceFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianGridGeometry</class>
    <class kind="class">SAMRAI::geom::CartesianNodeComplexLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianNodeDoubleLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianNodeFloatLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianOuterfaceFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianOutersideDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianPatchGeometry</class>
    <class kind="class">SAMRAI::geom::CartesianSideComplexWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianSideDoubleWeightedAverage</class>
    <class kind="class">SAMRAI::geom::CartesianSideFloatConservativeLinearRefine</class>
    <class kind="class">SAMRAI::geom::CartesianSideFloatWeightedAverage</class>
    <class kind="class">SAMRAI::geom::SAMRAITransferOperatorRegistry</class>
    <class kind="class">SAMRAI::geom::SkeletonCoarsen</class>
    <class kind="class">SAMRAI::geom::SkeletonGridGeometry</class>
    <class kind="class">SAMRAI::geom::SkeletonPatchGeometry</class>
    <class kind="class">SAMRAI::geom::SkeletonRefine</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellComplexConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellComplexConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>a84121f3a76c630339e185d6f9074f135</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellComplexConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>a618581e46aaae38076fc116ea3da735d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>a28e70ef37bfe129d343017253e0c95a4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>afa285d0609fdbbcc21661f501409ef6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>aa208be541625b06b686f10e2a6cae17d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>a1577f9aa7f9cd1125520e6aea1913df0</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexConservativeLinearRefine.html</anchorfile>
      <anchor>a2c645b78afb19c5b040cedeaa92164fc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellComplexLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>a483512eff6698f3947509010bc8e96c4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>a975be9f7f6b212cc6cd671414793fc32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>add2ce1ba9d57f71dcf4fce63d5e1fe57</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>a6167f1fe763c8dd7d79f86ed32d5d27b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>a1aa811dc46e069dd1e02508dfbe13a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>ac61464b5b8b8a2797e11d8b4b19b4619</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexLinearRefine.html</anchorfile>
      <anchor>ab1fb291727ef1def73d554fdbee995e6</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>a604258aa009f1912b45e3ddc5170840d</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>a3328fc56896965948883ad7f55106c9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>ace8449b425ffe8d5274a8b50ad13deac</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>a22f4c7288be8d5743bca06d81716fc25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>a620d05a00319b8d5ed133f386cb24dda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellComplexWeightedAverage.html</anchorfile>
      <anchor>a5ab2a5b2a7e30f5e1d081a97b695464e</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a4bce97ab7c8fcc55c23c8821bb0e62f8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a9ff4b8a1fc3b9508ac34d74cc48310a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>ad0d4eda6f04e84a4f77ff9332573b138</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a5a7ad7343c4381229a12fd7698958421</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a078dc5f25871a3acca38ab289089c09f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a7be57530b21d4a3ed3c6597950c1c983</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>aaabc7066604f9e7831b5599b7bf37e86</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellDoubleLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>a4268a8173afdfb1a4807b20711949b0a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>af07e54ec99c3d3680388003df55cbebb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>a6fcade7c39ac8cf22a49c1cfdbc7fc2e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>a8108ad727c08f26c4ca89207366a8f15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>adade39fe04d89ac6c714e421b3529111</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>abc3477957cdf9db73764ffd2c66a34c3</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleLinearRefine.html</anchorfile>
      <anchor>ab62aac400a9ab714a5de57b34e7d1ed2</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>a9d6c166ee0201b8dd1ac3b1760d94628</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>a7974a6a1c829325a1f8be608b620e65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>ae134694fc36c3c48c5931f51519dc740</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>a4332c77e844a5d156aa31a128268e54c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>ac9c1b3320746a227682c0ea18ddbca07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellDoubleWeightedAverage.html</anchorfile>
      <anchor>ae283c58848bff23187c21901c7511944</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a59d6ec2948f40c9416351fefe31bce6e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a12eee8860d0b9ea63ba4c0fb21254658</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a8dd1946b2cde57703850e8e24390942a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>ae0d0dd3bf21fd49fa1307d69b838c87b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>aeff7f88b02621e9521483074fd91b093</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a2ad178581d5a19a36335ddf3b6a8bfcd</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a5fd9972caf65588632c7f78f087c7e08</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellFloatLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>a578cca2f66bb7cc84b412315568afbb9</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>ab0d700b4a209fb316fa511cb6509ef57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>a93d447367699488510cdb86ce640649a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>a9b6bc837c7aa42f3c8664cf6a7d7aff6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>ab0c0da8f256c85a1af13be8a414f6368</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>ac28e3f6a69fb29050ac94fa367a7f208</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatLinearRefine.html</anchorfile>
      <anchor>a4e9872a218544f41cba48efb06007069</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianCellFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianCellFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>a2d6c25b510b09d2be2069a063a9ae7b1</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianCellFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>a9320f8eb1b35d6d4110b48052987d5d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>a922694b05125e2dea7dade9d683171a8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>a51354e1b397fa9fb5428b377cee19e27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>a9486c7ae8627a7a8a3ba4737a61e184f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianCellFloatWeightedAverage.html</anchorfile>
      <anchor>abf7471389e420385c5542e739fab0fec</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>a2e8a6855e9f5d335ad85a2d35dee5058</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>a16874b3e91a70c9e66c972c86b44efdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>ab4ad1f745733a43fd595438057ef36f3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>a1fa8a5bd116ca731de58cab75f912016</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>a81a8a49be406bccec3c1cd10d2e33a86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeComplexWeightedAverage.html</anchorfile>
      <anchor>af232abc3c8417dd911ca852dfde67dec</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a36daf04b41d5c0c04b343e34cd096f41</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a76fd02126bf5bc448e56833431904118</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a45558dc4c8439292652a113ac70aa357</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a764cd2cbdf030c164559a313eea4c519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a52dc942f5647209e02b127a3b9e06202</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a0fa0e7f548a2eaad4fe5cd1bcdbed2da</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>af546e9225970af70f833b600404f074b</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>a35d0fdeb3812d61410166e74d4e8c30b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>aa731f044f2cfd58757f4051dcaaa9b76</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>a51fb88d3631efa3a419112acf06d23ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>a18783d21b9e3982f515665cbb35cda89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeDoubleWeightedAverage.html</anchorfile>
      <anchor>a90e11fe2314adbff6d4ba7d36c769fc5</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a7769cdb30334b16a4e518075f0c74cd5</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>aa5694a9d3bc3ecde6e08ea663a5147da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a129d42c6425fcc8ad250abe208e5d387</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a833eb5c026bebff3525c2837596c43ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a9ecb42540d4cd9f85a0468cc202ec55a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a07680d637f5f045e3c733c9cc1004a0b</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianEdgeFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianEdgeFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>ae4f45840ec76a86bafb06ae68d8e6b7a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianEdgeFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>a3f23141633832738d92f26a1e7f1fedf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>a87d3ab1edf5f6fd6d077c4fb6daf1b62</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>a45f4ab54b67520366827f999fb657fe0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>ae07a9189c01fced89cc03be852b7e631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianEdgeFloatWeightedAverage.html</anchorfile>
      <anchor>a066f2076e3c9a7fe2261464061ab7bd5</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>ab58f19351d8e5fa2c874cb0cd96a9d32</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>a8f5465b30e21d9786eaaefd8ff3a470c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>af81193eff96311bca3b5b435dc00c825</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>a005e571fbe8fb7cfc848e5d3697806af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>a55eb99a146e1bb499bffd2c87f5ce0b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceComplexWeightedAverage.html</anchorfile>
      <anchor>a9b3f619fa8c178596f56595b128472f6</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>ab4a739475ae9bc7cc078630986641ff2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>adeee75c05affcdc2a9b2cc706911589d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>ab3b085fd21c9d192976205de85fdf88c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a5eac4905fcb88d59eab65d7d2bcc79a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>adc21242ec7a10dd32db7970bc4728a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a6efb587548441f3c5b764ed4442d16d8</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a26ee1c63a0dffe1c068600b5c3f6cd84</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a8bf0482dd64027f2bfc4468e1ca0da7f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>ad642209d4d3e3fded95174a85825f43c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a2c558b1d8caadca6f9808b88baeb6764</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a0d44c0941cb1bada745cf30e5ae332b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a4c0e1378e40c74ba078f32353461fe91</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>acf612d302c16fd9910f3e7144bdd1612</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a6d2f582777d182b9cf24c9ad2332b486</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>aada958cd0bbfb50f1af4d2fbd66df2c3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>ac624e2f21d3c0b56e0dba4f31cc313cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a8912d9a93ad98f292f2eaebe49960972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a8c03e8385ee53f7749eac15612d674e6</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianFaceFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianFaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>a3eeb85302e3ee257c6e2d6ac6b3ea446</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianFaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>a3da47019a03fee9cc1fd08dd09b8f188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>ab6a98e8a80e3bc5749a6492031ca4019</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>ab61f8c3634777badb5081004ee948d01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>acd4b14151c7ef5f723b31e133c12518b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianFaceFloatWeightedAverage.html</anchorfile>
      <anchor>ad2c88b3b6162cfa9096684631b97dc0b</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianGridGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</filename>
    <base>SAMRAI::hier::GridGeometry</base>
    <member kind="function">
      <type></type>
      <name>CartesianGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>a0cdbd284f6c0f0ca5e024a2aa892ab95</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CartesianGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>acf53b57987a4e80085c074459e066548</anchor>
      <arglist>(const std::string &amp;object_name, const double *x_lo, const double *x_up, const hier::BoxContainer &amp;domain, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>a74232ef5496e513bd24c6a0742cacdfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeRefinedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>ac44b3bc9b7a4a74be28c66490b1674e4</anchor>
      <arglist>(const std::string &amp;fine_geom_name, const hier::IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeCoarsenedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>aced20b34b0017e3b9b0d1a571b3c0010</anchor>
      <arglist>(const std::string &amp;coarse_geom_name, const hier::IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometryDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>aee268dd0852dccda81c659f09a58d338</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometryData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>a927e1e7cf2dc3309de94fda79ec39f15</anchor>
      <arglist>(const double *x_lo, const double *x_up, const hier::BoxContainer &amp;domain)</arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getDx</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>acffd532fc9bc7b037de4716015d481fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXLower</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>a3ba1cee35db3bf56c33c72663c2254e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXUpper</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>aeb86f374f0d167b9177b4eba0bc44a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>a2b7be3a14abd613b20a062bb6fe43f24</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianGridGeometry.html</anchorfile>
      <anchor>ac8ffe923c2777e515217683f583d3056</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianNodeComplexLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianNodeComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>a97725f29963e6da35ceea454a88ca529</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianNodeComplexLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>aae28f5d2719603cf6815385e225913f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>adcb4a872faa08410650eff28d66757f7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>a46f806f4115113b9cd39d22a134e9593</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>a11b23f0ed49a6067ea0223418ff37173</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>a2ca2c30396e5e5db129259322933328a</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeComplexLinearRefine.html</anchorfile>
      <anchor>a716e3cdfb2b7ede21d6a77ebe2ebc033</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianNodeDoubleLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianNodeDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>ae7188ca54de5a0e155aef9dbdc2715dd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianNodeDoubleLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>af4240e4583d6116e9e34a4d3c5fc2176</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>a4fd501428a0287ba6594b5ec54833680</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>a3efbc3a6c913d3eca29ac0ba4dcf1cd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>a558f63dbaa24225f2ebe70d118a8d0f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>ad2f71e32f58d77e692a179cd5efd6929</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeDoubleLinearRefine.html</anchorfile>
      <anchor>ac4192afbf12a0f9437d1e9a8ca9890e8</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianNodeFloatLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianNodeFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>a6cec28858a47af9f34afcd5fd8eddf50</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianNodeFloatLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>ac88f93e87ed68cb9488cfcef24b081c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>a3bc8349e00baf86eabf9bcb016c29d96</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>ac848dbdeb3f3b83189791fc9b49ef650</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>a3490a7c8dbfdb895d1f20522da849624</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>a1bebca8783bf0891310016cbe3ebe97f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianNodeFloatLinearRefine.html</anchorfile>
      <anchor>afef200d7181cfecd5c9444341dd7d09b</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOuterfaceComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOuterfaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>aa07f68f5654b3610c5474a550ce8e2de</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOuterfaceComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>adaaaecc7105b1e3d0a1f51a74671a633</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>aab40f3bcc8afc8f4f31266845854eb40</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>a355175231df0c4066da0a211ab40040d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>aa1e727818cae2e40f74d452cedb51c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceComplexWeightedAverage.html</anchorfile>
      <anchor>ad139412d1b35ff6a665a504e6e61a6f6</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOuterfaceDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOuterfaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>ae67fbaa161e9beda428f9b8499da5209</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOuterfaceDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a1f84fdaaec419df3d7a1a34b1232d438</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a6848434ea37a191f53d662e3e0e6dd20</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a2867e956065962ee02ca8727a1e2d322</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a0a089eadeb99656507e7127e9e52864b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceDoubleWeightedAverage.html</anchorfile>
      <anchor>a628abb6e7751e1078fa23e7f655c9de5</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOuterfaceFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOuterfaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>a2f9817e6a5e4d477c6dbb24008c97c7f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOuterfaceFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>a8351401c09539cb5c99febf43b583dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>aef7e98f94ffe863e884b8a893c8eb6c0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>a6650f222a6dcc2ca3b6d28a28a323ac5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>ace51387b12db2e32170a7358cd6fdca1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOuterfaceFloatWeightedAverage.html</anchorfile>
      <anchor>acd688cd2e83b3439f9b5cb4db579aff0</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianOutersideDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianOutersideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>af4943727dba3d29ab6d035558f66d86b</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianOutersideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>a69b0a1fe1e9b68a5f5fc6f66ba334ecf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>a7373dcdb30cc2cac69a608493c014e03</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>a68c285b28f16fb65c53549a79f74ad8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>ae868e072201f147bf652bfd3bb243240</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianOutersideDoubleWeightedAverage.html</anchorfile>
      <anchor>a16d71178de968e01e0a117d2110e1e8e</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianPatchGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</filename>
    <base>SAMRAI::hier::PatchGeometry</base>
    <member kind="typedef">
      <type>hier::PatchGeometry::TwoDimBool</type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>a48cd3d580c8ba0283c4f7c6b45b96d1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CartesianPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>aeaa3653a19a8ebed1ecffadbce248577</anchor>
      <arglist>(const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry, const double *dx, const double *x_lo, const double *x_hi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CartesianPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>a434686f0d7071afb71a40965ed9c16f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getDx</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>ac247fcd1c48d0ceec79d48578d4af7bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXLower</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>afb5fed10bc6199aed2dfc4a82bfe5e5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getXUpper</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>a6a12875645fae082421635d575490e76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianPatchGeometry.html</anchorfile>
      <anchor>ac76f67b5dc9533f7f20157755040a368</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideComplexWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>a36c84715096b9712f90298d66340d6ee</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideComplexWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>a8ec7d6a3f5a09197e4b1ea6fb15cf726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>a58d6e89f4f8a9b4c174f76251f2ab08f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>ad201cf309c6ba81b119144cdfb304f72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>a1fcc0e2439ba2fa9536f46f721bd62d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideComplexWeightedAverage.html</anchorfile>
      <anchor>a6e75d4e84c74ee3f585f5416e0957f93</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideDoubleConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a5c5d325d60f5c80434bbc09e20ce5179</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideDoubleConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a47b40b2256892ee5f3d7fbf316b6f6b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a27e0d8fabe479421e6036c694e85c025</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>aa038f2c72b3d42ba6b69d287c36fcb9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a9b580f6e3644fd7547a489a93b0f8ce3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleConservativeLinearRefine.html</anchorfile>
      <anchor>a29ffad32d7388aa4b2e0b0d17e05ab92</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideDoubleWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>a565c00f4b5b189ae1105f23397749a71</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideDoubleWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>aa706b0ecf989ddbc5fcf778c3ae50976</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>ad9b29474be3c03fe53c286cb21898259</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>ab3cb3b093eb39834f112e18445b5e767</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>adcd2ebba3de2126f5fae71a6881b2650</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideDoubleWeightedAverage.html</anchorfile>
      <anchor>ac3cc89627368e47afe2883f2b5068c26</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideFloatConservativeLinearRefine</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>ab1fdd7fbc8ecfd3bfcbe4657ddef17a2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideFloatConservativeLinearRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a4a91b9d135ebdd6e0203ba3b8656c497</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a81737e66e297bc3c2d096883545ec6c2</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a976c6333740150dfb44851a811966be7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>a4661271b81a27e57e612aa627bed849c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatConservativeLinearRefine.html</anchorfile>
      <anchor>adab63cd265f624b2811360dbed40e3b7</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::CartesianSideFloatWeightedAverage</name>
    <filename>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>CartesianSideFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>aec27b158c43cc21672db78e245361202</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianSideFloatWeightedAverage</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>a76f8bee0c6d47cb676ae105c3cacb2a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>a4062e70f39730cd1d9ff41612b696fed</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>a3db8696e57fd6f25eb8105a29ed31240</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>aac8f00658dafc017a9c77bfd03cc8687</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1CartesianSideFloatWeightedAverage.html</anchorfile>
      <anchor>a9e081e520065f208c68ab332b043a4c2</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SAMRAITransferOperatorRegistry</name>
    <filename>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</filename>
    <base>SAMRAI::hier::TransferOperatorRegistry</base>
    <member kind="function">
      <type></type>
      <name>SAMRAITransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>a9d6b117ac103fac8180e56026e8ea4c0</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SAMRAITransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>a84968b26d57addf4336fded5afc2ca10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tbox::Pointer&lt; hier::CoarsenOperator &gt;</type>
      <name>buildCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>a7dcae0a8e0b29f24830151680502607f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tbox::Pointer&lt; hier::RefineOperator &gt;</type>
      <name>buildRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>a0cb1be6a07888dec2f6853e898926318</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tbox::Pointer&lt; hier::TimeInterpolateOperator &gt;</type>
      <name>buildTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SAMRAITransferOperatorRegistry.html</anchorfile>
      <anchor>a438726c36521de1453ad782757c77212</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonCoarsen</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>SkeletonCoarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>af738d1ad08f89aed36a10c2d61d0638f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonCoarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>a9354ed7c315abbd3789eb0d430ff621c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>abb969826a5f47736f925898053f49111</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>a516ea46d7387e78564f0bb9eab034caf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>a62be06104436f67b705979a03be39a39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonCoarsen.html</anchorfile>
      <anchor>a7948122bdf7c3b7fcdf2cc3452cb4559</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonGridGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</filename>
    <base>SAMRAI::hier::GridGeometry</base>
    <member kind="function">
      <type></type>
      <name>SkeletonGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>ae827902507cb0f1a55aa24d8c050af62</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SkeletonGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>a0e817fe4bd4041c176bdb3e7cd48f1a4</anchor>
      <arglist>(const std::string &amp;object_name, const hier::BoxContainer &amp;level_domain, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>ae545746844be2626b045e9634a4f92a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeRefinedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>a7d29833bb41fdfcb16e51ee0128f634f</anchor>
      <arglist>(const std::string &amp;fine_geom_name, const hier::IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::GridGeometry &gt;</type>
      <name>makeCoarsenedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>add6f60301207ba3ae0bdc6c0244f21bb</anchor>
      <arglist>(const std::string &amp;coarse_geom_name, const hier::IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGeometryDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>a34df8a30ce7b2bc952f526a2cb5ccae0</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>a1116d177228b74fe014ed24199ec1e45</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonGridGeometry.html</anchorfile>
      <anchor>a2392b3f243787045b802e36051b2d731</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonPatchGeometry</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</filename>
    <base>SAMRAI::hier::PatchGeometry</base>
    <member kind="typedef">
      <type>hier::PatchGeometry::TwoDimBool</type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>a2003240bcababdc763ad6dcf5c680152</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SkeletonPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>ada8973c2d832ed30f9288976ba039191</anchor>
      <arglist>(const hier::IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SkeletonPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>abebb4af275c74c9237c148cec207b542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonPatchGeometry.html</anchorfile>
      <anchor>a6415ec8fe59bbeb17ad4345d51af9527</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::geom::SkeletonRefine</name>
    <filename>classSAMRAI_1_1geom_1_1SkeletonRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SkeletonRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>ae04e672df8c07141356bcaf24710c687</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SkeletonRefine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>a1b3c1aea0c7cde0cd29b51bb6ef5a3d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>af597f0f42b0e4bedf201b727d7d1098e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>a79582ce8b0fa5537015c773353d1de00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>a65e8886e18fc8d898454143504765a59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1geom_1_1SkeletonRefine.html</anchorfile>
      <anchor>a74677ac0d608aa3d65d6cad917652110</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::hier</name>
    <filename>namespaceSAMRAI_1_1hier.html</filename>
    <class kind="class">SAMRAI::hier::BaseConnectorAlgorithm</class>
    <class kind="class">SAMRAI::hier::BlockId</class>
    <class kind="class">SAMRAI::hier::BoundaryBox</class>
    <class kind="class">SAMRAI::hier::BoundaryBoxUtils</class>
    <class kind="class">SAMRAI::hier::BoundaryLookupTable</class>
    <class kind="class">SAMRAI::hier::Box</class>
    <class kind="class">SAMRAI::hier::BoxIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainer</class>
    <class kind="class">SAMRAI::hier::BoxContainerConstIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerSingleBlockIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerSingleOwnerIterator</class>
    <class kind="class">SAMRAI::hier::BoxContainerUtils</class>
    <class kind="class">SAMRAI::hier::BoxGeometry</class>
    <class kind="class">SAMRAI::hier::BoxId</class>
    <class kind="class">SAMRAI::hier::BoxIOUtility</class>
    <class kind="class">SAMRAI::hier::BoxLevel</class>
    <class kind="class">SAMRAI::hier::BoxLevelConnectorUtils</class>
    <class kind="class">SAMRAI::hier::BoxLevelHandle</class>
    <class kind="class">SAMRAI::hier::BoxLevelStatistics</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection</class>
    <class kind="class">SAMRAI::hier::BoxOverlap</class>
    <class kind="class">SAMRAI::hier::BoxTree</class>
    <class kind="struct">SAMRAI::hier::BoxUtilities</class>
    <class kind="class">SAMRAI::hier::CoarseFineBoundary</class>
    <class kind="class">SAMRAI::hier::CoarsenOperator</class>
    <class kind="class">SAMRAI::hier::ComponentSelector</class>
    <class kind="class">SAMRAI::hier::Connector</class>
    <class kind="class">SAMRAI::hier::ConnectorStatistics</class>
    <class kind="struct">SAMRAI::hier::PatchNumber</class>
    <class kind="struct">SAMRAI::hier::LevelNumber</class>
    <class kind="struct">SAMRAI::hier::PatchDataId</class>
    <class kind="class">SAMRAI::hier::GlobalId</class>
    <class kind="class">SAMRAI::hier::GridGeometry</class>
    <class kind="class">SAMRAI::hier::Index</class>
    <class kind="class">SAMRAI::hier::IntVector</class>
    <class kind="class">SAMRAI::hier::LocalId</class>
    <class kind="class">SAMRAI::hier::MappingConnectorAlgorithm</class>
    <class kind="class">SAMRAI::hier::MultiblockBoxTree</class>
    <class kind="class">SAMRAI::hier::MultiblockDataTranslator</class>
    <class kind="class">SAMRAI::hier::NeighborhoodSet</class>
    <class kind="class">SAMRAI::hier::OverlapConnectorAlgorithm</class>
    <class kind="class">SAMRAI::hier::Patch</class>
    <class kind="class">SAMRAI::hier::PatchBoundaries</class>
    <class kind="class">SAMRAI::hier::PatchData</class>
    <class kind="class">SAMRAI::hier::PatchDataFactory</class>
    <class kind="class">SAMRAI::hier::PatchDescriptor</class>
    <class kind="class">SAMRAI::hier::PatchFactory</class>
    <class kind="class">SAMRAI::hier::PatchGeometry</class>
    <class kind="class">SAMRAI::hier::PatchHierarchy</class>
    <class kind="class">SAMRAI::hier::PatchLevel</class>
    <class kind="class">SAMRAI::hier::PatchLevelFactory</class>
    <class kind="class">SAMRAI::hier::PeriodicId</class>
    <class kind="class">SAMRAI::hier::PeriodicShiftCatalog</class>
    <class kind="class">SAMRAI::hier::PersistentOverlapConnectors</class>
    <class kind="class">SAMRAI::hier::ProcessorMapping</class>
    <class kind="class">SAMRAI::hier::RealBoxConstIterator</class>
    <class kind="class">SAMRAI::hier::RefineOperator</class>
    <class kind="class">SAMRAI::hier::TimeInterpolateOperator</class>
    <class kind="class">SAMRAI::hier::TransferOperatorRegistry</class>
    <class kind="class">SAMRAI::hier::Transformation</class>
    <class kind="class">SAMRAI::hier::Variable</class>
    <class kind="class">SAMRAI::hier::VariableContext</class>
    <class kind="class">SAMRAI::hier::VariableDatabase</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a34f9afb834e68bf69a8c3028b15c7829</anchor>
      <arglist>(std::ostream &amp;co, const BlockId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a96908bbe9494aa74292d13972ee0d4f9</anchor>
      <arglist>(std::istream &amp;s, Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a94bbae049793f3f0097e00d74888dd83</anchor>
      <arglist>(std::ostream &amp;s, const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer::operator tbox::Array&lt; tbox::DatabaseBox &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ae2fa3ea63715279801abaaa4161e138d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a86317125df6c2eb65553d25794c3b9d4</anchor>
      <arglist>(std::ostream &amp;s, const BoxContainer::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a7c43cd076078a23374298b48a3f5a520</anchor>
      <arglist>(std::ostream &amp;co, const BoxId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>afb52c7cb40bb763aa515f75b49db60dc</anchor>
      <arglist>(std::ostream &amp;s, const BoxLevel::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ac751e548574bfef193d039e55d29d7b8</anchor>
      <arglist>(std::ostream &amp;os, const Connector::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>aa00c2b7e87fbeb350b37dc5ff7421008</anchor>
      <arglist>(std::ostream &amp;co, const GlobalId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a161b01d3d8a05603f40678e2d95e25bb</anchor>
      <arglist>(std::istream &amp;s, IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>aa309443486df112fdfac155615a9c180</anchor>
      <arglist>(std::ostream &amp;s, const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a3da43f9884e66e17a08572f15e3d235c</anchor>
      <arglist>(std::ostream &amp;co, const LocalId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>ab7b28faca76984d238f84e563712cac5</anchor>
      <arglist>(std::ostream &amp;s, const NeighborhoodSet::Outputter &amp;format)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a8bb707f5fc3860628bc35e33403fba1e</anchor>
      <arglist>(std::ostream &amp;s, const Patch &amp;patch)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>aa138e9f0a250b1688eb3f7ca667993c5</anchor>
      <arglist>(std::ostream &amp;co, const PeriodicId &amp;r)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_level_constructor</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>adbe3e1d4a68e6bdf5a515e4213a48962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_setup</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>acdcf6c8cb970fa9fd67f2898c143313d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_phys_domain</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a885c3c60c4efe04e58e11c66c27efbfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_touch_boundaries</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a2954191b5ba2f6cb884469b8b4758698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_set_geometry</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>afba4cabc7a13875dcf7cccf8fca23f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_set_patch_touches</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a216f3930bb704a984bc3fb53646ea4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static tbox::Pointer&lt; tbox::Timer &gt;</type>
      <name>t_constructor_compute_shifts</name>
      <anchorfile>namespaceSAMRAI_1_1hier.html</anchorfile>
      <anchor>a229bd0d6f8d09fada0133edfaf1c8bea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BaseConnectorAlgorithm</name>
    <filename>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>BaseConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a2004101cfceaf46f7b8f75a49ff610e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~BaseConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a54a34c5b4e0930335911f7d37cc4d7db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupCommunication</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a5284f82121b81bd4b42b816d30d6db36</anchor>
      <arglist>(tbox::AsyncCommPeer&lt; int &gt; *&amp;all_comms, tbox::AsyncCommStage &amp;comm_stage, tbox::AsyncCommStage::MemberVec &amp;completed, const tbox::SAMRAI_MPI &amp;mpi, const std::set&lt; int &gt; &amp;incoming_ranks, const std::set&lt; int &gt; &amp;outgoing_ranks, tbox::Pointer&lt; tbox::Timer &gt; &amp;mpi_wait_timer, int &amp;operation_mpi_tag) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendDiscoveryToOneProcess</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a5b08dcbb1be131c3158a8830a25947eb</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;send_mesg, const int idx_offset_to_ref, BoxContainer &amp;referenced_new_head_nabrs, BoxContainer &amp;referenced_new_base_nabrs, tbox::AsyncCommPeer&lt; int &gt; &amp;outgoing_comm, const tbox::Dimension &amp;dim) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>receiveAndUnpack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a1f2391a9080e2119e39fb64ff5453af2</anchor>
      <arglist>(Connector &amp;new_base_to_new_head, Connector *new_head_to_new_base, std::set&lt; int &gt; &amp;incoming_ranks, tbox::AsyncCommPeer&lt; int &gt; all_comms[], tbox::AsyncCommStage &amp;comm_stage, tbox::AsyncCommStage::MemberVec &amp;completed, tbox::Pointer&lt; tbox::Timer &gt; &amp;receive_and_unpack_timer) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>unpackDiscoveryMessage</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a81763c04e7e885f56cbc34c7a7d2f73c</anchor>
      <arglist>(const tbox::AsyncCommPeer&lt; int &gt; *incoming_comm, Connector &amp;west_to_east, Connector *east_to_west) const </arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static char</type>
      <name>s_print_steps</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BaseConnectorAlgorithm.html</anchorfile>
      <anchor>a696c52b18f1d5b6e850490733919232f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BlockId</name>
    <filename>classSAMRAI_1_1hier_1_1BlockId.html</filename>
    <member kind="function">
      <type></type>
      <name>BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>ad8f9d662426380c8fe529338fe617ff7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a754dbc224db872e668e4e0e0f963db61</anchor>
      <arglist>(const BlockId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a074df46efe45313378471639961ede84</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a8b6af30eed6477ee5a26930baee3e6e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BlockId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a82c999316bc2441fd8ed6f34437baecb</anchor>
      <arglist>(const BlockId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a17020482adff8f8f6d45cebd452d6f85</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a9cff24864a0c6471c4cec33f99cf6922</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getBlockValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>ac83d1e5dbac78328cba3afedd0d465e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>ae817230ffb46a3a062bf848c117354b8</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a78f483ca0df6829505188f72e8a095f5</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a37ca7f5ca33a3c827a5a22b3c8b25d93</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a389be604b78228e02f19a516a64d18de</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a27e70c76bc4af3bc9657c47fa3bbd1a0</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>acd9793e01eb2ebe9742e1be8e2f4e3a2</anchor>
      <arglist>(const BlockId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a3fb14e50429e46063facce3f34e51903</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>ae6adba054d63cf1569dc6b6c5badb6e7</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a1456629e341f078264f36b6f57641719</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a38559870f9edc745d9ded4b201fe9a9e</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a15f9787c750fa278664b6908215d318d</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>ac6961e2d5a499a993231624a338a91e9</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BlockId &amp;</type>
      <name>zero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a128c3e037cb92cde5baab31ec497b1dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BlockId &amp;</type>
      <name>invalidId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>a7b0d78dd611dd301e486a1c45d811efa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BlockId.html</anchorfile>
      <anchor>ac30658f58dc96f2434adc24844a05cce</anchor>
      <arglist>(std::ostream &amp;co, const BlockId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoundaryBox</name>
    <filename>classSAMRAI_1_1hier_1_1BoundaryBox.html</filename>
    <member kind="enumeration">
      <name>BoundaryOrientation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a8ca81b15434ad71ad358a4f845a8e7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOWER</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a8ca81b15434ad71ad358a4f845a8e7fca421ed3379231b92086cfa3aedf35ccf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIDDLE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a8ca81b15434ad71ad358a4f845a8e7fca355df711e0b033c35915deb8684b9a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a8ca81b15434ad71ad358a4f845a8e7fca13842a417181bbd3f462474ffc242de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>ab346e99c3ab6620dddf5605d9ff7fd2e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>aa85308ea8667843d54a1cf8bb8d9c3fe</anchor>
      <arglist>(const Box &amp;box, const int bdry_type, const int location_index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>af4a2285050be85e4f7d5dee7f59ddd03</anchor>
      <arglist>(const BoundaryBox &amp;boundary_box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a1cd30efc60e89bfec6c2062469afbf27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>aaf2daa6839b8c2865ed8764e31c5ced5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBoundaryType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>af37156a434091f119f773f341664c9c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocationIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>af8c11e12b34c9ee0350bb27af4c74de8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIsMultiblockSingularity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>adccda02f2d5ac82b402e8f6ec1083618</anchor>
      <arglist>(bool is_mblk_singularity)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getIsMultiblockSingularity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a2f5f6b275cabd02b02ff2da1f84622b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoundaryBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>ab247a786d12a9c485c6d14f283f66e0a</anchor>
      <arglist>(const BoundaryBox &amp;boundary_box)</arglist>
    </member>
    <member kind="function">
      <type>BoundaryOrientation</type>
      <name>getBoundaryOrientation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>acc7294e6284bfcf25d093e4e16ee541b</anchor>
      <arglist>(const int dir) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBox.html</anchorfile>
      <anchor>a8a42172b84eb60023f399313911bd42e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoundaryBoxUtils</name>
    <filename>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>BoundaryBoxUtils</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>a417e58daed984c23b8947c378919a97a</anchor>
      <arglist>(const BoundaryBox &amp;bbox)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoundaryBoxUtils</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>afcaab149011db8a38277f17205815594</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>adb09860c1e09073e8a1a0ccae7f05f41</anchor>
      <arglist>(const BoundaryBox &amp;bbox)</arglist>
    </member>
    <member kind="function">
      <type>const BoundaryBox &amp;</type>
      <name>getBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>a3dae473761ad38fc83f224ddfca43149</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getOutwardShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>ab268c1cc7d84b52a25974dc28f602a3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stretchBoxToGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>a8b3f2ae50b093f610087ee717992b8bd</anchor>
      <arglist>(Box &amp;box, const hier::IntVector &amp;ghost_cell_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extendBoxOutward</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>a89108c4b1320175fda9f6d7b55378278</anchor>
      <arglist>(Box &amp;box, const IntVector &amp;extension) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>normalDir</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>a5d7f8b4a03163119335c82ee70464095</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::BoundaryBox</type>
      <name>trimBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>afa5185328aa3823de3989369f40a0c86</anchor>
      <arglist>(const hier::Box &amp;limit_box) const </arglist>
    </member>
    <member kind="function">
      <type>hier::Box</type>
      <name>getSurfaceBoxFromBoundaryBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryBoxUtils.html</anchorfile>
      <anchor>af52b26c9bb7a5ea93ac5d97a311e9590</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoundaryLookupTable</name>
    <filename>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</filename>
    <member kind="function">
      <type>const tbox::Array&lt; int &gt; &amp;</type>
      <name>getDirections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>a40550a68fa0ea9059a7f732d586363b6</anchor>
      <arglist>(int loc, int codim) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; int &gt; &amp;</type>
      <name>getMaxLocationIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>a1c3b7c2b5dde205b952c13aae1dcfe44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>aded69d1e5c224de50e9e304c96acbcb1</anchor>
      <arglist>(int loc, int codim, int dim_index) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUpper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>afd251759927173d9f633012f62e32c82</anchor>
      <arglist>(int loc, int codim, int index) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; IntVector &gt; &amp;</type>
      <name>getBoundaryDirections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>a21b6361e6f4908c2cec3727b16429ba8</anchor>
      <arglist>(int codim) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static BoundaryLookupTable *</type>
      <name>getLookupTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>ae9d734cb4627d3027fc6d6bd1d642176</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>BoundaryLookupTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>a576425535cebc3d4254e084a8c1e5f2a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~BoundaryLookupTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoundaryLookupTable.html</anchorfile>
      <anchor>a6213cd740272820ea65ae818ed197fe1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Box</name>
    <filename>classSAMRAI_1_1hier_1_1Box.html</filename>
    <class kind="struct">SAMRAI::hier::Box::box_equality</class>
    <class kind="struct">SAMRAI::hier::Box::id_equal</class>
    <class kind="struct">SAMRAI::hier::Box::id_less</class>
    <member kind="typedef">
      <type>BoxIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ab22c6309561dbee8f945792070ff23a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a0a4704d93432d9e7bc3a966068ef5bda</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3af995f01efc3f40dca1f8ad8aba6c73</anchor>
      <arglist>(const Index &amp;lower, const Index &amp;upper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a13fccdd1115a12b72ba51919aabb41e9</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aaa4e477bedd7a84de5d3e5e0c3319797</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aed5cf20ddfb290feb304db2175045d5d</anchor>
      <arglist>(const hier::Box &amp;box, const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ae26664bbcbca045fb852b1a2f04f7b50</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3077c4dfdc4b461406af6cb18be3e64a</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const GlobalId &amp;id, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a05998492808da35f749945e36ee20953</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const BoxId &amp;mapped_box_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aa51838667e09344760b27f1d7d7aece7</anchor>
      <arglist>(const Box &amp;other, const PeriodicId &amp;periodic_id, const IntVector &amp;refinement_ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a05b4e2f3d6e7be5b59dd35d186a46e46</anchor>
      <arglist>(const hier::Box &amp;box, const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a92a97d6a5ddca9430181e0f051c75d4a</anchor>
      <arglist>(const Box &amp;other, const PeriodicId &amp;periodic_id, const IntVector &amp;refinement_ratio)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a52a3b3ab8f29ca870e9186f8ee59e7c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxId &amp;</type>
      <name>getId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a5249444b7003211afd77994fcce786a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxId &amp;</type>
      <name>getId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a6e64b782a19a8dc136e184a9b0f32064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>abf27470ae0964896624d885c45e2e8d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a363b5ddfa9f2b8502a18893eac491915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GlobalId &amp;</type>
      <name>getGlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad070fc2ed7305406791a45de7f96ad8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a57c0f8f2d612c1dd1f616a6615f4552b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getPeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a04c4c7dd0fd3e50a28bbeb741c9ead74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeriodicImage</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3e9a9f285d6f46c93841994249cc1065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIdEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a85916b6b17098f52b5f9d424e664af4b</anchor>
      <arglist>(const Box &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a4cc22dd4c748351100bc9ae6c8c1fc1c</anchor>
      <arglist>(int *buffer) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a7e2df5578f98854e2506b036d0887828</anchor>
      <arglist>(const int *buffer)</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a0ab6971d9c43093985b21379e181d651</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a03069bd0bf699cb4178e523546b87487</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a731d591970ee30556e0ff7db2eec7b50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ae391a5b6d80738d677bdb479512e1c9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ac5e6813170de2435fad1816a995d17d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>af764caadc60d60ae009c6aad2340ae00</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a7acbe2cdc1c8abcf54d225fab83ddf33</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>abb032ee9a9d8e18cb1490bdd4742ee80</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aadacecaf324f3314affb0749f3d678c8</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a626a1a0bd06f0a3b60186b32398917ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ac7bd98631acf5ea9081c700b2a9911c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>afa8734190387ed3d0e44089e38ce0268</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a49cfdb8b5a613950ec47a01aefdc7696</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>numberCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>acc2ab7c9167fe78f56a49360770e9566</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3f139de56f9666e53618421666b6d05c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>longestDimension</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a10bb2c23006f596ee33c3049723279d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>offset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a905dedfca76fa85ff29e792cf2e69155</anchor>
      <arglist>(const Index &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a7abf52ec0495a21b9d9a6e3b90287ffd</anchor>
      <arglist>(const int offset) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3ffcd0b9db767744aab9fa471bdf4446</anchor>
      <arglist>(const Index &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a10797996b24b1fb046e38fddff0e7ce2</anchor>
      <arglist>(const Box &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSpatiallyEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a93ab8f29b23adad77e0456b0993fd116</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a4ec1782f804536f8163f738d5d87aac7</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aeed27bba4394281417d33ea435e78315</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersect</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a222f3a76edfc5ca131f327c62acec02a</anchor>
      <arglist>(const Box &amp;other, Box &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersects</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a1077e735e2c957307cad12e92a1c2b30</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aac116d8fdb8195031e69ddf914a0de83</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad4365e529a6da09977e05cf136556365</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coalesceWith</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a0e02239ef9501b9bc47453d754aca9d7</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3861b80a41cad197d4cba06807b39d5d</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad95e08a4d31cb52b61a9c65209bc8e78</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growLower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a690f84696497201b1995e5314dcc90b9</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growLower</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a88b22b3640274635a80efcba1db77618</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growUpper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ac4bc44b9da82e99e35c93771b94a9eb1</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growUpper</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ae113066212a7beca589bddf79d0034e1</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lengthen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a58331ecaa0aa6d9d249495e10e38face</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shorten</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad6f1025d2ea3ef08f3cf5b9b44ee1be1</anchor>
      <arglist>(const int direction, const int ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a9462acee05194306a5e1d9d486124ea4</anchor>
      <arglist>(const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>aa821b62e29183e2c56f694c5a08cfec8</anchor>
      <arglist>(const int direction, const int offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a2571400f751941031fc74c243a111dc4</anchor>
      <arglist>(const Transformation::RotationIdentifier rotation_ident)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad7efeb628a8a2fe7ba30e99762ec644a</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>afc41e58aecdd1648fe37808940712d1a</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a4798e67c677fc8c107b5bb916f0bfae3</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>Box_from_DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a567994cfbafe3154afae69bb05b77083</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_Box_from_DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a8e449905938902db329b7c6a82b1dbc3</anchor>
      <arglist>(const tbox::DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>tbox::DatabaseBox</type>
      <name>DatabaseBox_from_Box</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a5eaa7e17d9e7fcc100ece85f8491c7e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tbox::DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>af7804df83c335e84e647ec3fefd046ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tbox::DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a0f0d8c114d6d6c46fc344b96755198af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ae275e74f537f042a54d06003b14b225b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a57fc09fdf5e07a83fb643874d9800ad6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ae1f1ef30c60b0e35605c58b67773caf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>commBufferSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>af85a53b396cd121d6ee630f95ec27cf9</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a2529633083be669d49a9a9b3cd2380a8</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ace947f9084332423621766ff622d4604</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a1fe7f1aeb79df0962f34750c05088576</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Box</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a8c7187b8b903a04bd11a51390a162b4f</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Box &amp;</type>
      <name>getEmptyBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a29e0191647123f28c5d88dda896e1d2a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Box &amp;</type>
      <name>getUniverse</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>ad890a5042d6ad234d4994ed9a78d65c2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a2a4fdfcdad6880a51100ee879f77a0b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; Box &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a344e7e7a11090c24fc69c30a2b6b7f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a3d3741ed318125216d5f721192b48682</anchor>
      <arglist>(std::istream &amp;s, Box &amp;box)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Box.html</anchorfile>
      <anchor>a38123b59287b95438936de8c3a30ae32</anchor>
      <arglist>(std::ostream &amp;s, const Box &amp;box)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::Box::box_equality</name>
    <filename>structSAMRAI_1_1hier_1_1Box_1_1box__equality.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1box__equality.html</anchorfile>
      <anchor>a10c6aa80f35efdd0d337e6583200e864</anchor>
      <arglist>(const Box &amp;b1, const Box &amp;b2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::Box::id_equal</name>
    <filename>structSAMRAI_1_1hier_1_1Box_1_1id__equal.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__equal.html</anchorfile>
      <anchor>ab671a86db2b7ab09407b24d55a04a960</anchor>
      <arglist>(const Box &amp;b1, const Box &amp;b2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__equal.html</anchorfile>
      <anchor>a026238f4b4cad8d5cf7afbbfbf5c76ad</anchor>
      <arglist>(const Box *b1, const Box *b2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::Box::id_less</name>
    <filename>structSAMRAI_1_1hier_1_1Box_1_1id__less.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__less.html</anchorfile>
      <anchor>aee7d47591d9849429323e5530423482a</anchor>
      <arglist>(const Box &amp;b1, const Box &amp;b2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structSAMRAI_1_1hier_1_1Box_1_1id__less.html</anchorfile>
      <anchor>a8cb8da27d5a6f106c8d4da1c801adc9f</anchor>
      <arglist>(const Box *b1, const Box *b2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a0c53594c0ae53160b108f9557b82e9a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a0ed7f992bba152af50c47e3e28ef8184</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>aae8cf93038e33ffcd1b3bc8cd646008b</anchor>
      <arglist>(const BoxIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>BoxIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a060fbb4dddde172cc004548fff4d2365</anchor>
      <arglist>(const BoxIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>ae46ce5006ed3632770591f816e59cec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a0e69e9b8be2a4985f20f0096e4767dd3</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>ae90ece1f6b7d6a2953b103e977ce84a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Index &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>af77b1a8bc87aff887f66ff38ea655bba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>aa37c97e3238a7cafba37d9b67e6f5688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>af79734f9542de3c4d136f8dc88b9cc8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a32cf8695ce71150f4296e6ca82810b29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>ad00ecaca0af8e64eba20a96327461c2e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a159a42b713bfc44133d44567ab96c676</anchor>
      <arglist>(const BoxIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIterator.html</anchorfile>
      <anchor>a8cb2837250de6b755b130eadb445a70a</anchor>
      <arglist>(const BoxIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainer</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainer.html</filename>
    <class kind="class">SAMRAI::hier::BoxContainer::Outputter</class>
    <member kind="typedef">
      <type>BoxContainerIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aa08d258e62acc77ccdfbf28877ebd1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxContainerConstIterator</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a722c7bf68a961eb41417845c41468a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a55740878154039ae2e4bc7f8c7d2ebaf</anchor>
      <arglist>(const BoxContainer &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a8071008081edf421e67e79153cc3fab1</anchor>
      <arglist>(const BoxContainer &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a0ef631799c2f94e90f3c974dafaf3dcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a1a06d1985fb8765d8134eb6319540dd0</anchor>
      <arglist>(const bool ordered)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a79576d58b6721bb5608ce5fb80e05be3</anchor>
      <arglist>(ConstIterator first, ConstIterator last, const bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a5ccb4d4a3557246a3f8ff7c3dbfb0fd8</anchor>
      <arglist>(const Box &amp;box, const bool ordered=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ac72390f853581a48a36a0e405bb8bada</anchor>
      <arglist>(const BoxContainer &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a29fc338ed644a6253c87a55215a7d953</anchor>
      <arglist>(const tbox::Array&lt; tbox::DatabaseBox &gt; &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>afe2288d97c15f402d9b0f2d999de9c47</anchor>
      <arglist>(const BoxContainer &amp;other, const BlockId &amp;block_id)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aff2f982d2652d67aeb3ff8100dfdc163</anchor>
      <arglist>(const BoxContainer &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a92c16d34623368d0a35579e1decedd7e</anchor>
      <arglist>(const tbox::Array&lt; tbox::DatabaseBox &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>afe7f90a31e55932261c512174b8f4f56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a9af823ed4a47030060b6affe2ef951c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a0a0142e30391cb2e6cb7e5001b589786</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a8c77e19f0391554de5c8e2b869bc360c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a5446a48bda8e1696b1251884eff8be68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>af90ea8a6d519ec71ed0d2202e03c39ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ac6109068c8a8bc8c064c532231102078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>front</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a64fdac83c8ef15f9da6ceac0c2c765d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>back</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ae5343986a64f8aa966a8dc3bcf4ad862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aa9239a7ceafa78cb1cd7638f472dd635</anchor>
      <arglist>(Iterator iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ac244a721c94f971f1cc07162b0a948ec</anchor>
      <arglist>(Iterator first, Iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ae04b7ab277542a61fef750743b904e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aad3ac78eeb004093bb65e51694d82cbf</anchor>
      <arglist>(BoxContainer &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a8f32186ba3fc0bb9df9f73ed746ebc92</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>grow</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a4e0ebf36f1800ef69be70eddfeb9e638</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a28ac3b63bd66820c89449634de6e69c1</anchor>
      <arglist>(const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aef570e52b1dedc50e0e2f607f02ef113</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a9906f066cab6279e709490b50245313e</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalSizeOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a550d0e8debdb1f2fbf998210fbe5ce8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>contains</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ab302f3413aca7d08ae39eb765e0f91d2</anchor>
      <arglist>(const Index &amp;idx, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>getBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a6440b7e06427fd365eb05604e7dc99f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>getBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a300c7b4246e444e698f719d8df4b61c6</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>boxesIntersect</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a14358caff71c9fb7dd8d8b3e3e193ea1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>order</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a8a554081bd049c99de1e0d6ad53d1cba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unorder</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ad3fc42e7710adae0c5d1d5a1c0a1698d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isOrdered</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a50a5d7fc3a589acaa7489e57769aa172</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushFront</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a41201ececa1799966f0c97ea5cfe97d8</anchor>
      <arglist>(const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushBack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aa0ca5f6a28e8f2536835b724026d3fae</anchor>
      <arglist>(const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertBefore</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aacf5e3ea99dfa56d73a9e168a1511b25</anchor>
      <arglist>(Iterator iter, const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertAfter</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ac73e9fe6b7f3e2b35893ca47b233bac7</anchor>
      <arglist>(Iterator iter, const Box &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spliceFront</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ae1efc482cabed7530328e4472248922a</anchor>
      <arglist>(BoxContainer &amp;boxes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>spliceBack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a95ca3779e3792f43eafdde5d8029e705</anchor>
      <arglist>(BoxContainer &amp;boxes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popFront</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a544df630b0c06deb476dbcfd56552673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popBack</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>afc13ffcdadfe15effba5bb77da3659fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>simplify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>acf2587b68a7d1a7d2a2134d9f87c0fca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coalesce</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a4f65643b3d30a7bc24dbac9a22abb5c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rotate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a610b4fa87a46fb7225d10a76014d4c86</anchor>
      <arglist>(const Transformation::RotationIdentifier rotation_ident)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ab7efb9cecef0461f129c18f41fa06402</anchor>
      <arglist>(const Box &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a140cd0612e724e550fecb567f38c760b</anchor>
      <arglist>(const BoxContainer &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>adc34f024a5228dff2cbd4f2f61ef1e26</anchor>
      <arglist>(const BoxTree &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a9c70a27eeb231de373224b8ec533e34d</anchor>
      <arglist>(const IntVector &amp;refinement_ratio, const MultiblockBoxTree &amp;takeaway, const bool include_singularity_block_neighbors=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeIntersections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ad98c16c6d4f4d7a3d748dcc08fd3a010</anchor>
      <arglist>(const Box &amp;box, const Box &amp;takeaway)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>aafc53135623a761a92fc7053dd482810</anchor>
      <arglist>(const Box &amp;keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a2f7078f8f3e4024318d535717ed2cb34</anchor>
      <arglist>(const BoxContainer &amp;keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a578842fb577f1bd4b4f7f1da0152cd86</anchor>
      <arglist>(const BoxTree &amp;keep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>intersectBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a23556862d6a83417f33e3abb51106ef8</anchor>
      <arglist>(const IntVector &amp;refinement_ratio, const MultiblockBoxTree &amp;keep, bool include_singularity_block_neighbors=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>acebb54c2ea98d97f438e0ce55656b316</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a12f35bfed2e770638e357454c10f1e74</anchor>
      <arglist>(Iterator position, const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a53a8b73a1fcbe73c679fc6ce8e1b0293</anchor>
      <arglist>(ConstIterator first, ConstIterator last)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a1af52e9dd1421a8ce0ce52ccb0024e74</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>lowerBound</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ad620d71447f517250019cae1d6f42c80</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>upperBound</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a741599e875f4d0fef1a913a88c64faac</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a72fdf350374069c52b2a36c715e9fc88</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>separatePeriodicImages</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ada1dc589a7b556513e6d9715802b6435</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;real_mapped_box_vector, std::vector&lt; Box &gt; &amp;periodic_image_mapped_box_vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicImageBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ae6c69e1e6065a9b4e0b88384cd7cf49f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unshiftPeriodicImageBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a814246558f4e1225de30e4b80659a7df</anchor>
      <arglist>(BoxContainer &amp;output_mapped_boxes, const IntVector &amp;refinement_ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a6e5d52ae23507d946ad1f669db4f7e90</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a9d836644c077435ea79def88a7143f28</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator tbox::Array&lt; tbox::DatabaseBox &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ad0b318fe12bdd6da1f674bfeb6b62e48</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a0e018adef09a9d3631b2105015689da3</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>a19f443ba4410bb46337cd71578f2f740</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>acf9e3e89ec00844bde233c296adf4db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer.html</anchorfile>
      <anchor>ab605c1f6e8e543714f20820b93d2d556</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainer::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainer_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer_1_1Outputter.html</anchorfile>
      <anchor>a933a65eeafeeba91e73c10528dfcfa43</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainer_1_1Outputter.html</anchorfile>
      <anchor>afe0b40cec06244091a28e181566588c3</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerConstIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a0b0d363d7f3e2534797ad12df9572e65</anchor>
      <arglist>(const BoxContainer &amp;container, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a361dc58e25ffd46155340fcd94db0a32</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a38a54a81600aac6292220906aea9fec7</anchor>
      <arglist>(const BoxContainerIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a7b8878c7f50072888a17dc48433049e4</anchor>
      <arglist>(const BoxContainerConstIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>adce7210baad730de8343e53b676d41de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a60e3b45d37471f26d84568cb3a22e562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>ac127af1dbb6508d518cd89edae6ab91a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>ae506a4a7339b0c945cb210b06473303e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerConstIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a898a668af4ddee4e66468405a56e2b71</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerConstIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a37dc690b1290ebf4470c3acb3daac312</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerConstIterator</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a74591d980e356e2a0f6ee9ba3802e7c3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerConstIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a2eee9fe5fd065e4435d8d5c0c829117c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a87cb439862c191c3ba1ea0cced326527</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>ad78d54fb2ef1a6ab6d930bed44a414b8</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>a933a65eeafeeba91e73c10528dfcfa43</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerConstIterator.html</anchorfile>
      <anchor>acf9e3e89ec00844bde233c296adf4db5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a1127f43b59e51efa9cdd484c43188bb6</anchor>
      <arglist>(BoxContainer &amp;container, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>af755b2d0f9ca30d05c84a3e901f603fc</anchor>
      <arglist>(const BoxContainerIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>acaa843349a54a45d9ac9012beb680882</anchor>
      <arglist>(const BoxContainerIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a1d9e11dfcca5e8155829ebf13ae104cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a88a21e755b318fd895028f696d712c5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>af0712d6035d6d8477d64cda1fc528f93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>aed85bdfd38ec5b0e43374e344de5414e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a54e0459c19cf9a003c567fcdbe94c6bc</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>aa7e9416a8fd5c0f2ff377ab1eaac53b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerIterator</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>ae49f790a6ff9392538e05f3a7cef76be</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainerIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a311c2e701f0efe70980bae2d14fe001d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>aa6a942c6512ce53a4a69def7360a911b</anchor>
      <arglist>(const BoxContainerIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a2346efde01084c3c476c96fe5c7e82a2</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a9f4122ac73b5fb1cefde05d58d4960ac</anchor>
      <arglist>(const BoxContainerIterator &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a297370cb809e7a53db383e461d882a74</anchor>
      <arglist>(const BoxContainerConstIterator &amp;other) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>a933a65eeafeeba91e73c10528dfcfa43</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxContainerConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerIterator.html</anchorfile>
      <anchor>ab605c1f6e8e543714f20820b93d2d556</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerSingleBlockIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerSingleBlockIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>ac7f6086dc9961005e01fdea4be544414</anchor>
      <arglist>(const BoxContainer &amp;container, const BlockId &amp;block_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerSingleBlockIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>a11b7ee15d28c2594f0869cc7ee53db2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleBlockIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>a67d51c0aaa64694205858e26991b9416</anchor>
      <arglist>(const BoxContainerSingleBlockIterator &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>a846581997c1eb79c03a19a0e61f5e89a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>a1ed6fbc2398cd55f3b925c6c905f3a1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>a4af3acbbf89e5b1c796a595e498137bb</anchor>
      <arglist>(const BoxContainerSingleBlockIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>ac1a0dfe704a3ef667f8e319010dc2f08</anchor>
      <arglist>(const BoxContainerSingleBlockIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>aea4329508bb0a3352b085a73f710991d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleBlockIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>ac9817844208c7e2cf8feea507ce5c610</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleBlockIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>a6d55cef8495197c0a94d7bf1a37c999e</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleBlockIterator.html</anchorfile>
      <anchor>ac6d9d477fedcae6de41816695170f75e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerSingleOwnerIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxContainerSingleOwnerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>afae50166bcff5f94a7ae8d522debfd69</anchor>
      <arglist>(const BoxContainer &amp;container, const int &amp;owner_rank)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxContainerSingleOwnerIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>ab42f072e6251874b5fe5607d7e937c5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleOwnerIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>ab054b55b464ebb67ea0833743bf45252</anchor>
      <arglist>(const BoxContainerSingleOwnerIterator &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>a5ce7339ba08f30574e060cd5dbef3e53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>a427a239b30a948eb8fd0db7ca176cdfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>aa9ed0f5ccbf837a866875ce42a760184</anchor>
      <arglist>(const BoxContainerSingleOwnerIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>ab7cfae064398a27b4006a0b86f86cf1c</anchor>
      <arglist>(const BoxContainerSingleOwnerIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>a986c93eba13ee363bb00703a5527a842</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleOwnerIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>ac49e3d5845ad61fa10396e2439ebaf9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>BoxContainerSingleOwnerIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerSingleOwnerIterator.html</anchorfile>
      <anchor>a01b8fd5e10cf21d820395fff344368e6</anchor>
      <arglist>(int)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxContainerUtils</name>
    <filename>classSAMRAI_1_1hier_1_1BoxContainerUtils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursivePrintBoxVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxContainerUtils.html</anchorfile>
      <anchor>ac358980060e460be9fd0d152b2d2f9aa</anchor>
      <arglist>(const std::vector&lt; Box &gt; &amp;mapped_boxes, std::ostream &amp;output_stream=tbox::plog, const std::string &amp;border=std::string(), int detail_depth=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxGeometry</name>
    <filename>classSAMRAI_1_1hier_1_1BoxGeometry.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>a0fbff3d9475296c59814b3193b371775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>ac67170cf4f49a5d329deba0b5fbfa028</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>af53b2d9fee56208fca4be2ab35617866</anchor>
      <arglist>(const BoxGeometry &amp;src_geometry, const Box &amp;src_mask, const Box &amp;fill_box, const bool overwrite_interior, const Transformation &amp;transformation, const BoxContainer &amp;dst_restrict_boxes=BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>a59c787ec59f72af4120ced3058a3b22b</anchor>
      <arglist>(const BoxGeometry &amp;dst_geometry, const BoxGeometry &amp;src_geometry, const Box &amp;src_mask, const Box &amp;fill_box, const bool overwrite_interior, const Transformation &amp;src_offset, const bool retry, const BoxContainer &amp;dst_restrict_boxes=BoxContainer()) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxGeometry.html</anchorfile>
      <anchor>ab5aee38f4497f5248351e30ab6720aed</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;offset) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxId</name>
    <filename>classSAMRAI_1_1hier_1_1BoxId.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ad6766baf14acad75ab560de373f08219</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a22dd91bfa462c35d7eac9e12b4765616</anchor>
      <arglist>(const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a4292963a5c2ca47536d3bb27409762b6</anchor>
      <arglist>(const GlobalId &amp;id, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ac88d5f17882c4fc0b7cbd786491a373a</anchor>
      <arglist>(const BoxId &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a707d19c9856882b3ee513209f6367ffc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a7b8f2a83abc47c46a9e23cbcc9a4d31b</anchor>
      <arglist>(const LocalId &amp;local_id, const int owner_rank, const BlockId &amp;block_id=BlockId::zero(), const PeriodicId &amp;periodic_id=PeriodicId::zero())</arglist>
    </member>
    <member kind="function">
      <type>const GlobalId &amp;</type>
      <name>getGlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a1cfdf7ca606b208c83eea9ea2e082c4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>adb2d749b29c575672be3fb8a891554ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a99de57aa040505b2c7988bff44a671d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ae6eea124ff300326e1b65f031c008dc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getPeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ade6393ec3ef3515dd1690ec5c19e19cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeriodicImage</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a9fdf71a9cdb0c14e97d1b85fcf220c3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a61dacc0e706158df1eb83ad2fcf121bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a1f14c613d3b14b9da68d40ab16a90159</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>abf38d55fefa6f9f4bec785704f15658b</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a91c229ed3a155bc0fc4f146cdff723af</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a4f84d3d4be75f219242e417a2e08a631</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a90539e94cfa268fc69c4778197551024</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a4b50fc8b2ea9e24abd61e15c581dd2e3</anchor>
      <arglist>(const BoxId &amp;r) const </arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a1ff7320a4004dd62fbc7939dc3877341</anchor>
      <arglist>(std::ostream &amp;co, const BoxId &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a94ae12e28872cccf0bd4ade965d67420</anchor>
      <arglist>(int *buffer) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>ac2ef57828afc61b8621b930ec6c6df88</anchor>
      <arglist>(const int *buffer)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>commBufferSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxId.html</anchorfile>
      <anchor>a819946b501a090f82dcadb8b950d083a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxIOUtility</name>
    <filename>classSAMRAI_1_1hier_1_1BoxIOUtility.html</filename>
    <member kind="enumeration">
      <name>IOTYPE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a3a3f501e437689da316de5c0c8f687d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>READ</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a3a3f501e437689da316de5c0c8f687d8a41237e3a8cb846096a4fdcaf1b5390fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WRITE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a3a3f501e437689da316de5c0c8f687d8a418f9bdb5d968b3d8bc92e8e84509d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxIOUtility</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a44e8f9edf3a14389f577677c97297d54</anchor>
      <arglist>(const std::string &amp;filename, const IOTYPE iotype)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxIOUtility</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a61798e53ef913ba3b973b05f519e3fb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLevelBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a8a5cf862222a8231ff63909102fb9187</anchor>
      <arglist>(BoxContainer &amp;level_boxes, const int level_number, const int entry_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putLevelBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a08572d03bf09b7509301ac7809c8c33b</anchor>
      <arglist>(const BoxContainer &amp;level_boxes, const int level_number, const int entry_number)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>adc9cc4d1b46948026375645549ff3089</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfEntries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>aefdac62893cbaa66785430c4273a85b6</anchor>
      <arglist>(const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeLevelBoxesDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a6aee9f9afbe69872c89f8d3e1618c18f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxIOUtility.html</anchorfile>
      <anchor>a8876b52c1d7182384242fd230a21d660</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevel</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevel.html</filename>
    <class kind="class">SAMRAI::hier::BoxLevel::Outputter</class>
    <member kind="enumeration">
      <name>ParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a02c34699888ab34b06f59a210247bcb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DISTRIBUTED</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a02c34699888ab34b06f59a210247bcb4a50fcdd33dde8ec1597aa318dcb384578</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GLOBALIZED</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a02c34699888ab34b06f59a210247bcb4a2dbf00b87512ae236e2dbde25acb952f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad9166134c943fb4651c4f8a9f0120ce6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ab8771dd90200a99a9e60cb6b356fcecf</anchor>
      <arglist>(const BoxLevel &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ae05537f5c8976a0b20f440c0511304d7</anchor>
      <arglist>(const IntVector &amp;ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom, const tbox::SAMRAI_MPI &amp;mpi=tbox::SAMRAI_MPI::getSAMRAIWorld(), const ParallelState parallel_state=DISTRIBUTED)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a6394d4f3e24e749f5b61837472083059</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>BoxLevel &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a18c03270c7bdbb4db152fdbd621df2bd</anchor>
      <arglist>(const BoxLevel &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>acee6e3177f6b449ba55b24f49552ac7c</anchor>
      <arglist>(const BoxLevel &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a891a35ed061d70147f9ba2a4a6f71ba7</anchor>
      <arglist>(const BoxLevel &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>PersistentOverlapConnectors &amp;</type>
      <name>getPersistentOverlapConnectors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ab05bf78d870a47e2b10b4e699d905092</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; BoxLevelHandle &gt; &amp;</type>
      <name>getBoxLevelHandle</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a3ae104e1d5b18babb7b1c2160bcafe91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a75737be9196720b1df276eb5f62f821a</anchor>
      <arglist>(const IntVector &amp;ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom, const tbox::SAMRAI_MPI &amp;mpi=tbox::SAMRAI_MPI::getSAMRAIWorld(), const ParallelState parallel_state=DISTRIBUTED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapInitialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a60e43e64e110c4ea018bfb31c40cb3ba</anchor>
      <arglist>(BoxContainer &amp;boxes, const IntVector &amp;ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom, const tbox::SAMRAI_MPI &amp;mpi=tbox::SAMRAI_MPI::getSAMRAIWorld(), const ParallelState parallel_state=DISTRIBUTED)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad1993c509749c5b3e92c0c534a51e9fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ab2e456f1ea28b01198a9d3e3729e6f2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicImageBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a2b2aeafd75c199736c5e2ed21dc015b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad1e2b6cbb81383c7661222048edd103c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearForBoxChanges</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a6072357f1e4f2309ebd766df0b6b43e4</anchor>
      <arglist>(bool isInvalid=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a68a7c6544286b59ab1508695cadc0c99</anchor>
      <arglist>(const ParallelState parallel_state)</arglist>
    </member>
    <member kind="function">
      <type>ParallelState</type>
      <name>getParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a05a8aff85e4de46e216ac7104a9da3db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheGlobalReducedData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a88d752dca7dd51b8c1b0b0aa27c3d64e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getGlobalizedVersion</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a257e30e9541d393912b74e66e3f1393d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateGlobalizedVersion</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a79e0cba16a65048ca62cbfd93fa72479</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::SAMRAI_MPI &amp;</type>
      <name>getMPI</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>aef3f6891b9fc479fa7e03a39ce97ba20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>af02a8133cddd0fedd7b2bf68fd573c78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getGlobalBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a6cad39e7388bc1f6acc515b41e8e7b0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getGlobalBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a621aa4df7351bf32b53dcc2258890415</anchor>
      <arglist>(BoxContainer &amp;global_boxes) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>getFirstLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a761103af1a239bc978d6ce4d7a1aa7e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>getLastLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ac4ac11e4d7acc241da03e8ba1520b472</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRefinementRatio</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>aeb5a752ae11f8826da5feb1ca79296e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a804168f8599cad03de6a5232accc4a71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a2bce9c6f85b07e7634b7df5c7c286504</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad4838ed2fd92a444d15c5b01e069a898</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a799ad52b977646d3c095c25463d4d15b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinNumberOfBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a922bbd77b18facc9efe362166f9f0a1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a963ed6134f11554284f388462fb642fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ac581ae5959face79ca144e680c6b7055</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMinNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad6f98b4539ae7b7a8d5aa7ab859a1648</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getLocalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a81eab162732468db5a82d08854749b57</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a6b4fb122da9b234f4e8accfb64fef6f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getLocalBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a10631c5711f412140aa53fd49999b30c</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getGlobalBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a7ebe1902c9321a0623f120a1348c652a</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getLocalMaxBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a4726490d780b59faa56957f4aede398d</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getLocalMinBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>aaf213da18bb9bc76080897f45251281c</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGlobalMaxBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a16c0d1125323e85d73fd75be3c5756af</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGlobalMinBoxSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a106ece335b8f50e823e5cd6041427786</anchor>
      <arglist>(int block_number) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>afffe5f3478e22931dd90f0824d1043fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::ConstPointer&lt; GridGeometry &gt; &amp;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>adce950ac7446a41022b02eaa6dae8d12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>af9d572999cb352e26876d5641c89f28c</anchor>
      <arglist>(BoxLevel &amp;finer, const IntVector &amp;ratio, const IntVector &amp;final_ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a6d08a9ac95f9c25ffb319bbc0e79f7b1</anchor>
      <arglist>(BoxLevel &amp;coarser, const IntVector &amp;ratio, const IntVector &amp;final_ratio) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>addBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>acf34d8c5ed700a0b5b83c0836eaf7cf9</anchor>
      <arglist>(const Box &amp;box, const BlockId &amp;block_id, const bool use_vacant_index=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a7a80e5adb2b547f075125db37be16ff7</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBoxWithoutUpdate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a7192f8a642329533e870d08ac4affb08</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a1efaddb0a58895344bfdc03003e1aa9d</anchor>
      <arglist>(const Box &amp;existing_box, const PeriodicId &amp;shift_number)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>af981e894ed7ccfdf5ba26581e4f7ae91</anchor>
      <arglist>(BoxContainer::Iterator &amp;ibox)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>aac786eaec7c2fa5256f41a685c945257</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseBoxWithoutUpdate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a0ee46cb63c7d8409c8688f3700605a98</anchor>
      <arglist>(const Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>abaebc9206af6c473b3cd320ae22e0348</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a41d0a7f4208383e2749b45af045ffbef</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBoxStrict</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a8d7f87a179f8f986fcd310c7238fc34e</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>BoxContainer::ConstIterator</type>
      <name>getBoxStrict</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>adea4ee985307cee9d633bd7cdf965a08</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSpatiallyEqualBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ac33526f84722654e4eec9ef11093aaac</anchor>
      <arglist>(const Box &amp;box_to_match, const BlockId &amp;block_id, Box &amp;matching_box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a92813b4ed596c638f72cb2ac89b95ccb</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>aa6ff7c48c4f78b537fa1b88b74d91126</anchor>
      <arglist>(const GlobalId &amp;global_id, const BlockId &amp;block_id, const PeriodicId &amp;periodic_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>af7913449fb489ab3f4abddc251cc5584</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a22584dc1d16ed7c693493c000d03f358</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad78873729817c13af4c7395a4562e137</anchor>
      <arglist>(tbox::Database &amp;database, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geom)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a7cb7c4570aa7f060a92d3fbbea965e1c</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border, int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>ad834db8d9f5d1f1553ed9f87cd0732c0</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a9eebd53c534a0b42c59cf9cb08f2777e</anchor>
      <arglist>(BoxLevel &amp;level_a, BoxLevel &amp;level_b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeCallback</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a4ecc71772e6110edc89c72e877ae0339</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalizeCallback</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a4df6618b0a3d915068d20a14c68f7dce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; BoxLevel &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel.html</anchorfile>
      <anchor>a806bcc585fda4fe222344009a7188875</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevel::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevel_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel_1_1Outputter.html</anchorfile>
      <anchor>ade5148e6656171aa69a94e41b1dff87f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevel_1_1Outputter.html</anchorfile>
      <anchor>afe0b40cec06244091a28e181566588c3</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevelConnectorUtils</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxLevelConnectorUtils</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>a7bcaa32bb4e11b2c1fee3080a64a2545</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPreconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>ae7c029d73668a17cbcd4decbb1bf0866</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPostconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>ad487b8fea1290525313ec0e667aa08a9</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBoxesAroundBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>abc7a62ab2d63585187fce452837a5b15</anchor>
      <arglist>(BoxContainer &amp;boundary, const IntVector &amp;refinement_ratio, const tbox::ConstPointer&lt; GridGeometry &gt; &amp;grid_geometry, const bool simplify_boundary_boxes=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseNestsInHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>af2f8065d8ed221338d2754f86765a665</anchor>
      <arglist>(bool *locally_nests, const Connector &amp;connector, const IntVector &amp;base_swell, const IntVector &amp;head_swell, const IntVector &amp;head_nesting_margin, const MultiblockBoxTree *domain=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>baseNestsInHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>a1d877688f45740f74238df3457d7e5b4</anchor>
      <arglist>(bool *locally_nests, const BoxLevel &amp;base, const BoxLevel &amp;head, const IntVector &amp;base_swell, const IntVector &amp;head_swell, const IntVector &amp;head_margin, const MultiblockBoxTree *domain=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeExternalParts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>a179e40f235705d5b63eda01605b5c54b</anchor>
      <arglist>(BoxLevel &amp;external, Connector &amp;input_to_external, const Connector &amp;input_to_reference, const IntVector &amp;nesting_width, const MultiblockBoxTree &amp;domain=MultiblockBoxTree()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeInternalParts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>ae2471c7bbe7e9c7c95efc91fc2dbe56f</anchor>
      <arglist>(BoxLevel &amp;internal, Connector &amp;input_to_internal, const Connector &amp;input_to_reference, const IntVector &amp;nesting_width, const MultiblockBoxTree &amp;domain=MultiblockBoxTree()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeSortingMap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>a7425034d4327b612239809eb22610e62</anchor>
      <arglist>(BoxLevel &amp;sorted_mapped_box_level, Connector &amp;output_map, const BoxLevel &amp;unsorted_mapped_box_level, bool sort_mapped_boxes_by_corner=true, bool sequentialize_global_indices=true, LocalId initial_sequential_index=LocalId::getZero()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeRemainderMap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>a387a0158721ef4ae3aec784de0d4c96f</anchor>
      <arglist>(BoxLevel &amp;remainder, Connector &amp;orig_to_remainder, const Connector &amp;orig_to_rejections) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicImages</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>ad460d2df49f1ab167a467c4007fc3533</anchor>
      <arglist>(BoxLevel &amp;mapped_box_level, const BoxTree &amp;domain_search_tree, const IntVector &amp;threshold_distance) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicImagesAndRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelConnectorUtils.html</anchorfile>
      <anchor>a48137b291f4b44cab0cb5b299a13cf87</anchor>
      <arglist>(BoxLevel &amp;mapped_box_level, Connector &amp;mapped_box_level_to_anchor, Connector &amp;anchor_to_mapped_box_level, const BoxTree &amp;domain_search_tree, const Connector &amp;anchor_to_anchor) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevelHandle</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>~BoxLevelHandle</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>aa77f6d3ba30c36c6f589fdd489b4a014</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>a3bd009e9074c2ef3e89a3c1c9d927c7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isAttached</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>a8f6514990ba17d2f5d96a0458f03b913</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelHandle.html</anchorfile>
      <anchor>ade5148e6656171aa69a94e41b1dff87f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxLevelStatistics</name>
    <filename>classSAMRAI_1_1hier_1_1BoxLevelStatistics.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxLevelStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelStatistics.html</anchorfile>
      <anchor>af471a6a7d565a5676afa5eef65466fdd</anchor>
      <arglist>(const BoxLevel &amp;box_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printBoxStats</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxLevelStatistics.html</anchorfile>
      <anchor>a97022e3f5f165ae3c4bcd0f5f674e382</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</filename>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::ConstNeighborIterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::Iterator</class>
    <class kind="class">SAMRAI::hier::BoxNeighborhoodCollection::NeighborIterator</class>
    <member kind="typedef">
      <type>std::pair&lt; Iterator, bool &gt;</type>
      <name>InsertRetType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>abee86b277bd22f76d2b4f68a66f53c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ae2796acd129208a5e590b04b82e13074</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6dff974b3efd1a0b337c34086113852b</anchor>
      <arglist>(const BoxContainer &amp;base_boxes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a32a548f107666fc24f8de1b076808013</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>BoxNeighborhoodCollection &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aeb5a89b997f75ecdaf33800c59fec9e9</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a8775a5550fb0ac96cf606e3abd0496e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a063cfd222a1f181c5b975c6add2ca01f</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a87abf2e6bd0a6aee7afe45a24575b00a</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a488f9b273df880557e6fd11c6bfc079f</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aa89c1bed578cae194ff8045d579aacf9</anchor>
      <arglist>(ConstIterator &amp;itr, std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a84f12867f73a1fe29674db50e62f1e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a55201116d7c92a4c57b2b129371a1df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ad222e8293f7d261a5e8bc8721febf92a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a9a4669241a1ea9a6926501028833d1b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a1a315d5f2c460e78aa61fb125b529543</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a29a60adba96b85516db264cde26ae217</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a5ff2a38525179e337ab9397086a79d3c</anchor>
      <arglist>(Iterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6c08364085c8e0975a5b2b0a80b0da21</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a169148b3a292e1c39bd3b2e5c12466c5</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ae596372732192e80f06c1728caeae3dc</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a5074e151268a1d5c45ff041943e36a18</anchor>
      <arglist>(Iterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6cd1bb456884655a5de8acc0d919ad7f</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a4dd7c7f6d1d926bb3c5407d123f0df88</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>abb199a59dddcf7e38182d9e2bc53a470</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a005153eff7bf80645cc01ca85c0d5400</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numBoxNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a056723db05d75364eef4e71f3b32d286</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emptyBoxNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a1b38f056bafa81779b9de9e181fd4090</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>emptyBoxNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a93e2321cec10e63e35c17762eb13b4f6</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a79e6fc7b80ef2e9fea3bc6e2ae8848b8</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>adcbebe9f17da2bd4b473510140b3ea87</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sumNumNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a48f8d586ff3aae9eddbf4962a23f1cda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a4084f13dd39cf562ef81f40e4c32f983</anchor>
      <arglist>(const BoxId &amp;base_box_id, const Box &amp;nbr) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aadaf159abc99d494eadad8489d423651</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr, const Box &amp;nbr) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>neighborhoodEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a5c05fe8b135ce700857d3ca00f7f8492</anchor>
      <arglist>(const BoxId &amp;base_box_id, const BoxNeighborhoodCollection &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBaseBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a3ae1c8c1da27cc00940855898610ef3d</anchor>
      <arglist>(const BoxId &amp;base_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ada3d9323188f5d29bd4fd8d09a08841b</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aa18fa1b3fea84a486e3ef2c144d3e36f</anchor>
      <arglist>(const BoxId &amp;base_box_id, const Box &amp;new_nbr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a818da9434b65e589eb50921011ab8274</anchor>
      <arglist>(Iterator &amp;base_box_itr, const Box &amp;new_nbr)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a98baf1e5be88efc18bb621c743ebf5e4</anchor>
      <arglist>(const BoxId &amp;base_box_id, const BoxContainer &amp;new_nbrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6df294e059f2bad140721641325cecba</anchor>
      <arglist>(Iterator &amp;base_box_itr, const BoxContainer &amp;new_nbrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aa15b2f71632c3d36aad9c16c12281ba3</anchor>
      <arglist>(const BoxId &amp;base_box_id, const Box &amp;nbr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>afc9c57b8aedddb3b4de160e3991aacbe</anchor>
      <arglist>(Iterator &amp;base_box_itr, const Box &amp;nbr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6c006c2cc77b1cc969d8bfb3b89ab469</anchor>
      <arglist>(const BoxId &amp;base_box_id, const BoxContainer &amp;nbrs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a1191cd4e49fd7312225e5d37dc551a92</anchor>
      <arglist>(Iterator &amp;base_box_itr, const BoxContainer &amp;nbrs)</arglist>
    </member>
    <member kind="function">
      <type>InsertRetType</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>adfb917176c9e39bef065c47ca0b9c85d</anchor>
      <arglist>(const BoxId &amp;new_base_box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a6bc3da5fd6766f9e610fd3adc80eaafb</anchor>
      <arglist>(const BoxId &amp;base_box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ab52179d62ac01216301c87a5bcde757c</anchor>
      <arglist>(Iterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a92852535a9c1e410c68b318064b1202c</anchor>
      <arglist>(Iterator &amp;first_base_box_itr, Iterator &amp;last_base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseNonLocalNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>ab0c10df57ca3b784f4f8672392387268</anchor>
      <arglist>(int rank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseEmptyNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a9a1483b4a130cda40d54719853f80784</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erasePeriodicNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a8ec3b48e89830565c2cbb4d637074c34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a8ef7daafadccd50c77a86eb4fb7a8a33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>afd7e2cb3e68e335604cb415d8f71578e</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a633a6deb9a50a1698259dd70443bdcd6</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a5a5a72e03e458c57572dd2e53e663ea7</anchor>
      <arglist>(const IntVector &amp;growth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a2ca434d70c73031b822913722ce343ce</anchor>
      <arglist>(BoxContainer &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a1ff2843eac5286d0f16fc86a4dc03af2</anchor>
      <arglist>(BoxContainer &amp;neighbors, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a8d28d983082b132a55b628ab3e1f86ad</anchor>
      <arglist>(std::map&lt; BlockId, BoxContainer &gt; &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a72daa70dfbfbe2a0d6b6f6ded2cd5508</anchor>
      <arglist>(const BoxId &amp;base_box_id, BoxContainer &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getPeriodicNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>aaf9619d83dea3dee98b3b862c6fcf0ba</anchor>
      <arglist>(BoxContainer &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a163e3e9f69eff6d4ae3cb1a3dae25c1a</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;send_mesg, const tbox::Dimension &amp;dim, int buff_init) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromIntBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a3020f10855e68c10f3906d99db875efd</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;recv_mesg, const std::vector&lt; int &gt; &amp;proc_offset, const tbox::Dimension &amp;dim, int num_proc, int rank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a8f7ce35aa6f5a5975e906f39e16680d1</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>acc4db6cee6c50c2db9ef863cdfdb9b57</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a9830fc407400559db7e7783cc10a9394</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection.html</anchorfile>
      <anchor>a5485970bb9da6b5d782fa28638b5658f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::ConstIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>abd7d47c65977dc2f62dd4edf86fe2797</anchor>
      <arglist>(const BoxNeighborhoodCollection &amp;nbrhds, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>af8858280f151163d2e80750d035bdb46</anchor>
      <arglist>(const ConstIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a610233c9f79e46f1702f8c41901a43e5</anchor>
      <arglist>(const Iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a51d0c85fae9c4e44d2b0cf2f950ce450</anchor>
      <arglist>(const ConstIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a98724c982aaa60fe07981f70364620d8</anchor>
      <arglist>(const Iterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a3245fe56ef5d07b3243775261335958a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxId &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a3f997be54a35475d915e3f4e7683f1ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxId *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>ad674b116da94f77904f63ee24fb1a536</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>aa2c5df3e3971cda0f9a0bd4d8a7edf79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a889f10f97dd2f4524e472d32f10edfa4</anchor>
      <arglist>(const ConstIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>accbf6d1eda3cf31e2ee214d206b5f82c</anchor>
      <arglist>(const ConstIterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a575ef3116a743934aeae34060b1fda10</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>a1574f0490ae4a8ede8317663c105b4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstIterator.html</anchorfile>
      <anchor>af047fd96ba10b6365c29607b24ba4f6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::ConstNeighborIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a717a008c47eea96d1918ab6e4eb3e899</anchor>
      <arglist>(const ConstIterator &amp;base_box_itr, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a79a7cb1ccc4ce9014841ac103f33d73c</anchor>
      <arglist>(const ConstNeighborIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a59b5d046baa5ccec29eeb764f6f025d9</anchor>
      <arglist>(const NeighborIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a7c40c8e293dce1e3c87e391d0a672bc7</anchor>
      <arglist>(const ConstNeighborIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a476b10acc946c9afe9e1326514d974b9</anchor>
      <arglist>(const NeighborIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a164a8bb7a32fb1ee4db3afec22dcc165</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>acf45ebc770b446f11268c795179ff262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>ad420d75d7b916bf881834bb0dc126d1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>ab2e121a50fb627cfaccb0fa60a911a2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a0781c0a2d57280f5076948a312153b6b</anchor>
      <arglist>(const ConstNeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a0f4b4659a51bc7787649998c292959a3</anchor>
      <arglist>(const ConstNeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1ConstNeighborIterator.html</anchorfile>
      <anchor>a575ef3116a743934aeae34060b1fda10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::Iterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a7c073a6e976b05030a6d6d009eba8c06</anchor>
      <arglist>(BoxNeighborhoodCollection &amp;nbrhds, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a6e87db303344172080b2468bfc94d722</anchor>
      <arglist>(const Iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>aec04512bd8c5bd9ccea3963bfaaa0b98</anchor>
      <arglist>(const Iterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a274477d853cbf68d0b247d0b2a885c2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const BoxId &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a38ae25ac12d058f7192fc212e7554e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxId *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>adc5db22d02f8c5113c6d146933053ad3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a42b37487d55b33f90fd045861b4cfbb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a4d8762abc0cfb7edaccfc470100cc8d6</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>ab8f7b360715257433d7a5ed27d0c74a5</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a575ef3116a743934aeae34060b1fda10</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a1574f0490ae4a8ede8317663c105b4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>a5485970bb9da6b5d782fa28638b5658f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1Iterator.html</anchorfile>
      <anchor>abd4a1efa9e3fd84ebff05c366a0ab736</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxNeighborhoodCollection::NeighborIterator</name>
    <filename>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>af26e25441033d2a121f2d194f9c293e1</anchor>
      <arglist>(Iterator &amp;base_box_itr, bool from_start=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a740297d3494b2fadc9debc71c4045094</anchor>
      <arglist>(const NeighborIterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a67e0756d3235d0bb9946b17f747e0e9b</anchor>
      <arglist>(const NeighborIterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a9eb2a16303384df531e51e5ea10b8ec5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>aadb73fcc5fe4515534bd39fb4bee4cc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a61110b91ccdb1da97afa0c5159fa28b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>aced112c8d34530cf30278698cc92233f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a85016fe571c1175d7a342542f991284c</anchor>
      <arglist>(const NeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>ab388f799251880c431e7a5b2066176ea</anchor>
      <arglist>(const NeighborIterator &amp;rhs) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxNeighborhoodCollection</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>a575ef3116a743934aeae34060b1fda10</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxNeighborhoodCollection_1_1NeighborIterator.html</anchorfile>
      <anchor>af047fd96ba10b6365c29607b24ba4f6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxOverlap</name>
    <filename>classSAMRAI_1_1hier_1_1BoxOverlap.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>a1d39a748dd344b686b12df4324a77e69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>a2641498a84a19c2b1b7cfbb2169047da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>a9981425e58b12be926237dab834e9fe7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>aa1a60c2596bbf058aad2a359125f642d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>ae2fc3cf7a0bdf63d15a3c105b275b745</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxOverlap.html</anchorfile>
      <anchor>a15491c9b2d0c7ffd7891cbcb7969b48f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::BoxTree</name>
    <filename>classSAMRAI_1_1hier_1_1BoxTree.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>ab806100557120bc6b4509ac38af75d01</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>aced7363cc6194d74921e509e77938528</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const BoxContainer &amp;mapped_boxes, int min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a6db8fb6a1d616525edd79a7ce8010222</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const BoxContainer &amp;boxes, const BlockId &amp;block_id, int min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a9a75cfac6f8ae3f7edd7d3d87dd6296a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>aa0561a192a9f1fa4654445bbae603bc6</anchor>
      <arglist>(BoxContainer &amp;mapped_boxes, int min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a751222e42a5e9e14d09a415c27e73c18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>ae4d9a0263c0a54d8f8c2466746484e99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; BoxTree &gt;</type>
      <name>createRefinedTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a0b959d5434c047015b42fb5f0eaca000</anchor>
      <arglist>(const IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a6216af1da5ddbcb877872bfb230dae25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BoxTree &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a790d7499f20abdce6e73bd397210b5cc</anchor>
      <arglist>(const BoxTree &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a05c660bddb19bef6d1c7ecb1c8b64cc0</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;mapped_boxes) const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBoundingBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a6b9cb2a3dc7bf15c165613261148193d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a58a10eac8bf78cf14c9e8d73383a4d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a58ca96b2decdd4c0ca34918fce20ac45</anchor>
      <arglist>(const Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>ab6dcc74b5c01beb8a1157df4a2a5a938</anchor>
      <arglist>(Connector &amp;overlap_connector, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a8f2e0356368f767d6bf904547bba7a5a</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;overlap_mapped_boxes, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>aec3cbee0b430df6381db5518d8f3bd99</anchor>
      <arglist>(std::vector&lt; const Box * &gt; &amp;overlap_mapped_boxes, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a70edd800f60f52e1992949d90d4776ec</anchor>
      <arglist>(BoxContainer &amp;overlap_boxes, const Box &amp;box, bool recursive_call=false) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>aefe2fefa02dc4a4fe39d414c54484433</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1BoxTree.html</anchorfile>
      <anchor>a3b17e483b0112f2e73d1da42ae8262bd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::BoxUtilities</name>
    <filename>structSAMRAI_1_1hier_1_1BoxUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>checkBoxConstraints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a76e9f160b0f9a75d6b8425de01a97bbe</anchor>
      <arglist>(const Box &amp;box, const IntVector &amp;min_size, const IntVector &amp;cut_factor, const IntVector &amp;bad_interval, const BoxContainer &amp;physical_boxes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>chopBoxes</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a5804619c16119506444b48d41e3b2f26</anchor>
      <arglist>(BoxContainer &amp;boxes, const IntVector &amp;max_size, const IntVector &amp;min_size, const IntVector &amp;cut_factor, const IntVector &amp;bad_interval, const BoxContainer &amp;physical_boxes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>chopBox</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>afd15f323d70e253e13d013935ac83ade</anchor>
      <arglist>(BoxContainer &amp;boxes, const Box &amp;box, const tbox::Array&lt; tbox::List&lt; int &gt; &gt; cut_points)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>extendBoxToDomainBoundary</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a01f13be2125c96d4c2d38840f2df2921</anchor>
      <arglist>(Box &amp;box, const BoxContainer &amp;domain, const IntVector &amp;ext_ghosts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>extendBoxesToDomainBoundary</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a7f415a7c2357a1bd90a00059501cef27</anchor>
      <arglist>(BoxContainer &amp;boxes, const BoxContainer &amp;domain, const IntVector &amp;ext_ghosts)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>growBoxesWithinDomain</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a835654fce77dfe3289d5b64405ddd6ca</anchor>
      <arglist>(BoxContainer &amp;boxes, const BoxContainer &amp;domain, const IntVector &amp;min_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>growBoxWithinDomain</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a94006fff4bd347678b4c6622e950b849</anchor>
      <arglist>(Box &amp;box, const BoxContainer &amp;local_domain_complement, const IntVector &amp;min_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsGivenMax</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>aef2ccb530a7e8b24abaeed17dece2399</anchor>
      <arglist>(tbox::Array&lt; tbox::List&lt; int &gt; &gt; &amp;cut_points, const Box &amp;box, const IntVector &amp;max_size, const IntVector &amp;min_size, const IntVector &amp;cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsForDirectionGivenMax</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>ae978eaee058a8c488cf32a5fbf82cd72</anchor>
      <arglist>(const int idir, tbox::List&lt; int &gt; &amp;cut_points, const Box &amp;box, const int max_size, const int min_size, const int cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsGivenNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a914e7724299b8ae4817cda66783f82a1</anchor>
      <arglist>(tbox::Array&lt; tbox::List&lt; int &gt; &gt; &amp;cut_points, const Box &amp;box, const IntVector &amp;number_boxes, const IntVector &amp;min_size, const IntVector &amp;cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>findBestCutPointsForDirectionGivenNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a183b3c2590d1b442295c91d92cda7201</anchor>
      <arglist>(const int idir, tbox::List&lt; int &gt; &amp;cut_points, const Box &amp;box, const int num_boxes, const int min_size, const int cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkBoxForBadCutPoints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a78726f1773d33ea92cde9faa8c840335</anchor>
      <arglist>(IntVector &amp;bad_cut_information, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>checkBoxForBadCutPointsInDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>adb2a15e2f19b832183690afe9a54b14b</anchor>
      <arglist>(const int dir, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findBadCutPoints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>ad0965b8562c6012c0912663641c39341</anchor>
      <arglist>(tbox::Array&lt; tbox::Array&lt; bool &gt; &gt; &amp;bad_cuts, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findBadCutPointsForDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a0a7e898d8449e016b766025efb3444f3</anchor>
      <arglist>(const int dir, tbox::Array&lt; bool &gt; &amp;bad_cuts, const Box &amp;box, const BoxContainer &amp;physical_boxes, const IntVector &amp;bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixBadCutPoints</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a77a0dd2b1534713a1b23b1a2d0792ab2</anchor>
      <arglist>(tbox::Array&lt; tbox::List&lt; int &gt; &gt; &amp;cuts, const tbox::Array&lt; tbox::Array&lt; bool &gt; &gt; &amp;bad_cuts, const Box &amp;box, const IntVector &amp;min_size, const IntVector &amp;cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>fixBadCutPointsForDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a53d1387f2fe6cf773b28f244b59ac9b8</anchor>
      <arglist>(const int dir, tbox::List&lt; int &gt; &amp;cuts, const tbox::Array&lt; bool &gt; &amp;bad_cuts, const Box &amp;box, const int min_size, const int cut_factor)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findBadCutPointsForBorderAndDirection</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a41cbf99c53222d4acdd9081bcaacc1e7</anchor>
      <arglist>(const int id, tbox::Array&lt; bool &gt; &amp;bad_cuts, const Box &amp;box, const Box &amp;border, const int bad_interval)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>makeNonOverlappingBoxContainers</name>
      <anchorfile>structSAMRAI_1_1hier_1_1BoxUtilities.html</anchorfile>
      <anchor>a78370663ccaddad2015c9f367ff07565</anchor>
      <arglist>(tbox::Array&lt; BoxContainer &gt; &amp;box_list_array, const BoxContainer &amp;boxes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::CoarseFineBoundary</name>
    <filename>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a64ec8f8a525a851feb62368c3a31076d</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a499a50729ada5aca3863fad043933f8e</anchor>
      <arglist>(const CoarseFineBoundary &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a370e0175daecdf9aca947d162a36ac0e</anchor>
      <arglist>(const PatchHierarchy &amp;hierarchy, int level_num, const IntVector &amp;max_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>aa09eb2c8dded2beb5cb1b0f8d2d34029</anchor>
      <arglist>(const PatchLevel &amp;level, const Connector &amp;mapped_box_level_to_domain, const Connector &amp;mapped_box_level_to_self, const IntVector &amp;max_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CoarseFineBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a1e3bd6c01c6b0b93aecd4845b63f4afb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a70a60c3ede90030bb5e1615d410ed553</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a00e2c57b202a5ee5cffa408971a81af7</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>CoarseFineBoundary &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a4c1672b462648c424044e015b720e3fa</anchor>
      <arglist>(const CoarseFineBoundary &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>af3af0a757276fe9e27da8e5c0fb35dcb</anchor>
      <arglist>(const GlobalId &amp;global_id, const int boundary_type, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getNodeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a4106be2e7228749ee90c2267365914a2</anchor>
      <arglist>(const GlobalId &amp;global_id, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getEdgeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a5b7f9a550adb37b416778d0bb39ebacb</anchor>
      <arglist>(const hier::GlobalId &amp;global_id, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getFaceBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarseFineBoundary.html</anchorfile>
      <anchor>a4cf3dad9219c0fb7378e88fa4689c379</anchor>
      <arglist>(const hier::GlobalId &amp;global_id, const BlockId &amp;block_id=BlockId::zero()) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::CoarsenOperator</name>
    <filename>classSAMRAI_1_1hier_1_1CoarsenOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a1d964414945df4d1c778e828a47edb3d</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>afaf4ab6d020adb2d0343908b1102e64d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>abb01d57710b93c1ae246efa754c84a19</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const =0</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getOperatorName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a53f52a83061c3eca069be812de1167a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>aca8b440be66765589dfdc4ba542e4c95</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a8fd7f9a82d37c150f913d60c824487f2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a701eb237286e30b002ba80bac8ead91c</anchor>
      <arglist>(Patch &amp;coarse, const Patch &amp;fine, const int dst_component, const int src_component, const Box &amp;coarse_box, const IntVector &amp;ratio) const =0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a06b75469ed626e0caac334fedb7c775a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>getMaxCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1CoarsenOperator.html</anchorfile>
      <anchor>a7c976752e30402bb09a37ba9aef0bfdb</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::ComponentSelector</name>
    <filename>classSAMRAI_1_1hier_1_1ComponentSelector.html</filename>
    <member kind="function">
      <type></type>
      <name>ComponentSelector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a5e9b1c9011ed4b9784e24515e5d85439</anchor>
      <arglist>(const bool flag=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComponentSelector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a39954d3da90e941e48d70a6eb624f56c</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComponentSelector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>ad6d495bcf687eacced3b982556dfd74a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a0aa9a783914d6fe88ef37010989f928b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a8818bd0f33832da33abf12f73d420edc</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>abd52a0f7d408ddb2b58d51fb20db0e68</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>accd9485f1cdab49defc2683a9317603d</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector</type>
      <name>operator|</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a3d071230687b3a3da00eda77d854fdad</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector</type>
      <name>operator&amp;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a391b4f1035ef979745dcbae9fe907c6e</anchor>
      <arglist>(const ComponentSelector &amp;flags) const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a3744b2bff58dab294e0544cfd4b7cccb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector &amp;</type>
      <name>operator|=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>afba24d1a435beb1725d9053162d7a020</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>ComponentSelector &amp;</type>
      <name>operator&amp;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a646ced656a4423d0d44121091c37fbe5</anchor>
      <arglist>(const ComponentSelector &amp;flags)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>ad72913a88ddb058969ffb1e9cbe8443a</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlag</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a4aae998e90f8fefdd0e9a3544d1f620e</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clrFlag</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>aa580e0f3691aaf795a9a4e567e16aec8</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllFlags</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a57e9541b08fde0522439541e699d06cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clrAllFlags</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a7b90ec715d1f5c65f5ca85e9105f60ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a019d5161aa0e804338f5bb09da82ffdb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>any</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a19d7603edddd234150d0ecb597cadfc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>none</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>ab6bbec44a5c89b2e332490a0a41f0f87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ComponentSelector.html</anchorfile>
      <anchor>a009dd578e42a15c124bd261f376c74b1</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Connector</name>
    <filename>classSAMRAI_1_1hier_1_1Connector.html</filename>
    <class kind="class">SAMRAI::hier::Connector::Outputter</class>
    <member kind="enumeration">
      <name>ConnectorType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPLETE_OVERLAP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987ea955a90d4efe1a0ecd016ea0bf9ab8189</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COMPLETE_OVERLAP_NO_PERIODIC</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987ea8f3f1e8e1fcacbee97e80e323164aea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INCOMPLETE_OVERLAP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987ead3db390004a7725f2ee5bdc70d99ce2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BASE_GENERATED</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987ea3b8fcbbd0b784a9398f867991f3c1972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MAPPING</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987ea51eb028c7d4a1a33f91f9f1ffa7a6c05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNKNOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a8d2520bb0b94ed2f80281db15745987ea3c2644d1fc187069dbbd8973fd880f4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxContainer</type>
      <name>NeighborSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ad7ed18665ba43e593547eaa62b2eb507</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::ConstIterator</type>
      <name>ConstNeighborhoodIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac1bcbc5b3a49ad135e56736c2711b457</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::Iterator</type>
      <name>NeighborhoodIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>acbc09313ed887ebaff6b5313d952b5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::ConstNeighborIterator</type>
      <name>ConstNeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0fc1129bae2aeb2b5446d05027a0a137</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BoxNeighborhoodCollection::NeighborIterator</type>
      <name>NeighborIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>af2b97ecb096ff2d3e61dc4f75a989825</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ade20cabc832a565910e65703fd80f1c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a2126ddea61a08d992bde2a6f077d03b8</anchor>
      <arglist>(const Connector &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aa6889f6d40351cf2674849a419b2de8d</anchor>
      <arglist>(const BoxLevel &amp;base_mapped_box_level, const BoxLevel &amp;head_mapped_box_level, const IntVector &amp;base_width, const BoxLevel::ParallelState parallel_state=BoxLevel::DISTRIBUTED)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a7b4e7ed128c4cc089674906559593634</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ab8c454be7e0e0a015fb91dedcfc6eec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0e29b737d9abf4432c82aa98e415faac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isFinalized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>afb9fd2fba1d0e5953d934613ccd9adf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a3733cd8f58c9f47215b548e077357b96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a4642d35184ddd80dcf42e4c6dd84e0e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a4b27cad6b71d88d3e13c72b3792775d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a9765f7f298c9c2aa29998a62e1f02984</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0700ae3baf3b86f78b0dd6888c5f06be</anchor>
      <arglist>(ConstNeighborhoodIterator &amp;nbrhd) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ab3dee534fbe5ffb264eee3d7c21850d1</anchor>
      <arglist>(NeighborhoodIterator &amp;nbrhd)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a23c3c4aa19fcfa70a410339acf9e7e81</anchor>
      <arglist>(ConstNeighborhoodIterator &amp;nbrhd) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborIterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a3b02d94e53772568dae8e9845aed150d</anchor>
      <arglist>(NeighborhoodIterator &amp;nbrhd)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>findLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a1df0e21418c66eb8c6c353d2de5462f3</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>findLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>af7acadb84e4d2777e5bba9f4bf6fb85b</anchor>
      <arglist>(const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>ConstNeighborhoodIterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a9b015dc636912516e832451e8182a173</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>localNeighborhoodsEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a1a25594155276cd76d2ff7e08730c813</anchor>
      <arglist>(const Connector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>neighborhoodEqual</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a87621715ea8a8d700599ca07bfc14acd</anchor>
      <arglist>(const BoxId &amp;box_id, const Connector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasNeighborSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0fe63dda4e4c4c94251c4efe6b347a14</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasLocalNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0534110f167028d490c94b18f3b45706</anchor>
      <arglist>(const BoxId &amp;box_id, const Box &amp;neighbor) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighborBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>adb76e8b41c94423a04ced94687d31801</anchor>
      <arglist>(const BoxId &amp;box_id, BoxContainer &amp;nbr_boxes) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a5dba640371b17def66270aa5e0965991</anchor>
      <arglist>(BoxContainer &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a24b8aea20a39e823c95d0bf2193c4f99</anchor>
      <arglist>(std::map&lt; BlockId, BoxContainer &gt; &amp;neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0677e1f35447e6ad2b917b3acd7fb532</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numLocalEmptyNeighborhoods</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a01198aeecaa05c742a73080e36a17389</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a62f142d407785559465ae94e2aea3e3f</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a4e48c8cad1020bf5dcd178fb50670480</anchor>
      <arglist>(ConstNeighborhoodIterator &amp;base_boxes_itr, std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalizeContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ab22068ef25438187c4b07e1af0f197f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ae859b1425fdf80b51e3bc31a3cbb0003</anchor>
      <arglist>(const BoxLevel &amp;new_base, bool finalize_context=false)</arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a49b75a887cc087ac3b17b0d11881d94e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac97940662e7d9432cb22f9e83337bb0b</anchor>
      <arglist>(const BoxLevel &amp;new_head, bool finalize_context=false)</arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aef0d52fe0dfb8301eaed8505d6efb60d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatio</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a32aefa33645a1d2f87aaa162fb88db76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ratioIsExact</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a6ae8e46dacad8ce678e224d34a577602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getHeadCoarserFlag</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a6e27c8f5bc7cdf5a310ffa67e697aab7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a77e92a3bd9de0de6311af0535c4b32a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeToLocalTranspose</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a268b647a0f825550bc79c16cdc8ad5dc</anchor>
      <arglist>(const Connector &amp;connector)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a02123b49c62b6098f3d94d3180e46408</anchor>
      <arglist>(const Connector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a3b4625145b580221b21e1b67b3164f15</anchor>
      <arglist>(const Connector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a29ba8c8f17d127e953de8f1dc818c0e9</anchor>
      <arglist>(const Connector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ab9dbd4a07f274a5409fc9f42596a345d</anchor>
      <arglist>(const BoxLevel::ParallelState parallel_state)</arglist>
    </member>
    <member kind="function">
      <type>BoxLevel::ParallelState</type>
      <name>getParallelState</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ada0f4008bd5daffd603b3c135a440a4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::SAMRAI_MPI &amp;</type>
      <name>getMPI</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a6326cb15ea504ada4a1ef8fd294157a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a7f1e9f9514bdf70ff676b1a4bf849e78</anchor>
      <arglist>(const IntVector &amp;new_width, bool finalize_context=false)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getConnectorWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aca06d4bc5188005a7546e29f3c3db8cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shrinkWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a848a92ae72a3d35f5369296329a541bf</anchor>
      <arglist>(const IntVector &amp;new_width)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnectorType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a5203652e5f02b5389067672f04d59620</anchor>
      <arglist>(ConnectorType connector_type)</arglist>
    </member>
    <member kind="function">
      <type>ConnectorType</type>
      <name>getConnectorType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a683b706c059a3a3dc888f4d7cb93e3cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfNeighborSets</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>acf412b90fea96db84bfee0f007dba562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aaeea4aa3d4edee2bec8fa2cf94aadbd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfNeighborSets</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>afbe980ac5000ab82ca10a00fee3618be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a763fb44539271c697266f905cfa3d0bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheGlobalReducedData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ae633a448cb228b9d4580acb795e963fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putNeighborhoodsToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a98833592d829e56320fa90a285ba444c</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighborhoodsFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac36aae721790e15066e23c1229f6cec7</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNeighborhoodsToErrorStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a7f9abad0ff13c8ef21ea6674ca522397</anchor>
      <arglist>(const std::string &amp;border) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeNeighborhoodToErrorStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a0a2d17cb97bcd556795ed3d7b3c4ad70</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a910651b00c4086d362d435f01275176f</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a36f9149a2c5335686b4f7431f27a35fa</anchor>
      <arglist>(const BoxContainer &amp;neighbors, const BoxId &amp;base_box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a5f465c464ba3c220cab8fc43ce76d992</anchor>
      <arglist>(const Box &amp;neighbor, const BoxId &amp;mapped_box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac817a5bff6ada9ec929d429debba0890</anchor>
      <arglist>(const Box &amp;neighbor, const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertLocalNeighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a7bd489cbb7541f0d0e917dd9948360d3</anchor>
      <arglist>(const Box &amp;neighbor, NeighborhoodIterator &amp;base_box_itr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseLocalNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aba4c5636ac0415f4eacd648514e31a82</anchor>
      <arglist>(const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicRelationships</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aa34973973b4d43f6ec68b3ec9c390829</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>afea9f62adf45fdf3f2844512a499dc4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPeriodicLocalNeighborhoodBaseBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac7a86243c80d8e4bc6f48f45e65f40e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodIterator</type>
      <name>makeEmptyLocalNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a58fe7ca093acbe8a59a61abb171b726c</anchor>
      <arglist>(const BoxId &amp;box_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>eraseEmptyNeighborSets</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a01ee57dbac162e2d3d5cb90ba6e80295</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmptyNeighborhood</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aa5e4d9b4d70a333879c713dd3027aaaa</anchor>
      <arglist>(const BoxId &amp;box_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a12a53c57452bae3e4fe61993ab22fb1a</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>aef247259b6731cfd3411490ce2538a39</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growLocalNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac7106593cbe9399f1e19bcc69a758c43</anchor>
      <arglist>(const IntVector &amp;growth)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeRatioInfo</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a9315a53ec231280edde0141e4cf442a2</anchor>
      <arglist>(const IntVector &amp;baseRefinementRatio, const IntVector &amp;headRefinementRatio, IntVector &amp;ratio, bool &amp;head_coarser, bool &amp;ratio_is_exact)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ac007e10bd449a80cf868bfb117bbc0fe</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border, int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransposeOf</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ade5f6cee7c70c56c0b4860079181b0fe</anchor>
      <arglist>(const Connector &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>checkConsistencyWithBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>ab94bcf20255bc52f6ff96c2bc9fcd999</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertConsistencyWithBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a4aa6250f6287d628694dd0a4fb889366</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>checkConsistencyWithHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a4a560f2bee9958d4d1280591a4130d08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertConsistencyWithHead</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a1a237ea02d188e3a44bee0cd2fee95d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>checkTransposeCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>affa14bd1cb2d11467cc50632ad50fd2f</anchor>
      <arglist>(const Connector &amp;transpose, const bool ignore_periodic_relationships=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertTransposeCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a79869f9decf981ad83d20ebc65aacda8</anchor>
      <arglist>(const Connector &amp;transpose, const bool ignore_periodic_relationships=false) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>convertHeadWidthToBase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a1b0afe25e97bcb99c1dca3e19428185e</anchor>
      <arglist>(const IntVector &amp;base_refinement_ratio, const IntVector &amp;head_refinement_ratio, const IntVector &amp;head_gcw)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNeighborhoodDifferences</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector.html</anchorfile>
      <anchor>a75810110a9d9ff504f7162d788beaf71</anchor>
      <arglist>(Connector &amp;left_minus_right, const Connector &amp;left_connector, const Connector &amp;right_connector)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Connector::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1Connector_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Connector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector_1_1Outputter.html</anchorfile>
      <anchor>a1574f0490ae4a8ede8317663c105b4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Connector_1_1Outputter.html</anchorfile>
      <anchor>afe0b40cec06244091a28e181566588c3</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::ConnectorStatistics</name>
    <filename>classSAMRAI_1_1hier_1_1ConnectorStatistics.html</filename>
    <member kind="function">
      <type></type>
      <name>ConnectorStatistics</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ConnectorStatistics.html</anchorfile>
      <anchor>ae4a0418f9cb2365b313e51570a5e7cc8</anchor>
      <arglist>(const Connector &amp;connector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printNeighborStats</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ConnectorStatistics.html</anchorfile>
      <anchor>ab85efe6b224bcf04b1109fcc182ee5c6</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::PatchNumber</name>
    <filename>structSAMRAI_1_1hier_1_1PatchNumber.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchNumber.html</anchorfile>
      <anchor>ab87b300612299cf07d4cc2c7168f3b1b</anchor>
      <arglist>(int patch_num)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pn</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchNumber.html</anchorfile>
      <anchor>afcd866b5f694e1c2eeec05c490cf4dfb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::LevelNumber</name>
    <filename>structSAMRAI_1_1hier_1_1LevelNumber.html</filename>
    <member kind="function">
      <type></type>
      <name>LevelNumber</name>
      <anchorfile>structSAMRAI_1_1hier_1_1LevelNumber.html</anchorfile>
      <anchor>a591b13a34dae4794f3a433381fcd0c02</anchor>
      <arglist>(int level_num)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ln</name>
      <anchorfile>structSAMRAI_1_1hier_1_1LevelNumber.html</anchorfile>
      <anchor>a0a381917d5fe908de0215fcf8e507be7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::hier::PatchDataId</name>
    <filename>structSAMRAI_1_1hier_1_1PatchDataId.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchDataId</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchDataId.html</anchorfile>
      <anchor>a790b2a8a15fe70e5eb16c646054f3cca</anchor>
      <arglist>(int patch_data_id)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>pd</name>
      <anchorfile>structSAMRAI_1_1hier_1_1PatchDataId.html</anchorfile>
      <anchor>a43a6404260d1486b42612b991369389a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::GlobalId</name>
    <filename>classSAMRAI_1_1hier_1_1GlobalId.html</filename>
    <member kind="function">
      <type></type>
      <name>GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a4f237557b26d2fab2cffd73c76ad76c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>ad3bf0cbf27362177191c9dfa35e3aea9</anchor>
      <arglist>(const LocalId &amp;local_id, const int owner_rank)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>abe3b4ca8b7b4d054c92c4f8f6cfd26f0</anchor>
      <arglist>(const GlobalId &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>aaedcf0dcc47c073c93d5af7ef278f2b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a5aa144e96bd32f2b8b34e3571491f3ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getOwnerRank</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a93713c86a650ef6324cd2c3370f90d75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a23661db21685284c9a321cdf4e5c9934</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a421dfd980e5a13cee040f152a27c51d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a9d1d01a2e9f9bd1d86a00ba79c72ba20</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>aa55fc755c7996d2c01f764af867eb012</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a513fb3f313f8dd4e00ad05bc0c01bd43</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>af5620e80e588d49b27ccfd3b09dae3f5</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a8bce3645e32c2b7b03fb558adde81aeb</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a7138f84075244d7387ba829ef44d5234</anchor>
      <arglist>(const GlobalId &amp;r) const </arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GlobalId.html</anchorfile>
      <anchor>a501ba6bb4b58d737273ebadbdf3f94a3</anchor>
      <arglist>(std::ostream &amp;co, const GlobalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::GridGeometry</name>
    <filename>classSAMRAI_1_1hier_1_1GridGeometry.html</filename>
    <base virtualness="virtual">SAMRAI::tbox::Serializable</base>
    <class kind="class">SAMRAI::hier::GridGeometry::Neighbor</class>
    <member kind="typedef">
      <type>PatchGeometry::TwoDimBool</type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac7d8f78a2fbc337c8737da2e9b550596</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ab3475be00b932c51962216c5979e7c9a</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; TransferOperatorRegistry &gt; op_reg, tbox::Pointer&lt; tbox::Database &gt; input_db, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac85c2e6452fdbfd985831b916ae24f91</anchor>
      <arglist>(const std::string &amp;object_name, const BoxContainer &amp;domain, tbox::Pointer&lt; TransferOperatorRegistry &gt; op_reg, bool register_for_restart=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a616f9370895b318549d8bdc1f09169b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a4a2c0ea6fba285b9615ac37a1c521fa1</anchor>
      <arglist>(BoxContainer &amp;domain, const IntVector &amp;ratio_to_level_zero, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomainWithPeriodicImages</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a0dcab74de2f27e8c77c3a46ac71863dd</anchor>
      <arglist>(BoxContainer &amp;domain, const IntVector &amp;ratio_to_level_zero, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>af1d4c1ae3ab4a29880bc958fa17f79cb</anchor>
      <arglist>(BoxLevel &amp;box_level, const IntVector &amp;ratio_to_level_zero, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a1e89f4e5ce73245ed85dc7603ef13ebb</anchor>
      <arglist>(BoxContainer &amp;domain_mapped_boxes, const IntVector &amp;ratio_to_level_zero) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a487e7f7b05be8fec88be12f16eaa443f</anchor>
      <arglist>(BoxLevel &amp;box_level, const IntVector &amp;ratio_to_level_zero) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>acbfe88dc7839dc18c5060cf3bb765f20</anchor>
      <arglist>(const BoxContainer &amp;domain, const int number_blocks)</arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getPhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>af89c52f1e13530261e5b8eb1952c842e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::MultiblockBoxTree &amp;</type>
      <name>getDomainSearchTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac7b27ac14279d8072a875e996ae87644</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::MultiblockBoxTree &amp;</type>
      <name>getPeriodicDomainSearchTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a47326b87ce5244ea09f5745a65de2caa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDomainIsSingleBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>affac1e055c4ce112f1f0fa2e6a96e44c</anchor>
      <arglist>(const hier::BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializePeriodicShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac3c75e24640e9c0cb6bdcfe96acd8ed0</anchor>
      <arglist>(const IntVector &amp;directions)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getPeriodicShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>af138052d5d9b88cf4e8bdf5514f63934</anchor>
      <arglist>(const IntVector &amp;ratio_to_level_zero) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberBlocks</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a30fdef23af9c663c132e1dd7b311bb7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getMaxTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a28e056e0db8dce1a88abf3191c9a2c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>makeRefinedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a8cdfacc2a39f456fbd851cbf0962265a</anchor>
      <arglist>(const std::string &amp;fine_geom_name, const IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>makeCoarsenedGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ab38eae44a3341c00b5a81a4121a3c73f</anchor>
      <arglist>(const std::string &amp;coarse_geom_name, const IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGeometryDataOnPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a71459dd0a06c2d7914c6f6198f49e946</anchor>
      <arglist>(Patch &amp;patch, const IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBoundaryBoxesOnLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ae15777a6e4dc940d762e3c4203ac27f1</anchor>
      <arglist>(std::map&lt; BoxId, PatchBoundaries &gt; &amp;boundaries, const PatchLevel &amp;level, const IntVector &amp;periodic_shift, const IntVector &amp;ghost_width, const tbox::Array&lt; BoxContainer &gt; &amp;domain, bool do_all_patches=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoundaryBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ae96e7af21978e52731b28f3e967cc902</anchor>
      <arglist>(PatchBoundaries &amp;patch_boundaries, const Box &amp;box, const BoxContainer &amp;domain_boxes, const IntVector &amp;ghosts, const IntVector &amp;periodic_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustMultiblockPatchLevelBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>aeb57e9c861b8e668304d69d3eaa56f3c</anchor>
      <arglist>(PatchLevel &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a0344ccb9e594f040be452ce077e29d2d</anchor>
      <arglist>(tbox::Pointer&lt; CoarsenOperator &gt; coarsen_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>af243b8bc0121296dbcd33a9244cac9ca</anchor>
      <arglist>(tbox::Pointer&lt; RefineOperator &gt; refine_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a8f19fca54fb0379dcf527e7c71101008</anchor>
      <arglist>(tbox::Pointer&lt; TimeInterpolateOperator &gt; time_op)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; CoarsenOperator &gt;</type>
      <name>lookupCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>afe66b441d28699ac3730a4b9caefed5d</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; RefineOperator &gt;</type>
      <name>lookupRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a28a132465b507c89bc90064139969197</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; TimeInterpolateOperator &gt;</type>
      <name>lookupTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a7bab819136bfbb4d1f19ebc7b30295c5</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name=&quot;STD_LINEAR_TIME_INTERPOLATE&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a324226b12f780fa4f863f967803a75ec</anchor>
      <arglist>(const IntVector &amp;min_value)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a4ed423d1031d438e3606d0c6885effd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac9fefb6d1856ed0dc3ff31f4198f1fef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a576736de1c94062b654afadc0129f291</anchor>
      <arglist>(const BlockId &amp;block_a, const BlockId &amp;block_b, const Transformation::RotationIdentifier rotation_b_to_a, const IntVector &amp;shift_b_to_a, const int neighbor_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getDomainOutsideBlock</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ab968fc3138e858bcbb0dc0c68a0c68b8</anchor>
      <arglist>(BoxContainer &amp;domain_outside_block, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfBlockSingularities</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a394f7c62f8d29c2f4b2a2e9742d7c57d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getSingularityBoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ab7520c91e61404b3a634aa7e10bef400</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>getSingularityIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac1bf63639acaf3fe7bc7ab73855586b8</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reducedConnectivityExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ad4a4528182543d04c85c91402db3a65d</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transformBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ac20030df77110ead0a88dc6530ab539a</anchor>
      <arglist>(Box &amp;box, const IntVector &amp;ratio, const BlockId &amp;output_block, const BlockId &amp;input_block) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transformBoxContainer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>af9bee2b0eaf21fe3a2b1b36ebe326436</anchor>
      <arglist>(BoxContainer &amp;boxes, const IntVector &amp;ratio, const BlockId &amp;output_block, const BlockId &amp;input_block) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getTransformedBlock</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ace78ca04a88f53fa4d40edf87822ae94</anchor>
      <arglist>(BoxContainer &amp;block_boxes, const BlockId &amp;base_block, const BlockId &amp;transformed_block)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::List&lt; Neighbor &gt; &amp;</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a8b87cc3f1ee1a672b70bcaadec9a3cc6</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ae29a71bacc5cf7ded4084d39e1566ca9</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a97e4e9899cd5a93d9791747579f2e7a9</anchor>
      <arglist>(const BlockId &amp;block_a, const BlockId &amp;block_b) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>areSingularityNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a698eb732d029d8aace8ef3c0f575260a</anchor>
      <arglist>(const BlockId &amp;block_a, const BlockId &amp;block_b) const </arglist>
    </member>
    <member kind="function">
      <type>Transformation::RotationIdentifier</type>
      <name>getRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>abcdf1d27b5c478864b6b3109f64905b2</anchor>
      <arglist>(const BlockId &amp;dst, const BlockId &amp;src) const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getOffset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>aa0933755dbecb86870ade4ca25f62456</anchor>
      <arglist>(const BlockId &amp;dst, const BlockId &amp;src) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasEnhancedConnectivity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a7b4664c47c0b1ce88744eeaccc48826c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a65d5f450a5448ea51195f26558dc9517</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a64989d8c8d5dcdce714d07e25ccf398e</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findPatchesTouchingBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a03b725e59f9626f97a9c92375aabbdef</anchor>
      <arglist>(std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_regular_boundary, std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_periodic_boundary, const PatchLevel &amp;level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBoxTouchingBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a8cedc101ff6ce0ca912fec9ec5c58c10</anchor>
      <arglist>(TwoDimBool &amp;touches_regular_bdry, TwoDimBool &amp;touches_periodic_bdry, const Box &amp;box, const hier::IntVector &amp;refinement_ratio, const MultiblockBoxTree &amp;refined_periodic_domain_tree) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGeometryOnPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a3e83873934db0eebff99cc235a8a1902</anchor>
      <arglist>(PatchLevel &amp;level, const IntVector &amp;ratio_to_level_zero, std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_regular_bdry, std::map&lt; BoxId, TwoDimBool &gt; &amp;touches_periodic_bdry, bool defer_boundary_box_creation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a7dca8af52868bf252a09e5b7d1b84e0a</anchor>
      <arglist>(PatchLevel &amp;level)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>ad818325a512457d8c407fa62a673bc34</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; TransferOperatorRegistry &gt; op_reg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>readBlockDataFromInput</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry.html</anchorfile>
      <anchor>a1e19468963a45ed7005d87833a45b05e</anchor>
      <arglist>(const tbox::Pointer&lt; tbox::Database &gt; &amp;input_db)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::GridGeometry::Neighbor</name>
    <filename>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</filename>
    <member kind="function">
      <type></type>
      <name>Neighbor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>aaface5fe569b87a3391b6b6576281061</anchor>
      <arglist>(const BlockId &amp;block_id, const BoxContainer &amp;domain, const Transformation &amp;transformation, const bool is_singularity)</arglist>
    </member>
    <member kind="function">
      <type>const BlockId &amp;</type>
      <name>getBlockId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>aa5f16445f6a5f375c24237e0e980913f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getTransformedDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>a65f92b9bb4b39401f64628564b6e2c19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>a81bcc28ea38aa514a8f022dc0f20feac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Transformation::RotationIdentifier</type>
      <name>getRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>ab6447ebe60aa5713a9f1eae9c7fc3dff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>ae5d1996076475381aabb783cc7902c94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSingularity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1GridGeometry_1_1Neighbor.html</anchorfile>
      <anchor>a876a4ae82cf4c57f954e75c89737404c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Index</name>
    <filename>classSAMRAI_1_1hier_1_1Index.html</filename>
    <base>SAMRAI::hier::IntVector</base>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a4402f0e021dc02a1a97556ea555e98b0</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a61fcde57c2262c0edccb3e6afe6c68b5</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a0e2892600bb6100497c8587a723c25fb</anchor>
      <arglist>(const int i, const int j)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a1035f55d2e35b07563dfffb40b6baa3d</anchor>
      <arglist>(const int i, const int j, const int k)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a3b7c85540b71b1e13efc71e4d6b25be4</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a31e35a1d75b4b3d9ad9befea91b4d6a6</anchor>
      <arglist>(const Index &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a42ab21e5db9d7078032924465320f1a1</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>adddccd14b54e9897824de6bb377e2283</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int array[])</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a45ed1bcb75f444eebad0ea4ef1298fc4</anchor>
      <arglist>(const Index &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>aa7deef47127fbd46fb08578725f9f8a3</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Index</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a5b0b5b2f75e29bbac1da17a9e45941ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a8bb550d2bac3fb6b338111a23d945043</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a58603568606ecfed5943b193c226a41a</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ac6160f503ffba48530bfb718dc09f404</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>adc894b9847b0239dfcab11580941192b</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ac7cf4e92d809f849e0caede85d6d5907</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ad76ec89edcc1e73de8b3af6e66dfa78a</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ac1eda538730bfdbe5bb0d2681f60f360</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ac50caecb3c72927ee67580c3ecc37dae</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a9358d2c44ec1d4d59f13af1f2809f255</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>acf4493f8e5f23102f062f03d941c6d3d</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>aa38bed3937b060e514c0db8d0040eb58</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ae88c39054d4f49c24bc75f46e3864e80</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a3e40417a7e3553af0765f1a0839feded</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a7cf5336f344864820ad3e3e22d79760f</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a0a0144cefed2ba97d1ff4c9f8e0d65c2</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>Index</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>ab95ae6f5e95ec6e0e7aba537ef35f1d8</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Index &amp;</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a0a63233d2c5b846c82741ea649292419</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getZeroIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a779367ce589a05f53291919ec41fb33c</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getOneIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a2c78944d079b91e836ce0a803cb0f2bf</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getMinIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a2415c8728d3bb962255c0d91ffcd376f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Index &amp;</type>
      <name>getMaxIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a5840e1aa9867b5365c9d3aedc8bb96d5</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Index</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a0795a744fbb09966bd6acbc30d8e6696</anchor>
      <arglist>(const Index &amp;index, const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; Index &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Index.html</anchorfile>
      <anchor>a41e03c36ff2236a6010944a5717f558b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::IntVector</name>
    <filename>classSAMRAI_1_1hier_1_1IntVector.html</filename>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a6d25c58d7ede0ae6acfb1a02720bbf94</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a27a40097dff3dd6b95f1f25bb03d4ec2</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int i)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ae179dd490390aaabe02c9214decad541</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>afd530eadd1c95ae0cd187e62cfef22ba</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int array[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ae71b20b02246e6cf3a32e0d9d19a0d4f</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>aba620deee0e2f22afaba03687252a165</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a78bf7d3f1a637caec786a7e29da50921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>afbd57acdf9a0e26c6d876c3936e0f9bb</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a742cd1c587dff3f103c0b99fc3994574</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a7c44c8d462ca0e72df1a790edd67c81b</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a8548e0fca6d0daac255176a6cd001d67</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>aad8e2c2c9f997aaeb1e0f800e5f20bd9</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a66776f280a66c2a4379d8e4352abf2d8</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>aa28dc5368a34050b73dd2a43ac399e00</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a2e8b9d6a543d32980e8b0b96e32eff6e</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>abccaf55d4209b608e40083e52575967f</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a01abb42056205a0b252e9fcf1825dd8e</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>abc34239db8bc68ff12fe41a6f7f622a0</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ada362581cc1e9286c640139144708cfc</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>afdab1f99a5fcaea50b61ac056b8ae378</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a5f9fc47cd428c0843d1a9cfde4bb08b8</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a1c1ed39da6d8d0f1b680359faa96a4ba</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a0587491614fc2255b18381741e8564b5</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a32c0f1cd541b147e195a4dd888f9c448</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ceilingDivide</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ab012dd49a96eb3b779bfb1d24640f67e</anchor>
      <arglist>(const IntVector &amp;denominator)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>af05ce0d146eecd4bf95ece7ad96806b7</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector &amp;</type>
      <name>operator/=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a890fcd127b0d6545f3782138650e024a</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>aecc16a59d450b06ecf11c70a74c71198</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a282eca70c7ee4e3c7d11ddc711db869c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a219bef174e2a2872753f2c21741598c5</anchor>
      <arglist>(int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ac14c95936e9feb50fac6c81bedf04e6f</anchor>
      <arglist>(int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a8a8a4ed9290e5664991d38dcd9cb145e</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ac263ad362a4bf2d0df16914f89aefb7b</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a3f627e5eca7f71fa1189965a1ee9faa2</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a2352b7976bcc9c9030ff6f4657ee92f4</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>af214e34f229266b969379d1054d24873</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>abcd2c493746bf9d8e64b5da90925420b</anchor>
      <arglist>(const IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a458acdb6e9c86769d71b3be66afa3352</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a13ac5cc5f8429c8664146322b13e363d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a22107e5c8dc6cefe134eab03dd44d45d</anchor>
      <arglist>(const IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a129ac7a5d9b02022e6d2d29d1b7548ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProduct</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ac93028c9d9d75ea89add0b3139684d4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a6fcfa2b27444463b96a8795bacce98c9</anchor>
      <arglist>(tbox::Database &amp;database, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>abd95e17452b03fb8f7206e6c4107a814</anchor>
      <arglist>(tbox::Database &amp;database, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a2f1a9289a54265d3169dd359e267fbae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sortIntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a71e6167eee1a6d710debd6e08a7c60e4</anchor>
      <arglist>(const hier::IntVector &amp;values)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>ceilingDivide</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a377431adedbe4274736113ddac957523</anchor>
      <arglist>(const IntVector &amp;numerator, const IntVector &amp;denominator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a814755e775a9bb80ba280347f8b6860b</anchor>
      <arglist>(const IntVector &amp;a, const IntVector &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>aa133e8bf2e891d86ff8ce53efb05c8fd</anchor>
      <arglist>(const IntVector &amp;a, const IntVector &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const IntVector &amp;</type>
      <name>getZero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a8c3ca6219f663cfb07f2a896e0f89420</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const IntVector &amp;</type>
      <name>getOne</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a5f7f4c1395604e848c93f0ae6ae8137e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>IntVector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a0cdbebb34d85d28a54431bc4a4ba1a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>std::vector&lt; IntVector &gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>ae7b4d5d481722f2aeb508038cf8728ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a280cc9786b3034e97db4ff1e02fe561c</anchor>
      <arglist>(std::istream &amp;s, IntVector &amp;rhs)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1IntVector.html</anchorfile>
      <anchor>a50ca8f264f13ad1906cdc9024fdf7222</anchor>
      <arglist>(std::ostream &amp;s, const IntVector &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::LocalId</name>
    <filename>classSAMRAI_1_1hier_1_1LocalId.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ade6977d5ca7614849e236aefe6bfc6bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a0f1497a081b5f36ea5de3c875b288ce1</anchor>
      <arglist>(const LocalId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ae8b786d6b6d91404ce56d7ab04f13468</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>aa77707a07b6af79783dd420f0ebd2a71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ab3e3df198810e93a0337c0480cef158e</anchor>
      <arglist>(const LocalId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a406663d4157e0d7cf859ce7adb3fd9ba</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>getValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a90ec67ab3d182f588ce130fd921416f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a7740dce7fb90f844ac114bb71947f19f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>aa4804afcb85de4a7f2643c9725359a42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a5fa9022ea5f0a25f7dd511011c9b0d65</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a5ffd7756f5604543f5b0d1014d339219</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>af4b1a5b49afbd431b31c246d104e8b46</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a77719143d8c4debe424b3a7c0c94332b</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ab62ea6a8041ee48d3fa9eae30c8a8891</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator%</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>af9ce693e47da79a98eeb18b6a37b1d08</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ad5dfd3c7feb13dcab7f746d7d65dc15d</anchor>
      <arglist>(const LocalId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a63d5834b64d2e58f447590253c6b82b4</anchor>
      <arglist>(const LocalId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a1b93ad5539b277cbf961a1aa52789b27</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a15f1eec33a08f40f1d0e830b72b46e10</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ae82d776f937b9f73246939ec85fbf16e</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator/</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a22dfa7e78d728bfdfb6ce169af55c352</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId</type>
      <name>operator%</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a423aa9a75d5e4c64b209cfee4219c04c</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>aabd1069151de0e120ffa8ec46772afed</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>LocalId &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a8eed6baf31461a2abb860524119989f5</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a62b367301b2d394a0c960a4b692fc137</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>acc67f66ce0a5571c61a5dd829283bf0f</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a29eb7f3cc6f60a8ad3ea2cdac484c7ac</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ad673d1fbc20c27df79c3976cd775fc56</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>aa767ff1f27c6d642ef1f564373cb8b2c</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a36c2d4b9d74b9a44ec5448674612d6b7</anchor>
      <arglist>(const LocalId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a6afa4f63d61321565ca4bd0a62438561</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ae0ed776ceb8aa38fa3674a83deb620ba</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a560a49c7a5b1cb2ec3e3dce81024d18a</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a03e19b86f38c0a60adcd30b211c526d7</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a695110b33c57c6c33ca9e9a435b5cc90</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>a4da1fbc8bbe920a08d076dbb04489bb3</anchor>
      <arglist>(const int &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const LocalId &amp;</type>
      <name>getZero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>aa345d3326302ee911a27d20cd6ba8059</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const LocalId &amp;</type>
      <name>getInvalidId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ae65fa59b892b0af119435406319aacc5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1LocalId.html</anchorfile>
      <anchor>ab33cf644c5befa9e56f3690efbce3368</anchor>
      <arglist>(std::ostream &amp;co, const LocalId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::MappingConnectorAlgorithm</name>
    <filename>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</filename>
    <base>SAMRAI::hier::BaseConnectorAlgorithm</base>
    <member kind="function">
      <type></type>
      <name>MappingConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>ab3ff8d6c8ee7809aee4ddae75ebfcfb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MappingConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>a570faea59fa8e4652d35f448dc502b2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPreconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>aad57b4f76b2d56c1d5b753e2392b4502</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPostconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>a77fffdbd32e453eb930e1ac9452d7899</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>a2309d5626baf9fcbf449dc1083dffa05</anchor>
      <arglist>(Connector &amp;anchor_to_mapped, Connector &amp;mapped_to_anchor, const Connector &amp;old_to_new, const Connector &amp;new_to_old, BoxLevel *mutable_new=NULL, BoxLevel *mutable_old=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>adf3d0f3820d61e3fc7db4045e137be5c</anchor>
      <arglist>(Connector &amp;anchor_to_mapped, Connector &amp;mapped_to_anchor, const Connector &amp;old_to_new, BoxLevel *mutable_new=NULL, BoxLevel *mutable_old=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>modify</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>a1ad4e3064d8c6e81392af25e56da34fc</anchor>
      <arglist>(Connector &amp;anchor_to_mapped, const Connector &amp;old_to_new, BoxLevel *mutable_new=NULL, BoxLevel *mutable_old=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>findMappingErrors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>ab213a85a18ea8e46469563667152e4e0</anchor>
      <arglist>(const Connector &amp;connector, char is_local_map= &apos;\0&apos;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertMappingValidity</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MappingConnectorAlgorithm.html</anchorfile>
      <anchor>aff407d609682bcd03cb4d8573743ba1d</anchor>
      <arglist>(const Connector &amp;connector, char is_local_map= &apos;\0&apos;) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::MultiblockBoxTree</name>
    <filename>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>ad8b595e3afaf22d15f12b0018e8a48b1</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const BoxContainer &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a3efd760d5b7e65188da2f3ae4351af2c</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const std::vector&lt; Box &gt; &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>ad4bcd2af842ddb9040720b4a38f82d96</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const std::map&lt; BlockId, BoxContainer &gt; &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a1468549f48fae880934c3170134e3a4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiblockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a848e1ec446975c4ef071797f14f04cf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a9b8858bc507272ed1706e1305ac4a6a0</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const BoxContainer &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>aa37d49fb5707c7b0f03463a7196803f2</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const std::map&lt; BlockId, BoxContainer &gt; &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>generateNonPeriodicTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a958af63c0fe853e393ca6e1316b27cf9</anchor>
      <arglist>(const GridGeometry &amp;grid_geometry, const BoxContainer &amp;boxes, size_t min_number=10)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasBoxInBlock</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a2b4a3efeefb2607f601fe9aa8dea0226</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const BoxTree &amp;</type>
      <name>getSingleBlockBoxTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a94c84cceb2f5e7ab3b73f53bc9b44e11</anchor>
      <arglist>(const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>af3cf294de4d2f5d1d67e78cdc4e416c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>abdd0cf0d06684a89f1912f4327eadcb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GridGeometry &amp;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>ad57e2e94a6b91c01b069c8e422ab422d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasOverlap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a45529c616cf52564cdb0ea8dd1ef986d</anchor>
      <arglist>(const Box &amp;box, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a488b9f5bb3241045d7845710a86bf15d</anchor>
      <arglist>(Connector &amp;overlap_connector, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>ab5ffd4390c44f94cb33c65ec0aca0274</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;overlap_boxes, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>aa98d99104f9d499b06a3cd45132eea8b</anchor>
      <arglist>(std::vector&lt; const Box * &gt; &amp;overlap_boxes, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a4a3b6c48bbeb98d61438903025f69010</anchor>
      <arglist>(BoxContainer &amp;overlap_boxes, const Box &amp;box, const IntVector &amp;refinement_ratio, bool include_singularity_block_neighbors=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a0f6dcf5ec798e6dd8b487dbf15e6f291</anchor>
      <arglist>(std::vector&lt; Box &gt; &amp;boxes) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; MultiblockBoxTree &gt;</type>
      <name>createRefinedTree</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockBoxTree.html</anchorfile>
      <anchor>a4a7eb912416cd60ac084f82664bb2ec7</anchor>
      <arglist>(const IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::MultiblockDataTranslator</name>
    <filename>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>a82bee6b74c24284571016eae83edcaf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>a55bdb9cb3938daa4cc3737a201f061d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>abd1860872310287bafa7a8ddac09cc80</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const Transformation::RotationIdentifier rotate)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1MultiblockDataTranslator.html</anchorfile>
      <anchor>ac5a2acbff4eadcd5e0fba1a8d3617c59</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const Transformation::RotationIdentifier rotate)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::NeighborhoodSet</name>
    <filename>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</filename>
    <class kind="class">SAMRAI::hier::NeighborhoodSet::Outputter</class>
    <member kind="typedef">
      <type>BoxContainer</type>
      <name>NeighborSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a47082bd46533276ce4333569b7d42543</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a4e8a296e284c315579b48ac17d4993da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a96b921f73969b460872380b4ee9e0e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a91741b12b69804e0ea4989c86146d515</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::key_type</type>
      <name>key_type</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a47bc59d5db4028a56a51b36f35a6318b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>adf1c9fc905c8e2136910026be9c4c88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; BoxId, NeighborSet &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ae63b5afda26f991fae484646501a52a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; iterator, iterator &gt;</type>
      <name>Range</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a29eddb4996724a96abea1788f2a06855</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; const_iterator, const_iterator &gt;</type>
      <name>ConstRange</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>aa1c885d4657aaf250cfb791e189e6d91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ad222e683d83cdd30ea57db345a4027c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ac635db547c47ac4a59cb77df024f1ebb</anchor>
      <arglist>(const NeighborhoodSet &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a7e1a8b32338242c174c8e717ae8d0c57</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Range</type>
      <name>findRanksRange</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>aa6129501b9b5996b505e1b48ac4fe8b1</anchor>
      <arglist>(int rank)</arglist>
    </member>
    <member kind="function">
      <type>ConstRange</type>
      <name>findRanksRange</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>af6d30264caf40a96b23f5fa416793c1f</anchor>
      <arglist>(int rank) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refineNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>af2910bc3a3e06c9c32be93d03f57987a</anchor>
      <arglist>(NeighborhoodSet &amp;output_neighborhood_set, const IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ad27ed8d20337c6a63b703a1944204aa3</anchor>
      <arglist>(NeighborhoodSet &amp;output_neighborhood_set, const IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>growNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a7c7f3adac45e85a2817aa3e8bff5214b</anchor>
      <arglist>(NeighborhoodSet &amp;output_neighborhood_set, const IntVector &amp;growth) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePeriodicNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a5d23fbe3f82df9ce1cfff98cf316322d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ade03996fa3f48291234f2de9f95189bc</anchor>
      <arglist>(NeighborSet &amp;all_neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ade5c4147c65ed4623e6b2fa687c62ae3</anchor>
      <arglist>(BoxContainer &amp;all_neighbors, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>af5bac3a25bfa27c3c7aa955762813305</anchor>
      <arglist>(std::map&lt; BlockId, BoxContainer &gt; &amp;all_neighbors) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwners</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a52f4f769da3443635cfdd756c73acaf9</anchor>
      <arglist>(std::set&lt; int &gt; &amp;owners) const </arglist>
    </member>
    <member kind="function">
      <type>Outputter</type>
      <name>format</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ab8c00d078765e1cee7277599ae9af683</anchor>
      <arglist>(const std::string &amp;border=std::string(), int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>af7912fe3e9fc92d7998e18f0c0d3c6db</anchor>
      <arglist>(std::ostream &amp;output_stream, const std::string &amp;left_border, int detail_depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a081594056ac901b72ee3dba15e2bbda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>aaa18127292f00a9179a4ff7deca2ee08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>aab6c1a08d0302f164dfeaff27a7c1064</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a444d6bfba539b2d38e9eee9b415d58bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a13d948aafcfc10acaf6d08c25a8041b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ac99b7ae4b8491c67c3181adca8093563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a1fdaa9c5e5a32778cd615c1a2bcb6b08</anchor>
      <arglist>(iterator i, const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>aa0c89217c1b59aacf5b6ebc44caebf25</anchor>
      <arglist>(iterator i)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a5b8fc8e87a740d73203c395cf6631303</anchor>
      <arglist>(const key_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a13fd8af0e64b96d7ef3a1bdecc838c73</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a79b8db9b1566547d3130e0c44ec8335f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a1772024f6a197dab7a5b2f2375f4337a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>aa784fd6a38425330bf3f177cdc63e665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NeighborSet &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a55415ee9c2476c1bec313409758d4666</anchor>
      <arglist>(const key_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a9f8bd133730c85471fb33ff027872058</anchor>
      <arglist>(const key_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a73a5f90b37a6a2c7aa69edcc7aaf6cdb</anchor>
      <arglist>(const key_type &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>NeighborhoodSet &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ab37bca14f9fb57ec26863c1124cf055c</anchor>
      <arglist>(const NeighborhoodSet &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a6dfe985973894d6d2b134f0fbe28033c</anchor>
      <arglist>(const NeighborhoodSet &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>ab05eb72f1776e4ac48cb3fcb9d7a34c2</anchor>
      <arglist>(const NeighborhoodSet &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>af8e3a8cc2a3d668dc41e07286aa61c02</anchor>
      <arglist>(NeighborhoodSet &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>a86b50e37b11b49ceec2b46ec17b61e27</anchor>
      <arglist>(tbox::Database &amp;database) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet.html</anchorfile>
      <anchor>af86f9eb0348fc803e3a2fafdb13234ed</anchor>
      <arglist>(tbox::Database &amp;database)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::NeighborhoodSet::Outputter</name>
    <filename>classSAMRAI_1_1hier_1_1NeighborhoodSet_1_1Outputter.html</filename>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>NeighborhoodSet</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet_1_1Outputter.html</anchorfile>
      <anchor>a177165be25b15221e9b18e3101fa9c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1NeighborhoodSet_1_1Outputter.html</anchorfile>
      <anchor>afe0b40cec06244091a28e181566588c3</anchor>
      <arglist>(std::ostream &amp;s, const Outputter &amp;f)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::OverlapConnectorAlgorithm</name>
    <filename>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</filename>
    <base>SAMRAI::hier::BaseConnectorAlgorithm</base>
    <member kind="function">
      <type></type>
      <name>OverlapConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a5035bbebfa166de6e1601a7b6e3907f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OverlapConnectorAlgorithm</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a50b389f621cf8086641063518662bbcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlaps</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>ae332c260d625389d3d7ce6140fbcf788</anchor>
      <arglist>(Connector &amp;connector, const bool ignore_self_overlap=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlaps</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a5f56d7303025dffaef086edf0185cf4f</anchor>
      <arglist>(Connector &amp;connector, const BoxLevel &amp;globalized_head, const bool ignore_self_overlap=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>ad89e88cd991305e89cc247d1cb9c0615</anchor>
      <arglist>(Connector::NeighborSet &amp;neighbors, const Connector &amp;connector, const BoxId &amp;mapped_box_id, const IntVector &amp;connector_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractNeighbors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a13a8abd6e4d5b6911bdf166cb0c5abec</anchor>
      <arglist>(Connector &amp;other, const Connector &amp;connector, const IntVector &amp;connector_width) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridgeWithNesting</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a36f9a1b95d0481440b4e3e6a0b47ae35</anchor>
      <arglist>(Connector &amp;west_to_east, Connector &amp;east_to_west, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west, const IntVector &amp;center_growth_to_nest_west, const IntVector &amp;center_growth_to_nest_east, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>aba9242be7ba1527ce47ea4fe89b48a9e</anchor>
      <arglist>(Connector &amp;west_to_east, Connector &amp;east_to_west, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a9b94c1d6cb200300932ae2d6d0fdbd8a</anchor>
      <arglist>(Connector &amp;west_to_east, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a88cdea100b05a06c35094f1d1f634b09</anchor>
      <arglist>(Connector &amp;west_to_east, Connector &amp;east_to_west, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a62002e55ddb736796f75faf1363aeb30</anchor>
      <arglist>(Connector &amp;west_to_east, const Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, const Connector &amp;center_to_west) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>bridge</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a6c1f4d3963f7f04460662340b4306dd0</anchor>
      <arglist>(Connector &amp;west_to_center, const Connector &amp;center_to_east, const Connector &amp;east_to_center, Connector &amp;center_to_west, const IntVector &amp;connector_width_limit) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPreconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a29f448936a23f8dd367ce65c371466a8</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSanityCheckMethodPostconditions</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a7088a2d599fd1d4c7efca3d078207e98</anchor>
      <arglist>(bool do_check)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>checkOverlapCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>a0b02ac3cab3c458913a70a2d55ac707c</anchor>
      <arglist>(const Connector &amp;connector, bool ignore_self_overlap=false, bool assert_completeness=true, bool ignore_periodic_images=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assertOverlapCorrectness</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>affbc9d6e16c0cf8515d71012afd275c0</anchor>
      <arglist>(const Connector &amp;connector, bool ignore_self_overlap=false, bool assert_completeness=true, bool ignore_periodic_images=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findOverlapErrors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1OverlapConnectorAlgorithm.html</anchorfile>
      <anchor>ae93ab6ff1829b5d3b8a3e9d95d40a318</anchor>
      <arglist>(const Connector &amp;connector, Connector &amp;missing, Connector &amp;extra, bool ignore_self_overlap=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Patch</name>
    <filename>classSAMRAI_1_1hier_1_1Patch.html</filename>
    <member kind="function">
      <type></type>
      <name>Patch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a796454cdb58e44e85d4b202e0a1f0dd6</anchor>
      <arglist>(const Box &amp;mapped_box, tbox::Pointer&lt; PatchDescriptor &gt; descriptor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Patch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>ac4b8a32925879431271fdd0cdda79170</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>ab7ab8fde86f2cac6aa78df0838364dfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const GlobalId &amp;</type>
      <name>getGlobalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a720b69961eb22770a86462221c00871f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocalId &amp;</type>
      <name>getLocalId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a9dbcbf63115c7b6e7aba67059abee14e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a2c88cce91b3cb2dc11e200669f679a95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchData &gt;</type>
      <name>getPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>ae64ab185aefe3b62657074f57a152c66</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchData &gt;</type>
      <name>getPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a92db6a6b570333fca6f63be6faf6a944</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; variable, const tbox::Pointer&lt; VariableContext &gt; context) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a04f5b2844e6c10419d374bde868c988e</anchor>
      <arglist>(const int id, tbox::Pointer&lt; PatchData &gt; data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkAllocated</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a9562f4eb302c3fb94201e65caa1c210e</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSizeOfPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>abd44945fc099a4f98e2c6bc598a90006</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getSizeOfPatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a5d12bf31eb041376c555feb17058dcbd</anchor>
      <arglist>(const ComponentSelector &amp;components) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>ab3fb646373684c9b03a8367745b6dde4</anchor>
      <arglist>(const int id, const double time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a6f7d26dd868193305dcdf7f0c8d260a8</anchor>
      <arglist>(const ComponentSelector &amp;components, const double time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a2849a79c0e87c9b60cd0d475c73d8b01</anchor>
      <arglist>(const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a06aba2db78c5191777fb78fefbe5c8e6</anchor>
      <arglist>(const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a68f91da07fa6252624f3c8f5e7b3444a</anchor>
      <arglist>(tbox::Pointer&lt; PatchGeometry &gt; geometry)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchGeometry &gt;</type>
      <name>getPatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a0a4473c8c9a7576b34648c2f955800b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>af0c6ed240674ea75015235fe482c37b6</anchor>
      <arglist>(const double timestamp, const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a85871573c66d85944fa3bfd266521e90</anchor>
      <arglist>(const double timestamp, const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>afffc7dca27c1a2560fbe9c8590750dfd</anchor>
      <arglist>(const double timestamp)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPatchLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a496bafab4807b316383bd1622a4ebeec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a1ae65d740541c0a02719c94a40b8b305</anchor>
      <arglist>(const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>af085f4e05b06accd8afc4f40a702f287</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchInHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a3fa471203ab388e7bc36623194981664</anchor>
      <arglist>(bool in_hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>ad95012368e8edf84d0708c354806b16c</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;component_selector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a81852592ad691c5283408c8a9289bb0f</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;patchdata_write_table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a4da217e46a2561b7e6e0cfca080041b1</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border=std::string(), int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>a5909fa7922b3977f77634d3d9df90453</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Patch.html</anchorfile>
      <anchor>add8238c08e840932ac6272004b60a840</anchor>
      <arglist>(std::ostream &amp;s, const Patch &amp;patch)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchBoundaries</name>
    <filename>classSAMRAI_1_1hier_1_1PatchBoundaries.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>afd44b5a44c62bc49d8663b6ef0a7b40b</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>ac9e43c8d35872a9ae79e1f312b880192</anchor>
      <arglist>(const PatchBoundaries &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const PatchBoundaries &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>a3daa5289015c796f1472ec863f7a7b59</anchor>
      <arglist>(const PatchBoundaries &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Array&lt; hier::BoundaryBox &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>aabf3ed8e61e03f601fa2a85433bb829e</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; hier::BoundaryBox &gt; &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>a5d046769390db68a8e36aa3fd1a89f55</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Array&lt; tbox::Array&lt; hier::BoundaryBox &gt; &gt;</type>
      <name>getArrays</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>a3d01748ca1e9ef14d131938dce03d85e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; tbox::Array&lt; hier::BoundaryBox &gt; &gt;</type>
      <name>getArrays</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchBoundaries.html</anchorfile>
      <anchor>a5b9fca061b2c6df250c4a9946c91ad2c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchData</name>
    <filename>classSAMRAI_1_1hier_1_1PatchData.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a4aa15158b0ac91fc75a06ce9ebd5314e</anchor>
      <arglist>(const Box &amp;domain, const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>ab961b008cc73f271e987ce35bcfeca03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a0545b6739c380b6a3b81310d4037eb26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getGhostBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>af0f28fa76ac5548de8c687771ce434bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGhostCellWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a25b3ffa9d9aabc43831c346929ec46ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a901be9107691a7cea0b41dd80dadcde0</anchor>
      <arglist>(const double timestamp)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a62451052d411021be6d0403d457e5d0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>ae11daa48e2aedf80b7c44bb838cdf9f2</anchor>
      <arglist>(const PatchData &amp;src)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a34a0b358ae9349e2bef0a8e3bf6b4278</anchor>
      <arglist>(PatchData &amp;dst) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a9db2a42da4a464f29d9e69c271bb7cd2</anchor>
      <arglist>(const PatchData &amp;src, const BoxOverlap &amp;overlap)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a828b790d3f3c553535b4502452ba2eba</anchor>
      <arglist>(PatchData &amp;dst, const BoxOverlap &amp;overlap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a6a8a6bea3564c490bac76fa7989e1d6a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a79afb3717c2858e760eb43d1c92e8aed</anchor>
      <arglist>(const BoxOverlap &amp;overlap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a9b73721b1f1f580e99626de07f91d950</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const BoxOverlap &amp;overlap) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>ada56faab0c403e0c8b2e95ad28515a00</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const BoxOverlap &amp;overlap)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>ac278d97ea5243b054f5e21331ae19d37</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a371cf6009f35be16df9a76c3400281ed</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>ad93de9ffc36d89f9f3e3ed5f9ade408a</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>abefbe20699388680cdb88a45253cedbf</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)=0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a7c893f6c64e4b69ff54a95bf00a4144e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setGhostBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchData.html</anchorfile>
      <anchor>a8005986fc5349f4e71931ada5a895a7d</anchor>
      <arglist>(const Box &amp;ghost_box)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchDataFactory</name>
    <filename>classSAMRAI_1_1hier_1_1PatchDataFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a1e19dbccb0c0e7b5092901f017ff3946</anchor>
      <arglist>(const IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a5e8c4b7ff3326e93c48d6df6ad543c11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a21e08c1e207d39cea476c0096778ce1c</anchor>
      <arglist>(const IntVector &amp;ghosts)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a560581dbc54d254ff239a7edd33c84cd</anchor>
      <arglist>(const Patch &amp;patch) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a1a11d69ab5bf3e1092657fe7c139f24c</anchor>
      <arglist>(const Box &amp;box) const =0</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getGhostCellWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>ac4ca66e5e757cac81d1ccb9afa494b07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a3fa8a830e87cf72c2f16238fd528632f</anchor>
      <arglist>(const Box &amp;box) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>aee151da4304c49ef6d719325c4ee9142</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a20b20d411c3d41a3450d1d76c01d132e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>aad58edd0505fe357b0d341a88376e9a1</anchor>
      <arglist>(const tbox::Pointer&lt; PatchDataFactory &gt; &amp;dst_pdf) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>aeeb39a1a0920c9ccb90b4605afdf600f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>a63dc758b6e22d72deb8bc93b1bdac0fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IntVector</type>
      <name>d_ghosts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDataFactory.html</anchorfile>
      <anchor>ad046f92e419a0f63d8410ed6c5614eb2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchDescriptor</name>
    <filename>classSAMRAI_1_1hier_1_1PatchDescriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>abd4b0f7c706f401e9c9ad626b4cb4f80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>af490ede82c72a22b4c54a104f6adc0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>definePatchDataComponent</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a60b8a9356dc49ab0d2ae4d51cb570646</anchor>
      <arglist>(const std::string &amp;name, tbox::Pointer&lt; PatchDataFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePatchDataComponent</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>ad22dc0ace921239115b9174053aa445b</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>getPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a085ab4e49e1cf903eb61b236df5bcfde</anchor>
      <arglist>(int id) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>getPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a2e8d9d8ec8df9f8528f1e0aa9874a551</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberRegisteredComponents</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>ada5d515a7a8f1cc7028ed9b166c0f51e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>mapNameToIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a49ed31c9711ca037f89496fe4aa7d433</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>mapIndexToName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a91abc009f772579a352acdd832f5bec6</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getMaxGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a345abba45fe959f1c4e65bb22b25e52c</anchor>
      <arglist>(const tbox::Dimension &amp;dim) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a8e8fd38183275ef2aae477391338af80</anchor>
      <arglist>(const IntVector &amp;min_value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchDescriptor.html</anchorfile>
      <anchor>a0c0ebe0aa8894936b466eaba0cd89575</anchor>
      <arglist>(std::ostream &amp;stream=tbox::plog) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchFactory</name>
    <filename>classSAMRAI_1_1hier_1_1PatchFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchFactory.html</anchorfile>
      <anchor>a72313644d660d4578bad4401389c3b26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchFactory.html</anchorfile>
      <anchor>aa5939f49b0b449c201d456c9045286de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; Patch &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchFactory.html</anchorfile>
      <anchor>a3e5eb196e5fc1275875209cd9d65f7c7</anchor>
      <arglist>(const Box &amp;mapped_box_level_mapped_box, tbox::Pointer&lt; PatchDescriptor &gt; descriptor) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchGeometry</name>
    <filename>classSAMRAI_1_1hier_1_1PatchGeometry.html</filename>
    <class kind="class">SAMRAI::hier::PatchGeometry::TwoDimBool</class>
    <member kind="function">
      <type></type>
      <name>PatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a6104c6e9b9e038be8aee911648908e5e</anchor>
      <arglist>(const IntVector &amp;ratio_to_level_zero, const TwoDimBool &amp;touches_regular_bdry, const TwoDimBool &amp;touches_periodic_bdry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>aee40d589e791a9336e4956fd19aa6bb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; tbox::Array&lt; BoundaryBox &gt; &gt;</type>
      <name>getPatchBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a883590a23db11eb7ec08228c146ea2fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBoxesOnPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>aeee12faa2b55478253442fdf1d3ff639</anchor>
      <arglist>(const tbox::Array&lt; tbox::Array&lt; BoundaryBox &gt; &gt; bdry)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatio</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>ae9a4a402ce57ca10ecaf553857c860ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>intersectsPhysicalBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>abc3b44d74afff66c3153f47a76ad5627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getNodeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a771be1a88cfac8229d0da275ffd63e5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getEdgeBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a48dba649eb22b2b7c6abdb959ccc13a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getFaceBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a5a2917a2eb9a0c19f313b72b00f7bbba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoundaryBox &gt; &amp;</type>
      <name>getCodimensionBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>ac83e029ead585b06f0519d3628a3c0ff</anchor>
      <arglist>(const int codim) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCodimensionBoundaries</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a8ef69d26d719ff0833a1eabb3e803dc4</anchor>
      <arglist>(const tbox::Array&lt; BoundaryBox &gt; &amp;bdry_boxes, const int codim)</arglist>
    </member>
    <member kind="function">
      <type>Box</type>
      <name>getBoundaryFillBox</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a5369be58f768ce83baf376251414f6d0</anchor>
      <arglist>(const BoundaryBox &amp;bbox, const Box &amp;patch_box, const IntVector &amp;gcw) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTouchesRegularBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>ae5157f1628c8a4b64f4403eb80f3b1bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTouchesPeriodicBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>aa0f4e0d0e16b79212b91675a99f20ffb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getTouchesRegularBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a6547c414ad33b4def0045d2ceebbe3c8</anchor>
      <arglist>(int axis, int upperlower) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry.html</anchorfile>
      <anchor>a4dd7671af58b920b3744218f8c416dc9</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchGeometry::TwoDimBool</name>
    <filename>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</filename>
    <member kind="function">
      <type></type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>a8f76c9f91d8c2bd52b17303694d27094</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDimBool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>a6360134b936409b91a222e36ef588e0d</anchor>
      <arglist>(const tbox::Dimension &amp;dim, bool v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAll</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>ac33f99ebae7b938cb1ab7a1e3e3ec717</anchor>
      <arglist>(bool v)</arglist>
    </member>
    <member kind="function">
      <type>bool &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>a3fc900cad9f74ba3d3692aee9ecce4b1</anchor>
      <arglist>(int dim, int side)</arglist>
    </member>
    <member kind="function">
      <type>const bool &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>a0aee799789d807135b2e3c8fa8fc8fa5</anchor>
      <arglist>(int dim, int side) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchGeometry_1_1TwoDimBool.html</anchorfile>
      <anchor>a05921e1d933e03dfd9132a19eaf85348</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchHierarchy</name>
    <filename>classSAMRAI_1_1hier_1_1PatchHierarchy.html</filename>
    <base>SAMRAI::tbox::Serializable</base>
    <class kind="class">SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</class>
    <member kind="function">
      <type></type>
      <name>PatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>adc52b40f71a58601e507610c47bd96ef</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; GridGeometry &gt; geometry, const tbox::Pointer&lt; tbox::Database &gt; &amp;database=tbox::Pointer&lt; tbox::Database &gt;(NULL), bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a27ec44e902d27364987a86c1b6d6a5ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>makeRefinedPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>af2a2a3f8946fdca9ce6e0fd01eecca84</anchor>
      <arglist>(const std::string &amp;fine_hierarchy_name, const hier::IntVector &amp;refine_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>makeCoarsenedPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>abbb506cd6c068252b390a0f4e66749e6</anchor>
      <arglist>(const std::string &amp;coarse_hierarchy_name, const hier::IntVector &amp;coarsen_ratio, bool register_for_restart) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeNewPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a80f1dc6b9c184f285f717c201816f6fb</anchor>
      <arglist>(const int level_number, const BoxLevel &amp;new_mapped_box_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removePatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ab6516f43f72ba37d77a81efc62239edf</anchor>
      <arglist>(const int level)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchLevel &gt;</type>
      <name>getPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ac38d7851a0434bbebd8c8ab3b240cb12</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>aaf25a0b4ad9973efe223d30eb0f5fac4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>levelExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>aef703ff0faebda9b843b876b99adc803</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finerLevelExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ad17929076c633555bd58a194551d2914</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>adc5f1db956964a69a634a108bd5d67bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFinestLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a7d5be0cd5b1196b00253b379e7e8e1e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>levelCanBeRefined</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a4ee2b73fabc6273f818f1e0fe3b68ea9</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; BoxLevel &gt; &amp;</type>
      <name>getBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a705b0c2c06c64a89a12604900b58e920</anchor>
      <arglist>(const int level) const </arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>getConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>af775005f777639c27bdd9588f809cac1</anchor>
      <arglist>(const int base_ln, const int head_ln) const </arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getDomainBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a28374918a1d1d96b1cd2796513ae4678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::SAMRAI_MPI &amp;</type>
      <name>getMPI</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>aafcba9aff7fc1690d5c6da80a4aeff81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a653587cc923db2ed4869941f82ae9cca</anchor>
      <arglist>(tbox::Pointer&lt; PatchFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchLevelFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a56cb4e6776fc87f0396a949dde0b98be</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a63416def984c65a68b8a63898dc736f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a8b7cb3b4fc16767492d39ca913970bff</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a500c5971957e2c167091bcef6aa6bfe3</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;patchdata_write_table)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>aab254385ab7519a0b9d334cbb34fb63a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>adf99346519d5b50cb4d2ac32951a234a</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;component_selector)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a6603e96c9b2e57fc3c4d20aaff7722b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a925812d58056958a2f83f9f4196679d3</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border=std::string(), int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ad561552e8a6de6d37b5da76828d1f012</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a8294c66d16127cced53c2324706fc262</anchor>
      <arglist>(int max_levels)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfLevels</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a76327728e531324af9c727c4626e148a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>afb2d2f852a94a88d9660f2478de40626</anchor>
      <arglist>(const IntVector &amp;ratio, int level)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>adebc05298b5847d26b6d00a24e8fa596</anchor>
      <arglist>(int level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSmallestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>aa7c7a9c4dca5eceea90831d221b55c1b</anchor>
      <arglist>(const IntVector &amp;size, int level)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getSmallestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>affb09d93f158cb2b9e935eea4cf0493d</anchor>
      <arglist>(int level) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLargestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a7cff4bd522ab1d5d9a74ce68899da457</anchor>
      <arglist>(const IntVector &amp;size, int level)</arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getLargestPatchSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a4197540c74bb7cb9cef87e8b74046d1c</anchor>
      <arglist>(int level) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProperNestingBuffer</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>adc44a96726e158e6e1756e805f3d6583</anchor>
      <arglist>(int ln) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowPatchesSmallerThanGhostWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ae883bad8495647ba0845fa088f72e0d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowPatchesSmallerThanMinimumSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>ace7008094484f5e020a9c213bfc87f01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a3685131ffdf41ca44cc4a3c26bb7856b</anchor>
      <arglist>(const ConnectorWidthRequestorStrategy &amp;cwrs)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getRequiredConnectorWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a3d42c870d68df0578988280ab8f92e86</anchor>
      <arglist>(int base_ln, int head_ln) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerAutoConnectorWidthRequestorStrategy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy.html</anchorfile>
      <anchor>a51de1f1dadbd7be42be216db3d99feb2</anchor>
      <arglist>(const ConnectorWidthRequestorStrategy &amp;cwrs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</name>
    <filename>classSAMRAI_1_1hier_1_1PatchHierarchy_1_1ConnectorWidthRequestorStrategy.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectorWidthRequestorStrategy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy_1_1ConnectorWidthRequestorStrategy.html</anchorfile>
      <anchor>a977f5a2d32b702bb6378327ba9cadb00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchHierarchy_1_1ConnectorWidthRequestorStrategy.html</anchorfile>
      <anchor>a3302dabb946bf118fdd8089a3289fd4e</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const PatchHierarchy &amp;patch_hierarchy) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchLevel</name>
    <filename>classSAMRAI_1_1hier_1_1PatchLevel.html</filename>
    <class kind="class">SAMRAI::hier::PatchLevel::Iterator</class>
    <member kind="function">
      <type></type>
      <name>PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ad0348ef26e985a1b3d4cf9ca290d1088</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a649b0b93d6e5b2f8cd8e35c429119392</anchor>
      <arglist>(const BoxLevel &amp;mapped_box_level, const tbox::Pointer&lt; GridGeometry &gt; grid_geometry, const tbox::Pointer&lt; PatchDescriptor &gt; descriptor, tbox::Pointer&lt; PatchFactory &gt; factory=tbox::Pointer&lt; PatchFactory &gt;(NULL), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a13aa626eaead4e81ff6ef10faf8f1832</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; level_database, tbox::Pointer&lt; GridGeometry &gt; grid_geometry, tbox::Pointer&lt; PatchDescriptor &gt; descriptor, tbox::Pointer&lt; PatchFactory &gt; factory, const ComponentSelector &amp;component_selector=*(new ComponentSelector(false)), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a1f3db6588e7601e9b782849a5687169f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>aacfc902d3b5242a6ff7b1b9804fa3720</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>abe688ee51c4631e570d6dbd8fb8fa39c</anchor>
      <arglist>(const int level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNextCoarserHierarchyLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a862027f5630a6c6b4286eda8681b35d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNextCoarserHierarchyLevelNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ae7c77a13ee2f6c3a59ed193f9bfb8355</anchor>
      <arglist>(const int level)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a15696d7eca1ff046320eb16d8fc8590b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLevelInHierarchy</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a7a0a56aa5397fac4b4a969e3ff020b57</anchor>
      <arglist>(bool in_hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>aa121dba7679141ffa96516bc22b3c5fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a260c45d8e11a17f8a3fd85aaba129e59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfPatches</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a6b16f38a989fcd86285bda2b098e4ebc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getLocalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>aa69fae1ace924e2984c24913228ce7d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalNumberOfCells</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a93da428e8b606f7c1c311d1a195824a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>getPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a41337e2381e2c3f95d93b978dbe7e111</anchor>
      <arglist>(const GlobalId &amp;gid, const BlockId &amp;bid) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; Patch &gt;</type>
      <name>getPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ab189387dc8a99e32bbc0d87c9bf73f82</anchor>
      <arglist>(const BoxId &amp;mbid) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>af27907e912ec67e4ffd117d9a7083aff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchFactory &gt;</type>
      <name>getPatchFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a198650a385a71bf6f68126657a58da0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; GridGeometry &gt;</type>
      <name>getGridGeometry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ad3b6de72d73548b6e701c807cabb411f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefinedPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>abd136866d1ea2259b0337d5619c2bad3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; coarse_level, const hier::IntVector &amp;refine_ratio, const tbox::Pointer&lt; hier::GridGeometry &gt; fine_grid_geometry=tbox::Pointer&lt; hier::GridGeometry &gt;(NULL), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsenedPatchLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a20e07eda08407b439f7233c802a5c400</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; fine_level, const hier::IntVector &amp;coarsen_ratio, const tbox::Pointer&lt; hier::GridGeometry &gt; coarse_grid_geom=tbox::Pointer&lt; hier::GridGeometry &gt;(NULL), bool defer_boundary_box_creation=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>af480f2ad7c577a0b85b662e50ec2474a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; BoxContainer &gt; &amp;</type>
      <name>getPhysicalDomainArray</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a591e87bbe8cfa3a41d6689f7e9c9d763</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getPhysicalDomain</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a643dd8d30439471a83229d595149af1a</anchor>
      <arglist>(const hier::BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const BoxContainer &amp;</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a41ac9c0b352158a773fc4f66d47ee2ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getBoxes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a595ccf2878b8d60be84a47cb949c514e</anchor>
      <arglist>(BoxContainer &amp;boxes, const BlockId &amp;block_id) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; BoxLevel &gt; &amp;</type>
      <name>getBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a41c6c2c48c57f7cff16e34a683f21ea2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const BoxLevel &amp;</type>
      <name>getGlobalizedBoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>af2736b79dc31ba98cb1bc6a40370f5a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ProcessorMapping &amp;</type>
      <name>getProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a37f9754b30512055a85d7bedec1ad615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatioToLevelZero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a296043197d6139921b4418a348b915ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a73be11cea7e90a0ffe753c77b93ef637</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRatioToCoarserLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ac2a9c5ede5483e163b36ecd00470465f</anchor>
      <arglist>(const IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMappingForPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a5b6885ae0bd0e9ad933f08824a035496</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>getBoxForPatch</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a82cb6876ed3f5be6b32c7ea45bfc8cd6</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>patchTouchesRegularBoundary</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a2f4fcd7360485fa48542ba9d5c05ed60</anchor>
      <arglist>(const BoxId &amp;mapped_box_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a2a9dcc974e64ea1b6a02fc941b1844a8</anchor>
      <arglist>(const int id, const double timestamp=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>abceb8ae55b8eba81ed2a49defab7e01d</anchor>
      <arglist>(const ComponentSelector &amp;components, const double timestamp=0.0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkAllocated</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a42f9cfddcce5f0d51e96b69c5bf90612</anchor>
      <arglist>(const int id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>aee31d7a77e6e2a6bee5d50609634c7f6</anchor>
      <arglist>(const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocatePatchData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>ab53cc7f611afd9f63b1b388e0fd4a649</anchor>
      <arglist>(const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>aa6d68ed41f2056da146b07be9633962c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a42e02ac07576c719462f81e0687631c3</anchor>
      <arglist>(const double timestamp, const int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>aa3fadbe94d3dcc0a38ff45b8ec41f445</anchor>
      <arglist>(const double timestamp, const ComponentSelector &amp;components)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTime</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a1cd7fb8d26f13d4c0a4531068fc6715a</anchor>
      <arglist>(const double timestamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a19351efc0e2262c8598417c9efedd698</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;component_selector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a8906a591ca08ac174566126252d435d8</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const ComponentSelector &amp;patchdata_write_table)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>recursivePrint</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel.html</anchorfile>
      <anchor>a86c4085b7da79b75270b6d203bf829f6</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;border=std::string(), int depth=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchLevel::Iterator</name>
    <filename>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>ae2e6232ca61bae9d419be3caa7127d8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a249f78a544d1fa8fef6d78e91c4dc26f</anchor>
      <arglist>(const Iterator &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>ad944a72a47dc0bce8e37081a1357c360</anchor>
      <arglist>(const PatchContainer::const_iterator &amp;raw_iter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>ac6f2aec6aac628b9e6eb6ed41b4da685</anchor>
      <arglist>(const PatchLevel &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>ab86def66d2879fd90b2da01214cd8c91</anchor>
      <arglist>(const PatchLevel *patch_level)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a7442075de36e2a0ae52fe2128d483be7</anchor>
      <arglist>(const tbox::Pointer&lt; PatchLevel &gt; &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>aecbcfe26464e57ccd828d70485988a03</anchor>
      <arglist>(const tbox::Pointer&lt; PatchLevel &gt; &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>aee0151158f49c5e23fab49733d8a85b1</anchor>
      <arglist>(const PatchLevel &amp;patch_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a4ba37e563771b6a2e5fee1521a72fc35</anchor>
      <arglist>(const PatchLevel *patch_level)</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a32ef97376f5792c0bbba13a6accf94b4</anchor>
      <arglist>(const Iterator &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a1ff2c0dbb2e8fd91f032d4587afbeb5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>adf54fc593734580a1ee98d9b9013c9d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; Patch &gt; &amp;</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a0bc4531762bc96d73d624201d5b3745f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a262a13575b8ecefeb9952f53ab0965a3</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a51d4a3776dec7457c47319423f9441e7</anchor>
      <arglist>(const Iterator &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a7c176a3982329e50d8667a312b0ce9f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>ad60659b659e2585b60b98e0729424c8d</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevel_1_1Iterator.html</anchorfile>
      <anchor>a64f4a1ce6e0de20625b62dd29e946434</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PatchLevelFactory</name>
    <filename>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchLevelFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>a99fa214d204ac66af32f3ec24522b178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>a060a3cd09375d42af322f16ccb45c01c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; PatchLevel &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>adaa7ec03c87ca24a351ee13401a36716</anchor>
      <arglist>(const BoxLevel &amp;mapped_box_level, const tbox::Pointer&lt; GridGeometry &gt; grid_geometry, const tbox::Pointer&lt; PatchDescriptor &gt; descriptor, tbox::Pointer&lt; PatchFactory &gt; factory=tbox::Pointer&lt; PatchFactory &gt;(NULL)) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; PatchLevel &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PatchLevelFactory.html</anchorfile>
      <anchor>a6ac2bf3eb97c298c8477fc5e3a314667</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, const tbox::Pointer&lt; GridGeometry &gt; grid_geometry, const tbox::Pointer&lt; PatchDescriptor &gt; descriptor, const ComponentSelector &amp;component_selector, tbox::Pointer&lt; PatchFactory &gt; factory=tbox::Pointer&lt; PatchFactory &gt;(NULL), const bool defer_boundary_box_creation=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PeriodicId</name>
    <filename>classSAMRAI_1_1hier_1_1PeriodicId.html</filename>
    <member kind="function">
      <type></type>
      <name>PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>ade4671dca81e1665495f078bc133a0b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a7d7a3b4d7d534e1af0eba77c2f452659</anchor>
      <arglist>(const PeriodicId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a928e6ef676d004df4620220cad0b3cc2</anchor>
      <arglist>(const int &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PeriodicId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a0867788308c69f1e0a5c7cdd27fe1c4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PeriodicId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a09abad9549fb687fb618886845af006c</anchor>
      <arglist>(const PeriodicId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>PeriodicId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a2c991af1b61b18e630106cc3b1214afd</anchor>
      <arglist>(const int &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>const int &amp;</type>
      <name>getPeriodicValue</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>abded0b0b479018f71ba03d5b6d1b1c61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a602b42051d0aa4633df456c27baeac6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a3a0dd22202af2fd4a0eb98de367a345d</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>af7d6c6b14bada2698a800f1ca2e7fbd4</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>ae183bded07148489e6d00d2d77cfc554</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a4976b9616341bed01e5f2af90c66b167</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>acb8a33cb826288e306f6e50b92aee9d2</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a006695be1fbfac096d7e7d7cbecdee22</anchor>
      <arglist>(const PeriodicId &amp;rhs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PeriodicId &amp;</type>
      <name>zero</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>aa7eb495605782a74def5e14749011a09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PeriodicId &amp;</type>
      <name>invalidId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a6b7aa99777601e12fdd096078c2153e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicId.html</anchorfile>
      <anchor>a7807e0bdfcdc6dcccd0d44d15c672c89</anchor>
      <arglist>(std::ostream &amp;co, const PeriodicId &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PeriodicShiftCatalog</name>
    <filename>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</filename>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>shiftNumberToShiftDistance</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>aee00ad92ef8289b6808df174dbfa88af</anchor>
      <arglist>(const PeriodicId &amp;shift_number) const </arglist>
    </member>
    <member kind="function">
      <type>PeriodicId</type>
      <name>shiftDistanceToShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>a9c34b6b0b094071cd6e529ef9c08cba2</anchor>
      <arglist>(const IntVector &amp;shift_distance) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInvalidShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>a88e70e0027cc0e5c16f47d16bf6273a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getOppositeShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>a2db552cd86b4678f8f63bcc1b76360ca</anchor>
      <arglist>(const PeriodicId &amp;shift_number) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPeriodic</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>a61429f9235fe3a6abd7c6f15ce989c7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfShifts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>aea683f1954c2c608f104444332bf57ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PeriodicId &amp;</type>
      <name>getZeroShiftNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>a76e6bcca2d52b9102eb13f72153d6947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const PeriodicShiftCatalog *</type>
      <name>getCatalog</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>add6fa74c6f56be0e1c18463cb96ae135</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeShiftsByIndexDirections</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PeriodicShiftCatalog.html</anchorfile>
      <anchor>abeb7af47546120c5b3053fbaeffd62bf</anchor>
      <arglist>(const IntVector &amp;shift_distance_along_index_directions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::PersistentOverlapConnectors</name>
    <filename>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</filename>
    <member kind="function">
      <type></type>
      <name>~PersistentOverlapConnectors</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>a160c0f3cc01ae8d025c3496693e416a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>createConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>a63e50d58565249f1c5ac33955bc24cd2</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;connector_width)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>createConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>af002bbcb794d7e4d53e0229eb4030c33</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;connector_width, const Connector &amp;relationships)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>a97e8b7da211d9bf3340f8d62b5bf963a</anchor>
      <arglist>(const BoxLevel &amp;head, Connector *connector)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>findConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>a218ec2574ed5e0e45cecfa5542d7afa3</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;min_connector_width, bool exact_width_only=false)</arglist>
    </member>
    <member kind="function">
      <type>const Connector &amp;</type>
      <name>findOrCreateConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>aec317b3c53b297724305c4f14fcd0637</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;min_connector_width, bool exact_width_only=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasConnector</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>a124132c5a70e2339835a780a93bb3603</anchor>
      <arglist>(const BoxLevel &amp;head, const IntVector &amp;min_connector_width, bool exact_width_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>aaafc98481e22e2df3b1b35d52a2bc4c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>BoxLevel</name>
      <anchorfile>classSAMRAI_1_1hier_1_1PersistentOverlapConnectors.html</anchorfile>
      <anchor>ade5148e6656171aa69a94e41b1dff87f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::ProcessorMapping</name>
    <filename>classSAMRAI_1_1hier_1_1ProcessorMapping.html</filename>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>ad3cdc665d003fa13a1774d032b871bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a002826deb8cd3a3ccba52baa5c179a5c</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a6ea1196eeab517860bd6f565948f65a9</anchor>
      <arglist>(const ProcessorMapping &amp;mapping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a47ef1327fea4b4c06dbfaa746d2c7303</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;mapping)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a369480d51231a0c21c38cab755d5b393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMappingSize</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>ad982e9a0e3774a88c30301273d1ddd68</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumberNodes</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>ad05881d09990782c27155e37a1c0e648</anchor>
      <arglist>(const int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProcessorAssignment</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a9abffbb6f095ee0ac3c7896e3a0728da</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessorAssignment</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>ad79a6e98ff0404c7be0158e588d4af0b</anchor>
      <arglist>(const int i, const int p)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Array&lt; int &gt;</type>
      <name>getProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>ae9bc1244fd7f69354a5a0a2aba5c482f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessorMapping</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a4cf9eb851a3b27a103840e4472fdd297</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;mapping)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLocalIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a618031a3a3ac77988b59ba654c2ffd82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Array&lt; int &gt; &amp;</type>
      <name>getLocalIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a872f95d38a24996e0f9a70a6f0302a49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSizeOfMappingArray</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>a75ba2919864857cddd9f7ccdaf437da6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMappingLocal</name>
      <anchorfile>classSAMRAI_1_1hier_1_1ProcessorMapping.html</anchorfile>
      <anchor>adcdbba92f3d1cf7f445a0a6769d4b4de</anchor>
      <arglist>(const int i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::RealBoxConstIterator</name>
    <filename>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>RealBoxConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a11bef0c49d75d7cf565944acc3821ab1</anchor>
      <arglist>(const BoxContainer &amp;mapped_boxes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RealBoxConstIterator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a9e689f95d296169474279487df70e5e0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>RealBoxConstIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>ad0b04c8d7ab9cfbb02f73577ffacda69</anchor>
      <arglist>(const RealBoxConstIterator &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>const Box &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a42b30a6b796252e43c9dd74299d00791</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Box *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a9f5e33f2769b9a4751f9a8014ff892bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a2a24b195da8baffd10cf725c37104c23</anchor>
      <arglist>(const RealBoxConstIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a8f416c32e71cfaf005d0d9733ba5bb1a</anchor>
      <arglist>(const RealBoxConstIterator &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>RealBoxConstIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a9d68e3fb7e09ce97c30bfef45bf2eec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RealBoxConstIterator</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>ae764f403910501c69d65553adb1bf69b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RealBoxConstIterator.html</anchorfile>
      <anchor>a84f602f610606ce3a8d4d66efae95591</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::RefineOperator</name>
    <filename>classSAMRAI_1_1hier_1_1RefineOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>a32935beb737ff71bfbf22c9572d1e382</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>a11109d1a81b61a9677b9a7ea82228f2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>a0140c2ab705570b04b5f9c6716891190</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name) const =0</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getOperatorName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>ae090063d17a2139d9dab1f08cf332298</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>a4d5cd6681138c872f1d0c3c45b2be910</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>a3c6c68145dca00d2d4336e127145688c</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>a995e263e7704a882e8ebb827e6809f94</anchor>
      <arglist>(Patch &amp;fine, const Patch &amp;coarse, const int dst_component, const int src_component, const BoxOverlap &amp;fine_overlap, const IntVector &amp;ratio) const =0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>af9a705f166caa9419ecd6d2a6515870a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static IntVector</type>
      <name>getMaxRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1RefineOperator.html</anchorfile>
      <anchor>ab717d66fb0f270aee349dc6ae160f5c6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::TimeInterpolateOperator</name>
    <filename>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>a8e96190279f59a5e7546ac43fdff6758</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>aaf0e129b94e64d0a6831e370feee2a96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>a1b81b06f2d7dbcb23a71fbe2e1a2c977</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TimeInterpolateOperator.html</anchorfile>
      <anchor>af7ac3ecd1a073a9ece9b805940807d02</anchor>
      <arglist>(PatchData &amp;dst_data, const Box &amp;where, const PatchData &amp;src_data_old, const PatchData &amp;src_data_new) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::TransferOperatorRegistry</name>
    <filename>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</filename>
    <member kind="function">
      <type></type>
      <name>TransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a8e794c7caf58509cc065aff880649be4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TransferOperatorRegistry</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a27feb899d4da000f9422d77164866a9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>ad3714ef9787c58fa34824eb0b0b3364d</anchor>
      <arglist>(tbox::Pointer&lt; CoarsenOperator &gt; coarsen_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a0a18e2e5004d83478de93125c0e0eaa2</anchor>
      <arglist>(tbox::Pointer&lt; RefineOperator &gt; refine_op)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>acfc2b5d163d28cf28f34aeea154250c5</anchor>
      <arglist>(tbox::Pointer&lt; TimeInterpolateOperator &gt; time_op)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; CoarsenOperator &gt;</type>
      <name>lookupCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a9d37d64cb62e7b7b4340477def617104</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; RefineOperator &gt;</type>
      <name>lookupRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a1dc80ac8db249b05395a7f3b9e3dea4a</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; TimeInterpolateOperator &gt;</type>
      <name>lookupTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a2d2a29fb78f9bc8816d1bab38edfd061</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name=&quot;STD_LINEAR_TIME_INTERPOLATE&quot;)</arglist>
    </member>
    <member kind="function">
      <type>IntVector</type>
      <name>getMaxTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>ac2a425e5087f1277cf60d8a955ed2ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinTransferOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a62b21b62d55a025040b74dc2b49f921c</anchor>
      <arglist>(const IntVector &amp;min_value)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a674e0fc2e9ca40df400f9357f07b34b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>adc4286950684df6806a333e9dbe68700</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tbox::Pointer&lt; CoarsenOperator &gt;</type>
      <name>buildCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a4c0d749e60b0aa23bc8f0592481da41d</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tbox::Pointer&lt; RefineOperator &gt;</type>
      <name>buildRefineOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>ac7bd64cd1600de77026db9798ef48482</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual tbox::Pointer&lt; TimeInterpolateOperator &gt;</type>
      <name>buildTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1hier_1_1TransferOperatorRegistry.html</anchorfile>
      <anchor>a4ca2973ec6b63a498fe3f0532c93c936</anchor>
      <arglist>(const tbox::Pointer&lt; Variable &gt; &amp;var, const std::string &amp;op_name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Transformation</name>
    <filename>classSAMRAI_1_1hier_1_1Transformation.html</filename>
    <member kind="enumeration">
      <name>RotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_ROTATE</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da62bee633bcba93e0ca4197540020d93a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da79aa1211d35b6feed53a05f2b1b1f561</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8daef24958b2528112cabb4d72185a0a7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da7603aa792605343e9f27099f9ef53108</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8daef19e328e62f4f2c0cf68e5c5a52d7e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_JUP_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da849215242e6154fe0278b92a13c955de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_IUP_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da0274c8e6316067db3abd9e04cadc117d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_KUP_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da1e29888f9fa90490a16ed753ffd67813</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_KUP_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8daa9c80b16f0ad4bf1e31d9e7fe0115ddf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_JUP_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8dac0b696752da3b8b3bcd49a27910a7153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_IDOWN_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da69791d7160186d8c040c56738c62a38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_JUP_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da3ef8f5fff1d35a58201ce800a93c2cb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_KDOWN_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8dadf3f12b2b9f097c40eced6a8fbb1a2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_IUP_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da5b2459cd7a0b512302b66bd145404772</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_IDOWN_JUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8daf243d593dab86f3fa2d25752a2b426ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_JUP_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8daa5033519807c895c9eaa088f387f222b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JUP_KDOWN_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da2a05229a4db52f8317d17ba2d4a20e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_IUP_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da3b2758f1749004cfe9369c6424a2fc48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_KUP_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8daef7cbc7a22d7a363763c331bcb4b5fa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_JDOWN_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da99fb759b9a48251a8b8af21db8311d8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_KUP_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da9477e6e99903c70c81605f320a98b575</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_JDOWN_KUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da57cd81c3df3e08d30399a13492aacda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KUP_IDOWN_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da654d61e0a42f7bf93d8f16e36695ffdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_KDOWN_IUP</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da2cce711a1e187038c732949fb43d30f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_IUP_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8dafae8dc680751629ca32f32db86121f3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IUP_JDOWN_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8dabafa0c4d33e34ecf8a430b333320e3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>JDOWN_IDOWN_KDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8dacb29dbeda9008082b38cc7a555fcdacb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KDOWN_JDOWN_IDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8dae347dda12b083e3948572f5cd27bf448</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IDOWN_KDOWN_JDOWN</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a2dd7d97a19db7c8e97402e8518c0af8da8990f1b823e0dacd89be5911d8684e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a9b49732d31ec0802a4f01b6b84e20a07</anchor>
      <arglist>(const RotationIdentifier rotation, const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a4e35edccb9f7bc4112381a192cb2c3dc</anchor>
      <arglist>(const IntVector &amp;offset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a22846157ae06fef7afb2b2cfaf8f9b7e</anchor>
      <arglist>(const Transformation &amp;copy_trans)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transformation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a54e0fd5b80195777ca96142132da4d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RotationIdentifier</type>
      <name>getRotation</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>aa2b751a9c8e3eb34f563717c379291d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const IntVector &amp;</type>
      <name>getOffset</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>aeeb3927200eb834e7830045d1be78a5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a401ab3187c1745bb77831c4a66cda4ff</anchor>
      <arglist>(Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>inverseTransform</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>afc72e127d65cccdf298ac13741bcef1c</anchor>
      <arglist>(Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>Transformation &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a194575536cb979a65ba90d13d69ec4a5</anchor>
      <arglist>(const Transformation &amp;rhs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RotationIdentifier</type>
      <name>getRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>ade32d5b79dea90e06d9415f6dbfe113a</anchor>
      <arglist>(const tbox::Array&lt; std::string &gt; &amp;rotation_string, const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RotationIdentifier</type>
      <name>getReverseRotationIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>ab66c08fc1effcb8750eff1c8b6bb16b0</anchor>
      <arglist>(const RotationIdentifier rotation, const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>calculateReverseShift</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>abea12e25fee2193703d52a82694a159c</anchor>
      <arglist>(IntVector &amp;back_shift, const IntVector &amp;shift, const RotationIdentifier rotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a68209a556f4194b5d0d9e510089cbd5f</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a8d94fd3b2094c6f767a2ca1bc29e8670</anchor>
      <arglist>(Patch &amp;dst_patch, const int dst_id, const Patch &amp;src_patch, const int src_id, const IntVector &amp;shift, const RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rotateIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a8dd74566eb5d8a98af2bf9424c64caf2</anchor>
      <arglist>(int *index, const tbox::Dimension &amp;dim, const RotationIdentifier rotation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rotateIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Transformation.html</anchorfile>
      <anchor>a546acc54d96fc3c3d9edb339434dc24c</anchor>
      <arglist>(Index &amp;index, const RotationIdentifier rotation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::Variable</name>
    <filename>classSAMRAI_1_1hier_1_1Variable.html</filename>
    <member kind="function">
      <type></type>
      <name>Variable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>a3e0c4152572b2e9d4b6c81677cc989e2</anchor>
      <arglist>(const std::string &amp;name, const tbox::Pointer&lt; PatchDataFactory &gt; factory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Variable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>acbf418a8b38f4eb9be92240f6548ad3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInstanceIdentifier</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>a65ea3906f5228d3ae701a4c6f222cb64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>a00fd520638a6e70767962d89da584fd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>ade475c6b4d21594c00a21ce389c9a5e7</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>af9ee6b4f933a9fbe84c431c24a5f0673</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>a85421fc5639a358baa8f3573f457985d</anchor>
      <arglist>(tbox::Pointer&lt; PatchDataFactory &gt; factory)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; PatchDataFactory &gt;</type>
      <name>getPatchDataFactory</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>a9ae4a33243c4b16ee586208162e27025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>ac0f3eac164450764122a4a31589272d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getCurrentMaximumInstanceNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1Variable.html</anchorfile>
      <anchor>a7b7650987972e0054d48123a12ba7a01</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::VariableContext</name>
    <filename>classSAMRAI_1_1hier_1_1VariableContext.html</filename>
    <member kind="function">
      <type></type>
      <name>VariableContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>ad6e3094f13f7335f0500849366eef79b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VariableContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>a5ff3991b6f69a59956a24c76eff50270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>af7f3fd356a43683b21ff36eca420e985</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>a4907812eac49229bcf61ee1e369ad25d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>a312d0b88b976b316cac1582a414feba4</anchor>
      <arglist>(const VariableContext &amp;other) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getCurrentMaximumInstanceNumber</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableContext.html</anchorfile>
      <anchor>a20b215a49986beaec66a26fc1a00a2ce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::hier::VariableDatabase</name>
    <filename>classSAMRAI_1_1hier_1_1VariableDatabase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfRegisteredPatchDataIndices</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a4d05f1aa8f97b703c0a4700f9c3b899d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberOfRegisteredVariableContexts</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>aaafafc1b93f4d6fafef1030157b0acff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDescriptor &gt;</type>
      <name>getPatchDescriptor</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>aed83a5e927eb8e01553828e493a7eac7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::VariableContext &gt;</type>
      <name>getContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>af403a29babf35584f9e3ab6f113c85bf</anchor>
      <arglist>(const std::string &amp;context_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkContextExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>af44d3ebcf1060e38a3b473284950c296</anchor>
      <arglist>(const std::string &amp;context_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a60f93918da99b7f92e681eba4e7276e5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a579c171fabffa6219521e0d8236a8b8d</anchor>
      <arglist>(const std::string &amp;variable_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::Variable &gt;</type>
      <name>getVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>abab600b3530c2738ae01e6945be6edec</anchor>
      <arglist>(const std::string &amp;variable_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkVariableExists</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a77761462172002ac3ae87e67458da4ba</anchor>
      <arglist>(const std::string &amp;variable_name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerClonedPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a1258c63bbbaab40ef66899e39f3cac55</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int old_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>aa4693654f4f1e7d6e050bfccdf906489</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int data_id=idUndefined())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removePatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a6a70a2153dc838c7ef2c8275ba41ccb4</anchor>
      <arglist>(int data_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkVariablePatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>ac41a166cf2256d369a4e53fa030218de</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int data_id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkVariablePatchDataIndexType</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a0bde09270b59dbd6f29cdb33c867cdbe</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, int data_id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerVariableAndContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a3f6b0db0ed40b93bd0bd1266ac3b47d2</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const tbox::Pointer&lt; hier::VariableContext &gt; context, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>mapVariableAndContextToIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a18797306545bd941a4a30e9b2ad30bde</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const tbox::Pointer&lt; hier::VariableContext &gt; context) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>mapIndexToVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a6943174c431a85bd290fe18a03734759</anchor>
      <arglist>(const int index, tbox::Pointer&lt; hier::Variable &gt; &amp;variable) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>mapIndexToVariableAndContext</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a71bbc66c0025f16ab008991ca308212f</anchor>
      <arglist>(const int index, tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::VariableContext &gt; &amp;context) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::ComponentSelector</type>
      <name>getPatchDataRestartTable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a5720c4bc06f150e654b146dc15e06128</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPatchDataRegisteredForRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a5159d8c713e99db1c77631c3ef32afaa</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerPatchDataForRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a9f5036daa51bef1c4e2f5c0a8ece2e76</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregisterPatchDataForRestart</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>abd12b3ff11546d910b9485c3dec579f4</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>ae2978ee164561572cb4721f7ab108671</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog, bool print_only_user_defined_variables=true) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>registerInternalSAMRAIVariable</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a4a66827ec8be1deefff78db5d1be5b78</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; variable, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>removeInternalSAMRAIVariablePatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a922fe5e2ba66b21500131bc58e1ce462</anchor>
      <arglist>(int data_id)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static VariableDatabase *</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a9a9b3b6122833db2716a3a600dfa12e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VariableDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>aec7d5db2c8bb695010dafb980df495c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~VariableDatabase</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>ac8c25e2554193384ee3d537ba1eb8ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getVariableId</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a2a4971a4aeb42593895ba187d45f00f1</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>a9d103a0b9cc8278d3faa1eae2d7543ca</anchor>
      <arglist>(hier::VariableDatabase *subclass_instance)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static int</type>
      <name>idUndefined</name>
      <anchorfile>classSAMRAI_1_1hier_1_1VariableDatabase.html</anchorfile>
      <anchor>af351b2e50510718aed7fb760c4584b73</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::math</name>
    <filename>namespaceSAMRAI_1_1math.html</filename>
    <class kind="class">SAMRAI::math::ArrayDataBasicOps</class>
    <class kind="class">SAMRAI::math::ArrayDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsInteger</class>
    <class kind="class">SAMRAI::math::ArrayDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyCellDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsManager</class>
    <class kind="class">SAMRAI::math::HierarchyDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyEdgeDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyFaceDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchyNodeDataOpsReal</class>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsComplex</class>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsInteger</class>
    <class kind="class">SAMRAI::math::HierarchySideDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchCellDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchCellDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchCellDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchCellDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchCellDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchCellDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchEdgeDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchFaceDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchFaceDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchFaceDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchNodeDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchNodeDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchNodeDataOpsReal</class>
    <class kind="class">SAMRAI::math::PatchSideDataBasicOps</class>
    <class kind="class">SAMRAI::math::PatchSideDataMiscellaneousOpsReal</class>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchSideDataNormOpsReal</class>
    <class kind="class">SAMRAI::math::PatchSideDataOpsComplex</class>
    <class kind="class">SAMRAI::math::PatchSideDataOpsInteger</class>
    <class kind="class">SAMRAI::math::PatchSideDataOpsReal</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a0719a3d82c2eb5a4186e4248ed199218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a5625df76ea93590884ce1cddc282b2f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a8031309a0a242acac217acba55222969</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a4d93b4e0c2f933fcf985d0ea76443840</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a5f312a6a946d999dc3915459079b60e2</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>ad9ab5f6a726281f9b9747be766483263</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>ad8f60a0870580400c35365d8635599e7</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>ac6be6860c20beda963e3c5e828fafd06</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a1380e7665155be961c7653d50faaa318</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>ad84ff865c1ff2363215e5786be590ffc</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const TYPE &amp;beta, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>acc64cde574367fdf1be352592f45e07f</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>ad6bd53b58cc885bc2d3751e27f5bdf25</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;alpha, const pdat::ArrayData&lt; TYPE &gt; &amp;src1, const pdat::ArrayData&lt; TYPE &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a8223a07798c3c142d8e9bb7a2463fcf7</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a0df3eb4ca84f162419f898676d43e11d</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataBasicOps.html</anchorfile>
      <anchor>a2833a63358ec5cac92b5d902f1778bc9</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a8afb4bc162190381a1ddfc8513f824fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a7126b516c75b80524497f6c7504e98de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPosWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a7d80fd3527bc65df14b6911d5c2547f4</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>abb8668ea1808d6daee793bdd27b63f23</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalarWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aa4ed0f1f416fdd0534b8a96b18ae4a18</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const TYPE &amp;alpha, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a24f4c37c152e72eb26c9a6d920370a0c</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocalWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>ae23a8dc1b58293491f4e1c2bab7d75c8</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>afbd6a522c3bf69780841bb023548a884</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a7ecfdf4a66455982509b499b93bf916e</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;numer, const pdat::ArrayData&lt; TYPE &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>ae27cc5efc59f06f7c6b5d47c8cc34c6d</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;numer, const pdat::ArrayData&lt; TYPE &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a791375c9772529aa734a94aac4e8dd32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>aaab03e4166f41c688f87d3faf3f13df1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>abb3fd656f4d5a888637c0d9c8e54b49c</anchor>
      <arglist>(pdat::ArrayData&lt; double &gt; &amp;dst, const pdat::ArrayData&lt; dcomplex &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a4e35580eaac466833d408b552c931180</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>ac949edffb04e30e7507b2af2f518a479</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>ad4159e6fd232f4cb15f2a9563055cfa8</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a5af3b982b53109d221ebe658197a4a3b</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a8897c9d45de8f9f62cc6bc75ea82bce4</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a331e5ec013ef30c67393d79c10b4f60b</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; dcomplex &gt; &amp;wgt, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a065620f8e41ac2af2189d4f1184f8952</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; dcomplex &gt; &amp;wgt, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>ada45955733143c72cc195a4464f7c9a3</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>ad27fb636142ae908a62d8af93995292b</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dotWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a923db26889ed3d9d73aa7d5f65f1d43b</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data1, const pdat::ArrayData&lt; dcomplex &gt; &amp;data2, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a297e5ea9dff8f432d1eba47a64a2cb1b</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data1, const pdat::ArrayData&lt; dcomplex &gt; &amp;data2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsComplex.html</anchorfile>
      <anchor>a96d56bc01f4f9581918b4759f0d38139</anchor>
      <arglist>(const pdat::ArrayData&lt; dcomplex &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;vol, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataNormOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayDataNormOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</anchorfile>
      <anchor>ab894e0ef7947ca99c30d97faa332d603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataNormOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</anchorfile>
      <anchor>a0fc13fcbd09dda3c3eac93717b56603a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsInteger.html</anchorfile>
      <anchor>acce1a7f2f59d45cdce37ea8f11786217</anchor>
      <arglist>(pdat::ArrayData&lt; int &gt; &amp;dst, const pdat::ArrayData&lt; int &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::ArrayDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a59b297b680d836e23cd52125c753fa31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a0299c92b891f8eca662ac03efb6b8988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a1e097a78ed33f2624d8b74cc7e96fbb7</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a9075b676ffdf15a3a1dfe200c90f47a9</anchor>
      <arglist>(pdat::ArrayData&lt; TYPE &gt; &amp;dst, const pdat::ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a5d05d8cdaff0afab39cc08caf8928c07</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a8041a6e6eab36899643d1d4e599a3868</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>aaf732163bee8c90f16c43abeae25f7dd</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a2b75135e753d67ea9706e763811f4895</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2NormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a775eed308ef6b994ba6a74cc14664ed8</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; TYPE &gt; &amp;weight, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a3dae235b425cbeed09043a3c37e60d3b</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; TYPE &gt; &amp;weight, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNormWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>ab5fdb630861eb67154111a15f37842de</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a34c03524b57139c46f3a29f4e9ec49aa</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dotWithControlVolume</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a83f8cdc864bc72472ba3d661e4a6efb6</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const pdat::ArrayData&lt; double &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a7751ee904edd62fd15df69279c1aeece</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data1, const pdat::ArrayData&lt; TYPE &gt; &amp;data2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1ArrayDataNormOpsReal.html</anchorfile>
      <anchor>a1d316d903260725e81a0c21a77dc1f57</anchor>
      <arglist>(const pdat::ArrayData&lt; TYPE &gt; &amp;data, const pdat::ArrayData&lt; double &gt; &amp;vol, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyCellDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>af094e2315b8f9e46be9ece5fe5e7329d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a88eb6017c8b9478010612e6cc49230cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a8fe440d9efdeba58176310b7858fe5b4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a5bde26d6e2da8a610e27722cd90267bc</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a50548693ba2a0a079bbbd2a8cc50602c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a79449a22df51f4e2b93f18d67a066606</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a0453422f0f0c131ea131180b13c6bc77</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a7d660c861cedbb98ad99f73252618159</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ae4b41644bd970a9af6632703720e7f71</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ad57224b0e5ad0197bcf94858347eb8c0</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a967a9587257d622d85e991c4a4042c1d</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>af5bcbdc853c6a2427dcfcad9e3686ae2</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ad12af074753dc8efb988e9c71bea2538</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ab79d6ee3230e78fcb21ea59292ecb8f1</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a79197efe0468adebafdc076b7ab83376</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ac49bd17656a38c429a1104f93f9532a3</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a056313ffad515a9ee935905dc0208181</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>af9817c5940276df752c5194735732b29</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a3034ef5ddfd9f662a22c03016e0f6676</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a12ff05ed95065b835325382a859e9f85</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a4e2e889c16034e911bacbb752c901a3f</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a6f026567205e97002bd88e4ccb2b1fc1</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a670975713470ffa56874dfd4c2cecf81</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a9dc4a2047f70da3911250f35e1e10c3a</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a973b6221bb1cac7eec339f22ccdbcf94</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a82754758d974a3e4fdec7f0e85474512</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>aad0a43d268cc045c6c029a7235db3e7e</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a74990074d1b48e4ca7ad4ab98a653ed2</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>ad057e036caa741cc184745f802214a08</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>aca7f629c19e565429a76978e24290c70</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsComplex.html</anchorfile>
      <anchor>a47415205d77ec02317eb2808a2222ff8</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyCellDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>ab884798e88d7f3fb6df88fc899451879</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a25262c3821fe158480a2a74bd244a134</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a52d181dbff5a62c3e4fb474894e8399e</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>ac74f7a09d3e47beca9cfd6595eec9167</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a1bbf8c618fd9e2ec63373acafb5cd4d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a7144cf322406aaa6a0999a7efd775a49</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a5801489d84b706c9856aae702b7e3d37</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a5973929e582dd90b672bcbf23cbb7ba9</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>ad13122f0ea4ce6927a939dd2c788cb2c</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a817b55e41ce09c4e12c80192c4e0c5b8</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>afca2a6a55b5cc996df7d2854ef19894f</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>ae6f712cb30a34872894484f0eb41d277</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a63d2f60b8c0ac39cf3283caeda8cc814</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>af39bbeaa258e5b85cdd8f7a1823b54b0</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>aa3d077ae61364db9ee7bf0b7dca7ef60</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a02087f39f02151ae512b1f23f6facdfa</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a94ed29ca0cca3af3f2f7fb09138d5a6a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a42851c909b8a78e7f2e00bece8f2b51b</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a706a4e295789084da66f8b2ee7752e23</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a8bd6c0c469f5f7bcfd4b57bb245a1f55</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>aa0a0ea69dfd4d52ceb0166a410aad16a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a8f64b055a9043d0867b0855db5c4c19c</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a40f10a541a6d9688d67e6744a7bff98a</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsInteger.html</anchorfile>
      <anchor>a3d44779bb4b0baa37be79131e3e46204</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyCellDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a4031b9fce8fc93f422bdae7cb2cb1ed3</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>afdb55e6e355c55a1c7043f69ada2ddf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a956eff383dd1368ddd74851b6299a4b0</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>adc5fe9a524e37ea24d62ba05de4ea2a9</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>ac0b57afd66b50f8e1551e75c57381a95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a2ab6dcd4b89ac3e8b687ced57c2e314c</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a1c277e9c64335bdec01cfcaa5fdfbf4c</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a8f228561f34f8775892193e27dea7102</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a80ad5059aaff59ecd755d2e35ba18d6d</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a53133ef0e936495f611cb73e10e99733</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>ad06da899df7b44828fb5009c2720adb4</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>ad65c3cc809c284c43a86e0a79be3e240</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a8f63b4a34c6aeddffec91591f49b382d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a71ac2bbd48c37b02733fc8317dd0a3be</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a7e72d6db6726dcdfe53efa89eb6ab954</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a8b79080cc0afc2d361541caa9f566c53</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a7d723c8bd34a3ea76f03d965ccbb58e5</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a1e49541b5bd8cdf0ae86e33980ced0a8</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>adb7efb28d87de266927a3cec7eac1335</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a64979741a2afd678b8e200e6000f1617</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a19e3246b54515800d4064f0ef21cf119</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a7cc690e1a9b35bb7ac79ea67316835e4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>aa28d66ab68c040175112813feda9291c</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>af15a57f8ead42bd92fb1201235604f5f</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a26879fb2f6083ab189a9946a6928340d</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a4f2ebbc6b65ea40418e9fb48d309b592</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a038f626b624cd49ae99898564ed278ef</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a6365845be39685912f375a89a60cca4f</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a6c4ce7485d2282a0869ae65c25986a56</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>ac5f82659251a8a4882bc547ff4044356</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a7836787d43ae68e52fa51f89bf0b71cc</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a3cd410251f408eefe4677dd697b421aa</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a750ce376b27bbbf1ba2cadcfdd47edf6</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>afdafb1d4b896e0b51f7f62a763d15a62</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>abf62afea8e6ea7b4bc59f0932e77811e</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a30a54e382dd8e59a8f21cb09d802f9a0</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>a72d17b3f587ada0f2835632a94037fd1</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyCellDataOpsReal.html</anchorfile>
      <anchor>ab7d7f5ebf8c1e3944595880d5e368066</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>HierarchyDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a5bd9885cc18ee6e210b5c29f3ccef18b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>afc1f8897ffe0787daf91e5195deda5fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a057556b6e2276b699e001e6c010f1891</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a1249b192ebf8915393921e7ad6bc46e0</anchor>
      <arglist>(const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a11835a90224a3a11bd4d8aaa2e205e7b</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a74db4302a5c1851995bef184f6ac569d</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a8923ab4c4cc416ad14e5b55457b2c630</anchor>
      <arglist>(const int data1_id, const int data2_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a171970c55f5509184b602d504b325fb6</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a0c2d1d0d1add31593a19164d76cb4b66</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a258d3b0d98c9326d3e2c25f9d29119ef</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>aa2a97c9b38c397f9c988ef4de3126f31</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a114c625c6072a35a437f0c33b9526f5f</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a99816228433a364b79fed2fbf717a64b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a4e0850c2cb631e289782480d7744bc99</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>afa4a8f7f7f85a1cdc81f1491cd36bc3c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>af14fcf969d76f974f629d772f1b6f0a6</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>aea8b6c272efc453087d9dd0041f7fc63</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>ac362e211ced1bc825e5c8d4216e087cb</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>ab056252418b7f0cdcf4a136cdcb72efc</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>af804cb43108804d28875549b0973a173</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>ac69d4c2e878b14b9398461776149fbce</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>afeb6ab11f69b1e3e6f4e06c25514fa29</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a64ccadaf128a107c337731c32aa96918</anchor>
      <arglist>(const int data_id, const int vol_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a6e8627b80ee69651aa30e6dee50bff80</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>ab9da9cd709ad746d3e9bc30e6765490d</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a8cd620b005dfd11cd51d22fe2c99fcb5</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a840cac28188cc068c4dd2ccbf1ae58ab</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>affa0dedd17973518bcc043a3773e85f4</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>a9bafbe24d7e72d1606fc76385a5979d3</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsComplex.html</anchorfile>
      <anchor>af9006473c0ce2846d9c8d4af4a2dc046</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</filename>
    <member kind="function">
      <type></type>
      <name>HierarchyDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a1423a71fed4759e806129d458d283df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>abcdf03bf3e1ba5938efbb7aa15c6983e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a8aaa40108f23df0ae0ccce1e6fece7b0</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a7404ad14b10d5d3ad5afb9dc60160ea7</anchor>
      <arglist>(const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a4c68d4237c66ca425cc6ddc6b13c89aa</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a66f0c37ee81a36e93bb9cd33ffce352b</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a51164cf54016e897f5bcfeab89510ef2</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a45d74aba377f4b2068f56327ca101759</anchor>
      <arglist>(const int data1_id, const int data2_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>af98f76de4c36a1acc715027fe3a0ec18</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a9e8e74c6878143a05a3dcacb4c93586b</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a5984d39730b8c6ab6d1ce41898570a98</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a36b468f62085a3542d60e2d696ee66dd</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>af4f780f76bd325b6b782136488998224</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a91befafabba309973c8d4a8e93ec71c8</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>adc85ef1e8825c76e2fe373c5ae800b25</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>ad31e07402bcec5b749bdfaf50856106f</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a5a5dc74c71933142044c0ee4350261f6</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a4d6691fa2e415529940f34e3ab713a56</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a08d8b4be7e30e7c7ddb7a40a7cdcb68b</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a2ead1688912f3373c6300d09e8fac1fb</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>a62fc412ecb093c997fec02ac1559a06c</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>abcdcc538ffbe57f0e3011139de7dcbf4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>af04a9d180bf8bfe19c7d5d5e6807b30d</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsInteger.html</anchorfile>
      <anchor>ae731b68508ccb3d126a9052a6cbf3695</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsManager</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsReal&lt; double &gt; &gt;</type>
      <name>getOperationsDouble</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>a2545701b7a98be18d8a1deda9153da65</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsReal&lt; float &gt; &gt;</type>
      <name>getOperationsFloat</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>ad44fac3ee18657bf7fcdb4f0b33d36b6</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsComplex &gt;</type>
      <name>getOperationsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>ac1505dfe2a92ff4eda11d0269c5d5d08</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; HierarchyDataOpsInteger &gt;</type>
      <name>getOperationsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>a4a8d59f6217ecb2b7ab4054876575e42</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, bool get_unique=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HierarchyDataOpsManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>affa29dd0800236a80a05171624fa8056</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HierarchyDataOpsManager</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>adc5af006b88a52e1b74e133ee816bdb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsManager</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>a11d171c33ed86d44f432476c91bf2eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsManager.html</anchorfile>
      <anchor>a4e8d2157f324eecc117fb78e2cc8cd7a</anchor>
      <arglist>(HierarchyDataOpsManager *subclass_instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>HierarchyDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>aeb9d3891c433629cd4a7e7d65387a32d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a09bedeea15fa6422437865629ebf8751</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ae4a4f566197ee07771a391384c1ed3d4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ada8ed5e9636dd157d6e2c0968515bb6c</anchor>
      <arglist>(const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ab268ccdba2d685ed7b272f0a6d5dbf47</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ac0f3dcf08002c6f896e7152eb4704557</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a2d2b58b765d97e2a1dfc9dfb5f789845</anchor>
      <arglist>(const int data1_id, const int data2_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a151b07d2aacf5ecc03b779e5d3f9cf9d</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ae20007665e68f5a2aea5c8056b8164fb</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a3c7b8ecb03df301ad4f5bcb175651f81</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a448e815693cde9b39f800dff93fc36db</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ab5fb74dd6fd0c9b4aed1ff7aa67a748d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ae4e6a8faff041348b702f237915fab33</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a8f513b3f642d66996f5d1fbb83218891</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a40d0f0f7ad24dac333c362fdb46da571</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a02e99d13ea8205104222d8e6f44b5d87</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ad9ee5cf710f8a5d6c33e8c88199811aa</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a3ac5631ec26d0aff55523187f728a254</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a8cea0668c1880227a65ee56bd602c749</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>aafbc29e1dc07a1a531b53e8e6ae74405</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a67cc50d084e62c93061af2b3e9f54443</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a57d756a0bdc0cf91024fbd07009afd55</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a06aced8b3258e6e1916ad61a9f9732af</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a078465e80470d620c46db51f04659151</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a45dc7182885e3b43d17d8427d17e6320</anchor>
      <arglist>(const int data_id, const int vol_id) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a58f9b0706ca4d2f548dc25b426034ef5</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a1f9ce4bad63f1c1347382c142e470b94</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ad31f9a6508450250347b8a05f50cfeb5</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a7da2c27f588bc96407f70b93cbc6f51a</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a5e0257dc6556ad6688bd7a42cfd27843</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a06d241d08634d39d05fd0f04e1981ae2</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>aed7c18f92a0e37d89eb89ac74bfe8791</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a45413d5e64cbb157284163467c0dacb1</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a8dec0f21b051edc02b55f7dfe669c89b</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>af5d6a1c8735d85d8b585af96980ba44a</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>ae2ce00a00591643fc606a839809ba980</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyDataOpsReal.html</anchorfile>
      <anchor>a7aff74407d8c870861fc08f98e48ef3e</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyEdgeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>aea517ba9d8a03f095113b199912662c7</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a5af57e6af0e9992d2c84918512875da3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a78c11f016dcb68757be52479fe84f947</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a80c095e61a363fa65b77cd39e9b71728</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a2d01158840709d4cacd5f8034014c93b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>aeeed41006a490b701883d2a3b97d875e</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>aecaae06eac8085bae65f2ab39ab3578a</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>abedbe18b10b4f6a725740c1477daf613</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a521ffca6208cf9b869b953a021340ed1</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a018ed7c7ec55b3a38d819461a369001e</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a318c1f401d5851b83b02a7826611cc54</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a7788fe8cba1b61df695f45ce22f2381c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a565fda6bc8255c79132df78e642e4278</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a8433673fa80db03e3b2ae90684ec1b27</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a201da5005e13f169aff074b95d0a76df</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a31c08b0476fe9b1186154644a09689ea</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a9e820e40bb579e84fc9ea7c579371740</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>ab6198f77d96589c919c4ae8a299fb95a</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a3cc75aac32e201c035144700cbb4d2b6</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a7b36a3a287770bc6821eadb705161cdf</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a7ad08d3a98ac4dfa44376bdb60a9b225</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a4d377223196b6020b7704d6ebd2e9584</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>acced2515171363d645d24aa869a4ca47</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a5e23d1ab60d483260c0e5926e638d1c6</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a68829f64d42fd59354112620337d32dc</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a2536b3a3eeb4a7570df1d0aa68dcf967</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a760e7f0c9063655099c5080965fb5d76</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a1ca8bdb6ff0df486b1b7f862da432e14</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>ad7ea60b889c8a11230fed6ee94f2b26f</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a56bad37a7199597d91b62bcc6d3b2a10</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsComplex.html</anchorfile>
      <anchor>a1e773f4f03269b899b5d1e4de59b9f9c</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyEdgeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a5570a59bdc1c5e9821d9b4c596e739e1</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a4a460384fa3f99159e641b42d8c81a24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>af888b32af5c35c1ea23cc9b52637887b</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a40b924d369d1bae6b56cd75940b9366a</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>ab3c7f893c246a04d53102e02b3315c45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a1c8eaa8fbcea804e9a4b3108b7c13f2e</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a1ff458439388f34b1261d21d7c23dd96</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a3749873041737f98e606d8dbba4f9c95</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a04ebcc5cf2fed3032454174240541fc6</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>ae4dd7267d48e9342567ea11b57266929</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>aadbf6206e669861755da1d2506b7a634</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a79071d30b66eaf0e9c62f2757f0247c7</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a9ca756812a0bca339c31fb782e9b83d5</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>ad528335ad25039ec32762aada15452a8</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a147b71992b754417ac239f5ad4ef425b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>aaed40e072a99b6dcd252de34dbaa2398</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>aaec5a41eec69a407463d187ad67c38f6</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a0f15d77cf7a7566b68f4d20df8e67378</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a4864867bda36fbb88baeb7787442066e</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a9ad34f227bdcae849583aee17788fa2c</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a455ab6057c6ede6ea3a2be096bd73ede</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>aa30a906dabb57427e82cec8a5757d1fa</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a38b8825a2a4b9e8b57cc1e9c859aff62</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsInteger.html</anchorfile>
      <anchor>a6767017db72de41d0af7ff6246ced5ad</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyEdgeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a97b4290befde2bdedeaf4cea58f9a5b5</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a1d78aed37739de93a5f1192337d9fc92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a993a42ef3a2193de06c352f393db05d6</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>af053933745fe91a2d7e68b817d13bd3c</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>ae6f4e1004af72625ace18df5ca4f3302</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>acd6b96a6a04e817f9bbe07cc56867736</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a144159bb59bf0bbcd4d9c36d7669d79d</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>af9f5a41f3fb997ea7997b5077e5741de</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>add0956947369fb1e041f39f3fb4a70fc</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a4f313539ca232304e4d2e38d39587bd0</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>ac98723aa1a6ba880d4535dcbdd0f1cef</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a365f2c7d2efaab72e0d2993ef119220b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>ad07f49f2051f62329961489d1070297b</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>adb6ce61b949719deb8f2f3d897d7236e</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>ab9f3e29e7624d30ecbf5fb308c2c63a7</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>acc9df2e45e3537e5ecd762023fe3aa38</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a5702476643702c32ee62b6dbf899125a</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a0b9897b29d471f0bfcd8aa3383db9f74</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a56f41e92535f28f3a267280bf0c33e10</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a41b2dc3df79ecff04b46e158f3f1984e</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a88473d6e44359245e483f879e59aafea</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a8c7b38a1fdf5f3c481b77bd32e5b1b90</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a6bf5e8d428b0c1524053e80b1e5f554a</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>aea66efad9cce95e2c96e01d267efa056</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a8cf47fe0365588e186d1f347826722b5</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a137e18eaf31966e8b163e834b0e37683</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a9d4f0fbf8afbce1e31cea7ceb874c019</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a1da9e7cf7d5cb42bf3a92750cfb2d0bc</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>acfdf5f0e837bd5da84e43d236171a8ab</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a3917b2b7b67e4f1c5a9643e23c900464</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a40772941be2a857503dc4a6d41343369</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>abd96e8a6506fb8934b769892dcd997af</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>ae961f7b0488fc7ef1ce1df5b3ae8cb5d</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a30d7f1753602386eaf73c0111c00df1c</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a0d93be516e618f5d8465e6f198a6930e</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a93f42912a220aada24290fdd36b1275d</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a654c8e6f7d6792ede51c29c847fcab3a</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyEdgeDataOpsReal.html</anchorfile>
      <anchor>a2c7d37f75d60030b98e906150bdfdd35</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyFaceDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ad40bd7654162b20df178801bcb261dc3</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a81651ae07a5006f2592553e163205418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>af9db9f13adbce06d6ebbbb3ad667a29a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a8ffa9feba58413aed44a49d75de28a44</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ab71a27301b68aa00c1175716e0ee93f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a3813c4a562571eba93f29fd6bec3eaf7</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a33c812be4ecedae48db5e75b1438060b</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a7d5acd64015544afff1c926bad393e7c</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a14793f3a94f08d6d37f6504814e6206f</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a1b1b73a5a5717f6df40b95372e0c8eea</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a4b93a440f4d7ea9ec267de85bd43417a</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>af925fed812c993dc68d25bb8ba2d9bd1</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>aa59dee3807312aea578e2e0d540cebef</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a53cde5324d10979bde9b7234d94f9e14</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ab2f3a09689c5b79a8bc8064438f9f1af</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a18af0afec32635f40dc32cda9fa17104</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a84a6b7a5c561cd95d0359b0fe3059084</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>af222a4dc85a1b17d9528137efe4ccc10</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a5320db40bc5db650ab0b2915fd80fee3</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a7fb64d20ff09964478c58ac451b3295f</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>aeb5137f07678837bb148dfd32255dbac</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a11422b3c5483d1b35546856952932e6f</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>aace1ff620ac767d585e9c3a215255c90</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a976858558ee3f01198ff322c32a5eb56</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>adbb143ca8839e38a05551c6938ce7136</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ad850a73707c729d6961b69ff8edf4471</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a08c7462a01dc414124d50135c2241794</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a374cbe20e7c6f2b1154c86fc2830bfcc</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>ae4c5f3da56458c3dbc0d5c0e93ca40f7</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a488ea67523c1f43fa0dd4b74b2ef7683</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsComplex.html</anchorfile>
      <anchor>a6b7549187bc168db029a8173adc161ac</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyFaceDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a3276b0d6c29b6db12bb590b1d4319dd8</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>ad01a5b7c5351ddc67ae9f08c9070d61a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>aa36428ea2573e4cccb4eb88e6fcea239</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a52132dcf242d96a12038f33d91ec8674</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>aa4d12036bdfec731518e0bf7a14f2946</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>adb74d55be6055c5a75fb0db85f8e72cf</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a19fb75fe03b620c1861e9bf7a6f57a7a</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>aaffa84b84706bbde21ff615ac074b1fa</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>abc59060e85d04318f0566cb8c4a11361</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a9769c27203064371a2563081ba33cc7f</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a9fd2089fc31fa3e332c287c1700c83f6</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a60db88a20537c3065e5e895b72fb1964</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a57e7213bb66d2cefa94624c910555a02</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>ab35b8b288d4db5fe40c47f4b6d5343c6</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>ae9dae1aba6b29254ac33268473420b69</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a09693daa0ed578d72a3c5f4a2165ea83</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a110bc8f2e5ef81fe0d519e96af7daef3</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a0aa9f0db02ff33cdb271010192bc6e83</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a27ab9a553bd47797862f509ee446eaa2</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a473e6f019299965e04433683b4854542</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a19de21554cdb4366b6a8dcfd9603665c</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a032e8811b2d47f433682d6af0f154414</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a0b5739be8df866945f088ed984f58a2e</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsInteger.html</anchorfile>
      <anchor>a701bf96374db44ad3a0a66f0cdcc49ab</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyFaceDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>ac5b241c74f8ad3a8b8f62ab95aa44fec</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>ab1b3383f34d8c9a4df88a0631ef31e7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>aca569c24cbf4971559987420181ef05f</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a63876dca16f20b55f6863e930f83d3f9</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a302d06aaf709a3c9fb4da39171723a69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>adb3e552341b53492273e2a2e9c6b6d29</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a09d623a85c31a3a88f820c27855b6504</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a0f2de16140b85b48e39614c508024b46</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a59d93f24e93e672eaaf618e81bab53ec</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a242a8a4ce4895edb583bb1908566cdca</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a34c917e8648193d355725b7ad630cbac</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>abf245b68db2ef92f5459cb0705b7b116</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>ab85f6cdac7b52a0c6dc6da6bd3d2212e</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a750f0bfdd9090f26a880ee2c3b8a67a6</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>adf21b9c63c4e2d8d37ebd453f24de921</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a087510c4b489441dedb042b42b771ec3</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>adc3ab3adf7fd7c7b2bd475bb356f7663</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a37c388dd6c29d1cb85ae5c5b1fa80d4d</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>af4a9372db0fb59ab0b400791b2360e1f</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a75f88f0e0af40817d5d2a6e46cf528e4</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>af577a50ceee25d643f0bca6a2e4cd6f1</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a8647144e795f4334cf21d0df8d183bcf</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>ad4e3ea4dba1577fa57580854060a096a</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>adb67c82bff660b6c792548c737b9b8f0</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a1dad635585e21de4a49fc0c933b8f34b</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a3a21e7b7d677731c48ca4022cbf7f0b6</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a3efbb17f0734ae7c9a586532d7e2b28b</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>ad282761784df579786a36139ce9a1a82</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a951942259efe15295ea5330e8d0bfaf0</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a2fa1720f030dcd226ab5bd11d5d1c266</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a3bf52f9f84e9a3ca5736ad2f82c8aab7</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a8bbce79b4e2fc367b26affb9520cffcf</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a1d242b41a238adde5b71811a5c4b4afd</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a277559c10a3be0d933155f4e91c569ec</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a0939543426f00af84e0868221612600d</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a93a0f90bd34f820f71fc7bb4aaf8716b</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a1c98645c4c0a2a18b933f65b1c0824b7</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyFaceDataOpsReal.html</anchorfile>
      <anchor>a963e53bee5cda73160f4372932d0f63f</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyNodeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchyNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a6af80a56fa35d03d266d5fc14ff1bdbb</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>aa5253f73dc67ee77c0fdbd7f7d0bfee2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a6293ac938272581f4aca46e8645cc4bb</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a04c72e335af7d0834cc3e7fc49b2eafd</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a1c22e4c78045e96a3db2ae809ebd00bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a0187fa0d43ddb644350524eede0a0067</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>ae2eb571186623080a4b0804f108f435c</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>ac23a84cad80fc2609513d2bb19f05f12</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>ab7228b6fb364f8d8ef466173ef5bd2eb</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a0296789ef07b6ee55edb6bb5bffb984f</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a5d9bd13e74ffd1a5219a6fecea833afb</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>ac44d4d80b4a27c56dfb24dc2b687fb9f</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>aa65e6c8925219838cbc302a4e96039e5</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a7708fdfeb3403854219d1e551b9a160e</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a3a1b4ddb7c09ec3be0056cf99903cc53</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a4c738cba518ec6a9c9ff7cf4386767aa</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a1246268000e114ab2d79c42d2cdb49c3</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a6f24f957ab445f3e98533e6e9aa6fdc1</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a877d188204719574ce2134cb3bf36c8a</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a0ba68d6fc6c0223f4fa750f31dcab609</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a13850e6aa23b18e4f27a7c5f34c7600b</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a42ec1afd540ea2d37873edb72a5b440e</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>aa412a1391c708d4c639d905468351c98</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a846caebf1a1bae0b8ec08754903774d3</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>af498601168080b0720cc19878fd1a01c</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a43cd751476b061e50d1dc0e8abd6ed06</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a57f07a5dd21fd624c209f79722aacc5d</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a9bdd2986d79ef940db618285514e3467</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>ad1557614ebd3269d5cbe79aaad659421</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a45307f48c7540b1600bfe93cac2a268f</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsComplex.html</anchorfile>
      <anchor>a5b3865471faef38dc7bea8c6c927f11f</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyNodeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchyNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a4e516029468f603194e016b8b2bedba9</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a4642c7484f6f9f8a05f863c848f7798f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a6dae3f4995e98d102c825181d6b17d9f</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a5c15c94dbd9dcd992f0c7977e8d6518c</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>aced6f701f51b664eb2779fba2ea20c91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a780495291b1eb5ef2469516fdf71bacf</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a2e6410335efe2e189f59b2a47cd50560</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a6532efe56964a3502cff55d4f4b1998c</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a17b617b0a34e9609862619fc94ab1bd3</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a5bb95bfa24ff2e5379223012f1d3db4e</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a0d2d12d37d03427a455af5380d51b1d7</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a0d6d7cf199e37bec36869f6e2b231a34</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>ab30c727811300a8a73b6ac77202e13fe</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a916394f1c2896f79220a9c07f9f026f2</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>aca5cb1b7d7a6778bd6a87b5cb84e1ff8</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a548aac984f014ea5d9b1369d03a5232c</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a55a6ef9136cad8df4c57e796a6f3c6b8</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a4ab19463fea1bf1d88a24b91b41473c4</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a707e31c3fcb076b3ee12f1cfadc42845</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a054d740ea9917444865849163b09753f</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a133a35bf4aff1618bca28a83130953a0</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a5d3e36a9e1fb93abfcd378ec67d79463</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a86955b2deff89d6733b58788be3ab693</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsInteger.html</anchorfile>
      <anchor>a7244976364606679444b9dd24029171e</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchyNodeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchyNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>aa0ccb7dcf1f9e9422c76bf800734128d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchyNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a11bb2a6bdee921a9bf7287730c006813</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ae1376344686996cbd32b36ebcac37074</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a4f2eab8c8418d9423df1f26c9af0b810</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a87a7e2e7cf1499be8f8f821ce7744d79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a2903f7f3f61d00deb07e6772ba8d54d1</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a6758a1eaa8cec93de3a52f0aee3f5232</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ac90c647081dad92d851b3ef26db1639e</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>acc1efa78dfded7e95da2e422c74f05d7</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a7e34da5612b53c1091387eece0a47a7b</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a3101a33fb5f2f334fb9f5d99513fb80a</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a427d1fdb51c42616c54a1fe0077f0240</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a8c86b5b7d77e54ed8f741b9ab601be84</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ad8cdc88cb1ebe34c1419556d15483866</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a10cc9c5d8fe409bc01b21aa29d95f3e0</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a2eef717907c91c40d3c518b483a9e242</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>aaa6f6c85e223b9f2a5bd1db71e188e93</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a63c079841f35df97c07adeebaf392455</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ae11002aa21c0fa754c68473848939233</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a1db297193a947806dc70231491251f68</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a00f104b5b6f5f6cf2f61894fb71315f4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a8778277b11fd0d4b77e0d8cc5da4a7a2</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a618d8d2f4d1252b842d6f70798cbe5bf</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a71f438bffc7b7862390af4883186df8c</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ade8ae91c5db400f1fa68673129f7d477</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ab2a7561c69e4ceba982789e1922eb7da</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a552b9a3c451f57a0dbf4d155f576ff2e</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a474d0a9a10d8580e904ca0234cb57f9d</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a0575094e82c0e83d9eccc28ecaeb9bbb</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ab1bef22f8f862633da82054889520687</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>aac90e4e94fa82ccb256f44fea6236de2</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>abfed0d65be40df0de986bd36dab1aa94</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a2cade51512ac6b836e04e42c004e8817</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a839530b8d05e041d8fba93c0cee85562</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a0f15a397740a5c231eb979f037689e8a</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>a790527fe8cdd5d234c75c584e71479a9</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>aa78cf11cf06c50a42c5cf8378a933b29</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchyNodeDataOpsReal.html</anchorfile>
      <anchor>ab131cc1bb7a5997f211872b08d06d530</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchySideDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>HierarchySideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a8c56b8f41c3764d142eb1fe6a38ba926</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchySideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a2094b5ddd205e7c5d5cccba03d4b1cba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ab594c07acd0b85c8aa8e21c08911904a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a4d263ab2906c0a561d202cc94e63eda5</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a566ad4619bff7499ea8f99342826e718</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ad7b7c8dedbf3813d7cecccbd10496350</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ac1330266ec3b72cfbea181e2be3666a6</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>af94534ab1b656f97d4f018b1b531c1cb</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a80255894ef186fc3485afa8412d6e38e</anchor>
      <arglist>(const int data_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>aa79926201b1f8c6cdb848a647d68ebb8</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a4990c299912e9635c945f48160e64970</anchor>
      <arglist>(const int dst_id, const int src_id, const dcomplex &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a6b3efb5744fa8b27b74b3f0723cd9e31</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a0f75dea64a8e1b572c54018620c06e4f</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>adfe8c42907585ec494dc8fd1092d6328</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a9c0ea43171c39ff78ebe7fca835ea265</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>adee633da5a13603d5981a85c73141a93</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>aa7231b7af2b21dc8e4b463a41df45915</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const dcomplex &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a039d241c627cd72747dc7fa546c25880</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>aef88ca7b18166883a8feb0575f657589</anchor>
      <arglist>(const int dst_id, const dcomplex &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a2c580a79595b6f499c11a724a714f597</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a202caf35ca9d184287125000e25ee1c2</anchor>
      <arglist>(const int data_id, const dcomplex &amp;width, const dcomplex &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a6be9a4e693493c9cc260d3747ff8c9b5</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ace001f87c72b1de3206bb47d7c912569</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>adc2c13b1fde0158121c450ac4d492f95</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ad933fcd26ac21b210b6233e0d1d0afec</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a5ec11bb40b0b79fc0b384042a9f8b8e1</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>ad4636a4fadb1197a9de2249464bdeacc</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a920739db8b497d275a96a34a8f88451d</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>abf3edf45bad257f9f6754ae95be46557</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a07b58e0669e6bb4eec26ea0f77bf5da2</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsComplex.html</anchorfile>
      <anchor>a4108c4d2cbeac49b84bb5ac40ede43c7</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchySideDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</filename>
    <base>SAMRAI::math::HierarchyDataOpsInteger</base>
    <member kind="function">
      <type></type>
      <name>HierarchySideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a1842caa02fbf7b5e35f838d5fc1207d7</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchySideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a99b7aa69491206a6655f00a215bfeee3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ab111c37343d5a3772a9b65701d918a87</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ae1bcf7b3ada63eeea7340b4dce3b221f</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ac319fe3392ba335003e462d376b0b1c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a4a219c4f2642c953239b246e389e61d2</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a16684f27f909f1958d66c952979aafb3</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ad0d41364f571bf3e49dd7728f6546829</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>afef65514d4f599f164860ce254030750</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a1d160d4a607b3864944d0e9c0359c1e1</anchor>
      <arglist>(const int data_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>aa0756c30d35703b4e698d6a30292203c</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a58381abd4744577feaedb5118ba2dcb7</anchor>
      <arglist>(const int dst_id, const int src_id, const int &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a743f42376106eab047389bbe25ca651d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ab39e8c113162c0a9bd3902890849a809</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>afa2fcee74ba471d7158b41446d04646d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a3e74489fda54e6ad9e6fbb6012105dad</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a740a8ab828f81eea2b5c65dd9ac80d18</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a5464f75a482181510415b9304fde43e7</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ac3c810413e56f5d8551bb69acb3a3599</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>afb4d59350f89b976bc820ea5ed65152f</anchor>
      <arglist>(const int dst_id, const int &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a0c807ce46adc2950131402b2302c9d1b</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>ae83dcc6a2e74653ea59771367b8f72e7</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>a24666f8d031f1787854bc1a7634b2bf8</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsInteger.html</anchorfile>
      <anchor>abd34ccce14d44dd42fcedb515923f916</anchor>
      <arglist>(const int data_id, const int &amp;width, const int &amp;low, const bool interior_only=true) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::HierarchySideDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::HierarchyDataOpsReal</base>
    <member kind="function">
      <type></type>
      <name>HierarchySideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a19e08253d68710713fb15f4eaba6322b</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level=-1, const int finest_level=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HierarchySideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a085e6e11d7cfacf4115ec9e865fab1c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a7ec67cc44b0cbe89dab83bfdbedc257d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a2f485f877abf6024517b73de9ac5df7e</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a0c010754a4ad79607e7a66a9c666679e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a240f568340e7f6f6f59b85a41deb4e22</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a0db3992829c843d45fbd7114c4d44603</anchor>
      <arglist>(const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>aeac6c231ea37569864c14778adf535fe</anchor>
      <arglist>(const int data_id, std::ostream &amp;s, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a0b0b20deda1b5964ebbaf12683535591</anchor>
      <arglist>(const int data_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a748e9d2786d74f1c16f32053a38f7d01</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ab2cc0b0f60008aa756732a917849cd19</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a69c5dff81742654b62d542c31409d681</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ab4afe56cf917345c8d283fe64ea93fe9</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a85a0496096585fc9b35b145356264f8d</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a60f6542603c859dda5ab38144ca2b033</anchor>
      <arglist>(const int dst_id, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a86a179150ead45dfaf8b364a3a595509</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a3c927744e9ea4a819d860c47833b0059</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const TYPE &amp;beta, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a37f0610fcfa486b27cf84cfbe948135e</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>afafc7cf69fc96039a534c6717940b5f4</anchor>
      <arglist>(const int dst_id, const TYPE &amp;alpha, const int src1_id, const int src2_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a2075711f6370c6d64d1a60f4798b0429</anchor>
      <arglist>(const int dst_id, const int src_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ae2efe77f686c9b3190190cad5fbfeec8</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a645211c88a0a36a4344f6252b8f25ee7</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a0b1cf29c2574bf531df6580a73b89a66</anchor>
      <arglist>(const int data_id, const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a76618072deb56801f88f9ccaad96bad4</anchor>
      <arglist>(const int data_id, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>aa2e03739199f704f5095fab7d41b4bb1</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a14753f1a7879752f34c04fca03d0a712</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a72b6231d731fabd7272714a7dd21b220</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a8637a6bd1c2dc9bb555b8c2f96f919c3</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ad20e18ad8d71c0fdae75c201b618aa9a</anchor>
      <arglist>(const int data_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>af4ff7a94186593e037807acc972b62ce</anchor>
      <arglist>(const int data_id, const int weight_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a74c51f374d0bf269a39b91c214248d73</anchor>
      <arglist>(const int data_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a9483a67069146fb81d9c0dec2cf6de88</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>af89d17e966900c4e72c1f40c34a69ac0</anchor>
      <arglist>(const int data_id, const int vol_id) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>abcbebebff5eef94a03461dca1324c658</anchor>
      <arglist>(const int data1_id, const int data2_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a6366867801402eccb3ca5c7c6d7a1682</anchor>
      <arglist>(const int dst_id, const int src_id, const TYPE &amp;alpha, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>ade236b6ce1fa557cc3a81fc869ad8627</anchor>
      <arglist>(const int dst_id, const int src_id, const int vol_id=-1) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>a686bd3d7ac8f12e1d6883fb0f8956935</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1HierarchySideDataOpsReal.html</anchorfile>
      <anchor>aa8669067239a0427444df06c02010595</anchor>
      <arglist>(const int numer_id, const int denom_id, bool local_only=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchCellDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a7030d05ebfaad85ae17a515130fd02e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a3e9ef6d7d8f61f642174764409a55602</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a90c5a43eebf648830a6aa42629b00ce0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a1c7130bcfb5096572c7f527a5cc6c30f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a4f180473601f8b22b2c6b6ed0af31cf9</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a6a34a31a4d5c7a8ea9323d3905c46a80</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a3bfd119a2475afc77fa7dcd538f99d17</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a19e6fb6c209757a9a8bd699086e52d3d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>ae7d8f40d61a164e50b1ae59d6c20680c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>aaa817f60f6da233eec8eea0902753357</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a9861d58c8625a581c407cb6b884e9c31</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a742088a43e9e4e2f938bfa5953397244</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a8e99a17c06905d4f907e3a7874db8fb7</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a652884d3c18e69fb7874064e3ff485aa</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataBasicOps.html</anchorfile>
      <anchor>a751f4106a9fc58c654bd20efb468b0e2</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchCellDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a01a2a2c673f16c428b45cce8ad89e0c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a60b49237a39038837fcadfb0cb621ca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aaee63f9f0ec5d67ffa794a2e3e62d23a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aece7b6544769230c66f5f18418b3633e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aba68be6401788881e940a1cc859c92f1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a83e7de48e8cc128c9af4db85a5304f1a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a20117fdbe675ca3f9e6d85ca675aa93f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchCellDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>ae18f120be23ab56f8fa2a748ae2088b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a3f91810cc9c2d03af6e6b65323f2bde3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a4239a116c5a94b76115b4fcfc4c283e5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>aa10f494751ad374fddfe40e5ea572739</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a21644e1ae22616470278a43a06cb0145</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a2455219862cbd827eac0961812970c77</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>aaed216377613b290bd8bcf19b7f829a7</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>ac7c122a75967fc52a8f25843e21c9f67</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>adcd0b64b1b50ee4fb581254b40a417d6</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>acbbdf8b463681963684b3e414e7d2fa9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a70f0e25d3b8082896a83651a6aad6634</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a2702d96e2b85f5b597e0ea78dd49acb8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsComplex.html</anchorfile>
      <anchor>a29600d691c2fcc77556a8f347379b07c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchCellDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a95ecfe8d3b595b413e0d5d23d3784077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a66d6ff7c4e50aea87f0db8eac68eae72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a111fa45515a127c6d6338ea5cb09c20f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a357000038ee7c9ef5aebc3f448eef305</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a5d85c49ba212f2bdef414d3b6715f74d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>abff394574ed9ea881c45487810a857fc</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>af525ee1eb203b220aabd3cb90b877eed</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>aa4fc3af987855e30e6d6bc16b310f409</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a0234690b44b2f0d415bb449864acb6ad</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a8caf6705e10b7e4c8af75626b92db471</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a20cc1885597316f85fac945776b3e471</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>aa226b32f3bb3e1d9fa7acd004d6c7301</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataNormOpsReal.html</anchorfile>
      <anchor>a4d1d27ee844d32afc1e89f7bd3a32220</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::CellData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</filename>
    <base>PatchCellDataBasicOps&lt; dcomplex &gt;</base>
    <base>SAMRAI::math::PatchCellDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>a2533c626fa14e3e6fb0c56617cbc2060</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>af17e61b97a3668495047a031fb2b7d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>a7a1ec60e267bec735be7058a4c46f6f6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>a23cd31b20f6334a9a3e39c62653a8864</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>ad1c7644b555f6ea07dd71bb6dc295ec8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsComplex.html</anchorfile>
      <anchor>a43a7902a5c69154840059b9d85dc40ff</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</filename>
    <base>PatchCellDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>aff89f8edcad5819c762df7da19aa665c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>a7a5b42bbc8ad15971fc266450f951e69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>a0c9f19f8418b82207c3f083fbd0571a3</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>a981ae266aab16577ce0bf459e05e66a6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>a01e251664f077e6e28df20f1319c6135</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>a8160b554569dce38580a35282d6b0c0e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>ae7fde6c4c1f55b43a7fa46585d53f036</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsInteger.html</anchorfile>
      <anchor>a8ea0fca3819ac9a431b15aa9769a5bd7</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchCellDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchCellDataBasicOps</base>
    <base>SAMRAI::math::PatchCellDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchCellDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>a98001f4fc9b90bc90b09579b318b0748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchCellDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>afd73413be1029ed29d1042dc6428a7d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>a3c7e6e2b84d46a4f0113c598f0fc7b07</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>a31bc606897a7891c4b40392a02610a43</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>a63d160bd057dacfcacfa76c63351fa93</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchCellDataOpsReal.html</anchorfile>
      <anchor>a594b707431db7f02daa818312b4791f0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::CellData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>ae9fa5309edd7a18ca237584a44e98393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>aab510ba9b0fd5a6b7f1e74aa5b1a4569</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>afeef2e3467baba3a2aa03046bbcb840b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a8b35e18b9860e9de2e71912caec58241</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a15bb1d9a505d41bf394f40894b6e8fa6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>ad4981a411b391e0fae8d8f9ba0b91505</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a350c36d5c569491a7b16c3279c842c5d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a53ba9a5ec26ed5fb2ac50f376ff862a2</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a3000ee1e21314dc4b854c0fb5f170e29</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a5f6c75eae23e0f024f2c01e7b3a17fa1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a029fca158913fbd9db52f276d4b00992</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>ac5242365d44edc845fe738763b413b9b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a8667bd138ed97475cac4d47ecac4b47e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a5c7679254563f236068084fe4b3d4d7c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataBasicOps.html</anchorfile>
      <anchor>a9273561550f1be1822e065a1a325950d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a78aff180449404f37517c36d70fa8306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a62592041f604f0127bf343d50acbee22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>adc73e3384951e7cd6e89ce2f4c0bc0f1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aa55ba263e998aea651ad9655125709d8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aea86b320005c76ecad96ec03dc7fd657</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a228dbcf760bb468141e356f8a362ecd2</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>af933bc0d0f67751f530edc8dc381b301</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>abfd09e29071d0dc9021cf9722950eedc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a1c714225a3d75cb97061b3814e0bceb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>ae4f3e51784f85a7a192c87255fd3f892</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a598f07c7a735b1ff6a2ce35dc048d491</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a1af158f45ddf37682c3da438f2e7b98e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a3d07d0df9b11e8c7bc3cca742d065a40</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a648ee85b9a10cb8deeffb3aab5d71220</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a5cbac118d7e4352209fdd63a0d0e68d4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>aa66cb1841fbae1b5545db1f16b28cfc8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a8a6b56ccff84076b86b8ee72aa4908b9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>af6643deb65c0e9eaf5fe1b64b308e144</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>a8c70c6bbb0a026c65ba5ca29a6130599</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsComplex.html</anchorfile>
      <anchor>ab8cf61dc0e9f69dbd98ab44ec7bef0bd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a62b70cd456af26b9974a907d95bda944</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a0ed6ae419badc46f7728f85925086d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a06289c241e8934b9194f3dfe5f6a096b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a656f7543da859f1b8793f2563ce3debd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a3c1b16464b20c949b376ae163c6df371</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>aa85080ec7cb88c378b2f0932dd61f48f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a4ff9894dbbdd8ea3fbabec4dd261ca2e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>acdbc0bf631d25686759ab437301c1c3c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>abbfcabaa75f59bdfc743b24f41cbae79</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a46ab40610463cf8fe2dfd2e34d8ff50f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a5b9bdf38c2c0f15a8112c494bf7f9864</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>aff99b6c8c3e54641e52ba00459a35031</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataNormOpsReal.html</anchorfile>
      <anchor>a8e1b5fc709ff4aa96756356439211d2a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::EdgeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</filename>
    <base>PatchEdgeDataBasicOps&lt; dcomplex &gt;</base>
    <base>SAMRAI::math::PatchEdgeDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>a272c7c866a96d6e0e9c62b4a16333b82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>ac665c589b1cac7aed8d863eaf1760fbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>a2c83d12bac4df5627d8b633655e516d1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>a577bf05beea0c89f1711c3332d91990b</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>a9a11ad232bb5ed3ae450cec1c3ad2bb1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsComplex.html</anchorfile>
      <anchor>af8ebaf7e6cca87a85c14378eba192b69</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</filename>
    <base>PatchEdgeDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a419961c9233c4f487580c692e4ec6034</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a8580db8b2c609773616796c84c1c1508</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a4c5b38db8d6decafcea7ec7c60eb2b56</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a1ffc9cffccd42bdd6d12473a5da98d0d</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a218d114a3db227bd26f8270703837c15</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a8662b620cf3c935483c26aee83a9eac6</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>a4ce9a1591e303481c0bc00ebb3a97a85</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsInteger.html</anchorfile>
      <anchor>abcdbd7c8fb384f32425c7a967c7057f0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchEdgeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</filename>
    <templarg></templarg>
    <base>SAMRAI::math::PatchEdgeDataBasicOps</base>
    <base>SAMRAI::math::PatchEdgeDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchEdgeDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>a00a9cbc4301ff38c9218ee3d7abf635a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchEdgeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>a86d61bd0f3659cedc2ec52da2b5627d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>a8796af5be8737b363bd837f6e27c47fe</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>a3b7a82336544e35e207ff81856399898</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>ae724d3dbd841d55949ce5a0c87d01116</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchEdgeDataOpsReal.html</anchorfile>
      <anchor>a1181ca55856958b259f365d145124311</anchor>
      <arglist>(tbox::Pointer&lt; pdat::EdgeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a2f837f03346e701f2d93aedf2a4ab625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a62116a4e5071d37d7fc389dc9216ef54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a855a18fb8c8c972ff10cddce01d93d44</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a316e593495ce827f3334b5976b9afafc</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a1ed2035f9dd86b4f98e506859b6174f6</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a503c6c1e4ab887aaad5ea29232786a44</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a0a19363e5ce5865d196cbb2da886f6a9</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a009bbb929fc4f7d673533e0af2b458a7</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>afab54ed59677fb0f3cea899cccf3bc52</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>acb89400268e9fe637e8c25a5e8f52532</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>ae2979d43b53860a6fbe2a5f33102bf3b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>a7495648fdff30628ca9cba3ba724ae3f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>aa58c278129e2f7b025f4f475826dd849</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>aac74f2fd5fad9e5934d86a3540ac7ae9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataBasicOps.html</anchorfile>
      <anchor>abf2496e00d3ec9ae79ebe75fc3650aec</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>ab70afac249f5a4843b42e8e95b3a93d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aaf078ad786fe1ce99b2f57043f2157c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a3322957de952439ad3854700276c4c08</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a207d39b29f3832b859acdc2a84f5be87</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>af7101a7291628b937ba1262aeee482a8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a829a378096cf3ece0c67c9ff653a874d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>ac0ac63b13246ff91aa08d6b795c840d5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>aacedf6416ed03bd16072f49afcc54b06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a7237504c56a7d97ae592802f3b806672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a5f26fbb2c76a8c4901f84ad661b8647a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a110e3ce4e9da3a652ddc83dd76b9cb7c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>abffd896669cb50cebac24221e50a5eee</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>afe6c87fba5cfa6421ffd7722cd439106</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a5f36834374dd431247ab1a8db2b1b66a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a39679df192c7ac23cebd9aa4fd0852f5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>acd413e5769e714c5e1b52d2f1040b3fd</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a1fc9210dd44beab820d9cf51a457f8cb</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a44e8043e6797c8eae2e4de1b76a7a273</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>a7879c7af4e4ffb57b2d8ec0bc84e2b1a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsComplex.html</anchorfile>
      <anchor>aea870dd3951b2f037bdbea9ecfb481d1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a45053a60e01e66eeb242c379a65ac29f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>abc53bdec35acb50820a3e4d62d01d41f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>ac975dc606320999e3f0c51436f0d625f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a7d833513935c4a5259823c20c94fc642</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a6874efe80822800ab1cdbffd9996d739</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a66ea83ed263cda59f18026c3c613349b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a04bce3079078a493936f4373c4d649d4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a639c38bcae4c8be8801af214f619b169</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a5546aa2f2d528f61da4219579640e4b0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a4647c48a8a00b64b032c237c85d30ba4</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a317a2e5911e33bfbf144bfde89e03cf1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>a52411ee0d453d687de22bcf80f4fcac2</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataNormOpsReal.html</anchorfile>
      <anchor>aa252d7d929481f4cb8ab782072cba394</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::FaceData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</filename>
    <base>PatchFaceDataBasicOps&lt; dcomplex &gt;</base>
    <base>SAMRAI::math::PatchFaceDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>a4bd950275c976de6d15164b39b30c98b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>aad9d6f2f022b0dc4090155ddfe6a6f43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>a70c8ff99e2ff77c9a3368b52ca5f9257</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>ac0debce86d7a485929936c7d8331413b</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>a5777dc14723baccc664fd0e1ba56eed5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsComplex.html</anchorfile>
      <anchor>af4456cafbfcf0235d4be2b6919902bf2</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</filename>
    <base>PatchFaceDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>ab143b3340babe26b0268f20215da13f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>ad3df30b54035bae5cffc4defa841492a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>a06f0d4341d87a5cb996916de8de2ece2</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>aed418d867cf6438956db36cd0bd0841a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>ac0a7e22a4bf657758b54decc37c5c0cf</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>a24c5ab9629352ef87bec0c963ab6fe6c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>a723564b2cfc8190f5a4fc7bfb7d298b8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsInteger.html</anchorfile>
      <anchor>a26209d3c6bb9f1f917dc0b14485b8ccc</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchFaceDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</filename>
    <templarg></templarg>
    <base>SAMRAI::math::PatchFaceDataBasicOps</base>
    <base>SAMRAI::math::PatchFaceDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchFaceDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>ae2cab18bb76b157b58d1f164bfab38e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchFaceDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>a74ee463825408d2afa8bf73f22403b1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>a845f0764236d8c9838f490eb9a4a146f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>a01f5f35b079d5e8b1c0b6d3d33690788</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>aedda30a24a5661b780b0562b4151b6b8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchFaceDataOpsReal.html</anchorfile>
      <anchor>a429e43be82270d8b78bdb5a28bacf1e0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::FaceData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a00e9a9e969cf0a3010ebec42d2ba68d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a1f1be645f5d660dcb45a11d3b3d237b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>abcfeadd140161917139728d3130d03a4</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a3f01cf7dfe71f5fbcfa8aab542f5f105</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a9693c09ae659ef6e3899d37e37273d3b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a6be09f89e9e923420146abc4fe0efc61</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>aa2999e9d179b9074a5925e8b2d053973</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a21893ee770fbebb0dfc987f25e0aebb0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a7fa9bee812630cbbd1171e39250568a8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>af3d364e2f2267f4c9aae9f2818d2a2d8</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>aaf16da6d5f2685527884ff1509162192</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>abffacd8869dd6d77ba160e05533613bd</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>a616a856871980589c629bac25528dcce</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>afd2889d93e7e1bfeef221737b695dfaf</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataBasicOps.html</anchorfile>
      <anchor>add9e0c55a2e03ef35fa8b98fb1320122</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aa768132645987d8c2df88cbe055f6651</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a43dd4d8c3cdd1d98d45164abe2607c7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a69d963581d78986894138703c7460216</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a599c977f8edfdde87e8ad1c763c509ff</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a8852bb1d5d0d5d55ec1ac67ad017ad2b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a48dade749e79509df16437e1d092551c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>aaed2dc31d2c66069691184fb2156a1c5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a7765f182fac61ac04be9e433986f4865</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a0369a9d0c5933c9ee8fc572b1ea82ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a12e22fd1e91d4397912e504f500949f0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>ab15d523384f68e4e638511d2ac80e9e0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>ab8e50cc879f850c45dcd77781e1553cf</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a8d773c442cc1abb9fd6b73682b1a0ac5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a785cc92d0db96bc109fa775e2fda4713</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>aabb73964a77b116510c3fd2017b4f6ec</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>ace849489a1368a8b21c7fe872eeac62c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>aa3f8b14ef1bcd85b58de7956b06f8ebb</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a68b0c35509fcb9f0c3db3eb502c72a21</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a870b17f885168664a8c28ef743abd56f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsComplex.html</anchorfile>
      <anchor>a3d77f786c95a84ca28061e70fb9d4980</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a27038b8d8b8683e7aac9c6cea847cfec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a78a53942a470492a7ecbbb4313b8d51e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a240abe0ca59dcabd31539b16c3082fdc</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>ad7044093d1e40a0fa7a60f6b14560562</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a5889bb89d717d220c9be622014b1c6cd</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>acf87c48eb5b3628248894a16e45d1420</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>ad1fa4783b40bc423496ef008451d8f70</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>ac28e4a538f03fc67852e521b5ed25bd0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a2717935daa20217eb8ab28159ec38afe</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>aa8112f52b0b17f9e4caf484920f5b590</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a15ba9ebf2140f308a9b21d0ecc4e0304</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>afbd48f30a2bc15fe333a82f5d49a7488</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataNormOpsReal.html</anchorfile>
      <anchor>a6a7b0ea6e2ff3acf0234acfcbb78104c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::NodeData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</filename>
    <base>PatchNodeDataBasicOps&lt; dcomplex &gt;</base>
    <base>SAMRAI::math::PatchNodeDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>a824e85ee8c2c07b605ed3940f28cd242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>a10158a5c2ceab4d4b04e20213d85483a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>a345bb704456a18b15de22020ca4f087f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>ae3133cdd66d0aa8397fca3689d41787b</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>ae3ac413fbaa770f52a5b496b1cf8475c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsComplex.html</anchorfile>
      <anchor>a522085dd1db4369ae2ffa75612fd323f</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</filename>
    <base>PatchNodeDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>ace73805fd736e4dff0f7be1f69e657cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>aa31af0021eb27b517b7d40c72ad05e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>a1286284b88286c62ef0dcc4630bf620d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>accea92c62f4c83bf2b192b3aeed52a67</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>a0a837372b6cd2c6ce5225e9ff92f0430</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>a8d98541ad8bbdc77d3b18d5c13d28f0e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>a71da966aa607565997c51f02577b832b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsInteger.html</anchorfile>
      <anchor>aa80ba561e46736457d3a32393367629e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchNodeDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</filename>
    <templarg></templarg>
    <base>SAMRAI::math::PatchNodeDataBasicOps</base>
    <base>SAMRAI::math::PatchNodeDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchNodeDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>a02592f39f921205dec612250ed90a26e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchNodeDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>a76ce9ae8cbc3571e768323e4b7e63f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>ac94ac5c37ba7ecab553dad4c19f111e3</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>abd5c418bbd491ece6ee7b47d368ad65d</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>afd1ea9e0e5ce60bf374c72ee940926be</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchNodeDataOpsReal.html</anchorfile>
      <anchor>af5fc8613570f8465f9e0aee1ab87f18c</anchor>
      <arglist>(tbox::Pointer&lt; pdat::NodeData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataBasicOps</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchSideDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a957038f459a7869abe1c9b264d1b6c2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataBasicOps</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a3ec01161b626e572749a27547fe7a5b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>aff27753621377e1203b5ab13b243f2f0</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>aa1de8c7679589b912f5b24540e2d974a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a6d19f4a49949c97ec3a83b20e0b0ddf1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a6f3b51b06b922956d4b1fe34a0cb61cb</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>ab4d3102df872b8a069bfad8c715549de</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a7c3f930c86c0c75745407327fe97a407</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a178a7326e36e4eb18431349b8ae1988a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>ab6671bc84820a907a62b0d72e4672866</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const TYPE &amp;beta, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a2d8a4ea29855816085a974ca41e97719</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axmy</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a02f2b609979470d236630d1c9061d531</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src2, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>af1e23cbcc7a89d6c513b2dfdaf2e9278</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>ad00e2dc6fadeb1e671b720ea665f5e51</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataBasicOps.html</anchorfile>
      <anchor>a002bca01e2b2072fbab3ccbbc285540b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;width, const TYPE &amp;low, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataMiscellaneousOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchSideDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a2349f9633018895f52ed44083034c505</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataMiscellaneousOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>acfb1b2bb4b7a9f87f24b2f1e557112fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>afdbacf8b17dbd39eb2f84d7358dc851b</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a2082b044af52ee34bec5c4b7b4345276</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const TYPE &amp;alpha, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a9d2adf2d31b4411e658c8818e6f71a79</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a79c1ecc02e909696757f13ee1c704edb</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>minPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataMiscellaneousOpsReal.html</anchorfile>
      <anchor>a59de236e604a3ab9eadaa60028d1a88c</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;numer, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;denom, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataNormOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</filename>
    <member kind="function">
      <type></type>
      <name>PatchSideDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>aec6dbd425216378750b3e6a8464b1802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataNormOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>ac681212ac55e8166754b4f9b7485639f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a1c5d7703c2152b7dd81c273d4b3a24e0</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a55787ed689f3cca452bb7115865a4ef6</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a118a17a495bf53be48de42d940d01f77</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>af68ee227b34da90a748b48170bbd188a</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>affe512657bfddd21b6684a63c9f7d016</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>af71fd2314fe4e26ce29f956656dba25d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a94d12988e1620c19fafc226ae31d8cb2</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>ac930ebe58aea1ca215224f00d4cfca8d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a6cf8774441e757329e3251e8844fc37f</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a9b83cfb41544c088d0da987e8d29b6f9</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsComplex.html</anchorfile>
      <anchor>a2172d013b1378f4f96776a295ed9ddc1</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataNormOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>PatchSideDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a435ad742fda66db7e3432b9b7ec80562</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataNormOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>ac22a0364795a802ded560722d8451e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>ad34a8d072d7172abcc9a7823eb72036d</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sumControlVolumes</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a6003bd28498aa9103663a0f1cf3b5370</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; &amp;cvol, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a6c4ed89c19dd02222c84c697fedbb7c1</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a9555aa0a801eaca1a7f189ebf9ab7419</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>abb796f1cc8aac29ed05e176080d13349</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>ac4af25b608f0fb0181115a74c8edb859</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>ad7807ce68aa8a376bfe2f09e9926aa0e</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>abd3c1a0c3aa43417324172199e5d1501</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;weight, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a8ab833f24e3b98d9a759e0df9ed7f254</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a91e54c8a0c2baa48bdee4f84ff49e383</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data1, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data2, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; cvol=tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>integral</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataNormOpsReal.html</anchorfile>
      <anchor>a99a83626ef60d3a9d017eccd2b129626</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, const tbox::Pointer&lt; pdat::SideData&lt; double &gt; &gt; vol) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataOpsComplex</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</filename>
    <base>PatchSideDataBasicOps&lt; dcomplex &gt;</base>
    <base>SAMRAI::math::PatchSideDataNormOpsComplex</base>
    <member kind="function">
      <type></type>
      <name>PatchSideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>a701a025299fdb60cff320f2be3db447c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataOpsComplex</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>a8702f767a073ec8d8f39e25ec738ffd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>a287640f6d136d3e7ce773adee50532c4</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>aa8cf9dfd480a820307f3abef6b698675</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>a8fdd62a1cb59c24ffc114c6a894e23c5</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsComplex.html</anchorfile>
      <anchor>a515270af562000c90d2da23ae2f0c164</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; dcomplex &gt; &gt; &amp;dst, const dcomplex &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataOpsInteger</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</filename>
    <base>PatchSideDataBasicOps&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>PatchSideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>ab9e8cf54dc26e62e31ce86b412a5454e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataOpsInteger</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>abecbb54cf481922dc9b59defee956750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numberOfEntries</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>a22caaed30ceb816e4dfeebfa2118cda8</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>af90111b30eb583808960975db5e5332b</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>a9f9a96c90ba8e9aceabd75f9e0c025ea</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>a1552dd9bfd05c9406e0b9de68a90d1d7</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>af111a72231dff7e40d4254c754084878</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;dst, const int &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsInteger.html</anchorfile>
      <anchor>a4c37efd63949a7db71bfe21cb53ad9f7</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; int &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::math::PatchSideDataOpsReal</name>
    <filename>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::math::PatchSideDataBasicOps</base>
    <base>SAMRAI::math::PatchSideDataMiscellaneousOpsReal</base>
    <base>SAMRAI::math::PatchSideDataNormOpsReal</base>
    <member kind="function">
      <type></type>
      <name>PatchSideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>a107c674693369be3cb5116a9eae0fd3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchSideDataOpsReal</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>ac2c72590491faa913b44ec808f7f5a36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>ab39b389e4cd4b2728c0f21281ca5ebda</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;src, const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>ab82610e471d20515fc995147d5b8ccb6</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, const int data1_id, const int data2_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printData</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>a0c766183b57346b534415e7fd217c012</anchor>
      <arglist>(const tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;data, const hier::Box &amp;box, std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1math_1_1PatchSideDataOpsReal.html</anchorfile>
      <anchor>ace05e2f4c02884bd780b3c47c53e46f4</anchor>
      <arglist>(tbox::Pointer&lt; pdat::SideData&lt; TYPE &gt; &gt; &amp;dst, const TYPE &amp;alpha, const hier::Box &amp;box) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::mesh</name>
    <filename>namespaceSAMRAI_1_1mesh.html</filename>
    <class kind="struct">SAMRAI::mesh::BalanceUtilities</class>
    <class kind="class">SAMRAI::mesh::BergerRigoutsos</class>
    <class kind="class">SAMRAI::mesh::BergerRigoutsosNode</class>
    <class kind="class">SAMRAI::mesh::BoxGeneratorStrategy</class>
    <class kind="class">SAMRAI::mesh::ChopAndPackLoadBalancer</class>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithm</class>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmConnectorWidthRequestor</class>
    <class kind="class">SAMRAI::mesh::GriddingAlgorithmStrategy</class>
    <class kind="class">SAMRAI::mesh::LoadBalanceStrategy</class>
    <class kind="class">SAMRAI::mesh::MultiblockGriddingTagger</class>
    <class kind="class">SAMRAI::mesh::SpatialKey</class>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitialize</class>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitializeConnectorWidthRequestor</class>
    <class kind="class">SAMRAI::mesh::StandardTagAndInitStrategy</class>
    <class kind="class">SAMRAI::mesh::TagAndInitializeStrategy</class>
    <class kind="class">SAMRAI::mesh::TreeLoadBalancer</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>a9c82905b5f96e24b85545ce47c3e18ff</anchor>
      <arglist>(std::ostream &amp;s, const SpatialKey &amp;spatial_key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>GCD</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>ae1fa4be093def34c110b92efdd8da30d</anchor>
      <arglist>(const int a, const int b)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1mesh.html</anchorfile>
      <anchor>a50a6ce05b222e1b5814e2496d4415b0d</anchor>
      <arglist>(std::ostream &amp;co, const TreeLoadBalancer::BoxInTransit &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::mesh::BalanceUtilities</name>
    <filename>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>binPack</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>a55d9d6210a7cee43b83a45d6adb20376</anchor>
      <arglist>(hier::ProcessorMapping &amp;mapping, tbox::Array&lt; double &gt; &amp;weights, int nproc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>spatialBinPack</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>a7f3138f1458724afa23c724f039b234b</anchor>
      <arglist>(hier::ProcessorMapping &amp;mapping, tbox::Array&lt; double &gt; &amp;weights, hier::BoxContainer &amp;boxes, const int nproc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveBisectionUniform</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>ad313ba0f7115c6ca524c0346132031a5</anchor>
      <arglist>(hier::BoxContainer &amp;out_boxes, tbox::List&lt; double &gt; &amp;out_workloads, const hier::BoxContainer &amp;in_boxes, double ideal_workload, const double workload_tolerance, const hier::IntVector &amp;min_size, const hier::IntVector &amp;cut_factor, const hier::IntVector &amp;bad_interval, const hier::BoxContainer &amp;physical_domain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveBisectionNonuniform</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>aa6813ee945dd95b41e6321e96ca7fa9d</anchor>
      <arglist>(hier::BoxContainer &amp;out_boxes, tbox::List&lt; double &gt; &amp;out_workloads, const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;in_level, int work_id, double ideal_workload, const double workload_tolerance, const hier::IntVector &amp;min_size, const hier::IntVector &amp;cut_factor, const hier::IntVector &amp;bad_interval, const hier::BoxContainer &amp;physical_domain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeDomainDependentProcessorLayout</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>a96a40c7af2adca69a5a77261e30ce5cd</anchor>
      <arglist>(hier::IntVector &amp;proc_dist, int num_procs, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeDomainIndependentProcessorLayout</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>a0daffa849931598823d3f8a4f6be32c0</anchor>
      <arglist>(hier::IntVector &amp;proc_dist, int num_procs, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sortDescendingBoxWorkloads</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>aeba9d89b7f9a3c83c64054ae1fdead84</anchor>
      <arglist>(hier::BoxContainer &amp;boxes, tbox::Array&lt; double &gt; &amp;workload)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeNonUniformWorkload</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>af1407b0670483fd7c3fad5e98747ec33</anchor>
      <arglist>(tbox::Pointer&lt; hier::Patch &gt; patch, int wrk_indx, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>computeLoadBalanceEfficiency</name>
      <anchorfile>structSAMRAI_1_1mesh_1_1BalanceUtilities.html</anchorfile>
      <anchor>aab5e331b226ed112bcc39b4590a6ea87</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; &amp;level, std::ostream &amp;os, int workload_data_id=-1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::BergerRigoutsos</name>
    <filename>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</filename>
    <base>SAMRAI::mesh::BoxGeneratorStrategy</base>
    <member kind="function">
      <type></type>
      <name>BergerRigoutsos</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>a43139500b4650bfcb00e5fafb985ea2f</anchor>
      <arglist>(const tbox::Dimension &amp;dim, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BergerRigoutsos</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>aad3e23c0fa55497c3e504ec27da4c05c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPI</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>ab0e1d00ae91ba00f81503a4c73a213d4</anchor>
      <arglist>(const tbox::SAMRAI_MPI &amp;mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>findBoxesContainingTags</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsos.html</anchorfile>
      <anchor>a5df2be1de5f077daf49f95ae1d3f6262</anchor>
      <arglist>(hier::BoxLevel &amp;new_mapped_box_level, hier::Connector &amp;tag_to_new, hier::Connector &amp;new_to_tag, const tbox::Pointer&lt; hier::PatchLevel &gt; tag_level, const int tag_data_index, const int tag_val, const hier::Box &amp;bound_box, const hier::IntVector &amp;min_box, const double efficiency_tol, const double combine_tol, const hier::IntVector &amp;max_gcw, const hier::BlockId &amp;block_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::BergerRigoutsosNode</name>
    <filename>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</filename>
    <base protection="private">SAMRAI::tbox::AsyncCommStage::Handler</base>
    <member kind="enumeration">
      <name>OwnerMode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>afb503750e5a717ec47f3514d8be1c40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SINGLE_OWNER</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>afb503750e5a717ec47f3514d8be1c40daee9eefd32d233ba04eb0be8314e479d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MOST_OVERLAP</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>afb503750e5a717ec47f3514d8be1c40da6e6552337b83bee8954dcdfd6a6b9db7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FEWEST_OWNED</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>afb503750e5a717ec47f3514d8be1c40da7a999aa36e934965f645e176ed924366</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEAST_ACTIVE</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>afb503750e5a717ec47f3514d8be1c40da4e2b4e44e4b73093ee6e19b9f85fff12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <name>AlgoAdvanceMode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>af9e8bd21ae7978bbf06e68461f4aafaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADVANCE_ANY</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>af9e8bd21ae7978bbf06e68461f4aafafa9e6f6591016a2d3789fa93b113a3fdfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ADVANCE_SOME</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>af9e8bd21ae7978bbf06e68461f4aafafa45f58b8447a6047ae8df217a7f175340</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYNCHRONOUS</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>af9e8bd21ae7978bbf06e68461f4aafafa5ec049fdfd7bed289fe306421ff6d821</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BergerRigoutsosNode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>abaa0d17bf28f968c20dc0485722bd0ff</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const hier::BlockId &amp;block_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BergerRigoutsosNode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a944717daeee41b65586e332233b4f970</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setClusteringParameters</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>ae3edce8c3259c4ba9cc0fd6ee6757fa5</anchor>
      <arglist>(const int tag_data_index, const int tag_val, const hier::IntVector min_box, const double efficiency_tol, const double combine_tol, const hier::IntVector &amp;max_box_size, const double max_lap_cut_from_center)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clusterAndComputeRelationships</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a80dfd5ee74ceed5d36b0506e6a904331</anchor>
      <arglist>(hier::BoxLevel &amp;new_mapped_box_level, hier::Connector &amp;tag_to_new, hier::Connector &amp;new_to_tag, const hier::Box &amp;bound_box, const tbox::Pointer&lt; hier::PatchLevel &gt; tag_level, const tbox::SAMRAI_MPI &amp;mpi_object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlgorithmAdvanceMode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>aa69fae4b6523b886d4d3c1805c407166</anchor>
      <arglist>(const std::string &amp;algo_advance_mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOwnerMode</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>adb273b35b9df076efeed2fb97e454f2d</anchor>
      <arglist>(const std::string &amp;mode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComputeRelationships</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>ace1215ee07de3663dab6fbc81bdacab4</anchor>
      <arglist>(const std::string mode, const hier::IntVector &amp;ghost_cell_width)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>ab54b0bd432224c833898d955b8153bd3</anchor>
      <arglist>(std::ostream &amp;os, int detail_level=0) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumTags</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>aa6989632b46acf6d42752a9e1425cd89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxTagsOwned</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a37d34cd863833bab65ca6f28345e54de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNodes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>abdff101a874f27a4be5b191cd832ab49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxGeneration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a79753145b155ca6198f3876d18eb47a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxOwnership</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a12f5359ec8a8229b45fe3628a8e742b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAvgNumberOfCont</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>aa62e4915abfefed8f925c234b3f47747</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNumberOfCont</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a9977a58036e37c615314c14e9d21eb90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumBoxesGenerated</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a7b14d8340c9b12deeab61a04d0dead8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogNodeHistory</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BergerRigoutsosNode.html</anchorfile>
      <anchor>a2d840c0d5429a0fff2e787ce7b2665de</anchor>
      <arglist>(bool flag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::BoxGeneratorStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>BoxGeneratorStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</anchorfile>
      <anchor>a3b0be96fcf15fe7d7d19bce9ba0a9dfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxGeneratorStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</anchorfile>
      <anchor>a368ab115138f4b08e36109fc7a83c3da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>findBoxesContainingTags</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1BoxGeneratorStrategy.html</anchorfile>
      <anchor>aeeecfa1f2d4592a1b68b5edde17b6fb1</anchor>
      <arglist>(hier::BoxLevel &amp;new_mapped_box_level, hier::Connector &amp;tag_to_new, hier::Connector &amp;new_to_tag, const tbox::Pointer&lt; hier::PatchLevel &gt; tag_level, const int tag_data_index, const int tag_val, const hier::Box &amp;bound_box, const hier::IntVector &amp;min_box, const double efficiency_tol, const double combine_tol, const hier::IntVector &amp;max_gcw, const hier::BlockId &amp;block_id) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::ChopAndPackLoadBalancer</name>
    <filename>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</filename>
    <base>SAMRAI::mesh::LoadBalanceStrategy</base>
    <member kind="function">
      <type></type>
      <name>ChopAndPackLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>af971714456f7abc4c43ef02d1489ca77</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChopAndPackLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a71943b79a5a3677d011f47f3bf2efeb7</anchor>
      <arglist>(const tbox::Dimension &amp;dim, tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChopAndPackLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>acd41326c1c4d12e357dc650d157fb5ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxWorkloadFactor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>aab2e2831967c3e4482ed2eaef2ef8999</anchor>
      <arglist>(double factor, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkloadTolerance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>adeec05d7ac32c2468e3963192a87551e</anchor>
      <arglist>(double tolerance, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkloadPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a9524bc66b85f61dbd26c479196c10158</anchor>
      <arglist>(int data_id, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniformWorkload</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>af503a774c77b183266a33e6652cc266d</anchor>
      <arglist>(int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBinPackMethod</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a50508f23058665b53d34f29415f23865</anchor>
      <arglist>(const std::string &amp;method, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIgnoreLevelDomainIsSingleBox</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a8452f55919adee2a7465e590e7b0a05b</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLoadBalanceDependsOnPatchData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a2156edcd6cccc24337965fddf91d69b1</anchor>
      <arglist>(int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadBalanceBoxLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a529fd0b06d43b9b70ab9223128e52550</anchor>
      <arglist>(hier::BoxLevel &amp;balance_mapped_box_level, hier::Connector &amp;balance_to_anchor, hier::Connector &amp;anchor_to_balance, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const hier::Connector &amp;unbalanced_to_attractor, const hier::Connector &amp;attractor_to_unbalanced, const hier::IntVector &amp;min_size, const hier::IntVector &amp;max_size, const hier::BoxLevel &amp;domain_mapped_box_level, const hier::IntVector &amp;bad_interval, const hier::IntVector &amp;cut_factor, const tbox::RankGroup &amp;rank_group=tbox::RankGroup()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>ada9d5dcc91582715f5a3b9d5390240ee</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1ChopAndPackLoadBalancer.html</anchorfile>
      <anchor>a893bee76835b9a0095ac2219fcf1eb09</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::GriddingAlgorithm</name>
    <filename>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</filename>
    <base>SAMRAI::mesh::GriddingAlgorithmStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>GriddingAlgorithm</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a105727711d05790693caf1ba60680ec4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; &amp;hierarchy, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, tbox::Pointer&lt; TagAndInitializeStrategy &gt; level_strategy, tbox::Pointer&lt; BoxGeneratorStrategy &gt; generator, tbox::Pointer&lt; LoadBalanceStrategy &gt; balancer, tbox::Pointer&lt; LoadBalanceStrategy &gt; balancer_zero=tbox::Pointer&lt; LoadBalanceStrategy &gt;(NULL), bool register_for_restart=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GriddingAlgorithm</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a7b3401878060600679ef361620847624</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a0dc18630ab497fca0bdfd135bf35d9cb</anchor>
      <arglist>(const double level_time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>makeFinerLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a81b14b1374e8d2acb1fb5da1362ae332</anchor>
      <arglist>(const double level_time, const bool initial_time, const int tag_buffer, const double regrid_start_time=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>regridAllFinerLevels</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a0d6a2e0fb0489c348f266c09be7e1763</anchor>
      <arglist>(const int level_number, const double regrid_time, const tbox::Array&lt; int &gt; &amp;tag_buffer, tbox::Array&lt; double &gt; regrid_start_time=tbox::Array&lt; double &gt;(), const bool level_is_coarsest_to_sync=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; TagAndInitializeStrategy &gt;</type>
      <name>getTagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a6ff26772b34713ac6ba9752da2ed98b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; LoadBalanceStrategy &gt;</type>
      <name>getLoadBalanceStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a4f4a9fd7cbe7842253a6be17ab34b76d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; LoadBalanceStrategy &gt;</type>
      <name>getLoadBalanceStrategyZero</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a29950f6bda051427e6ddbe96490d4c4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEfficiencyTolerance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a8ca51cec4cc7d163146cffb0c986e7f4</anchor>
      <arglist>(const double efficiency_tolerance, const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEfficiencyTolerance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a916544f16374a8eb07dadf6b46209d02</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCombineEfficiency</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>ada9b35871a86c0dd0d28a741ed4a0545</anchor>
      <arglist>(const double combine_efficiency, const int level_number)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCombineEfficiency</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a78b9e57454fd5a4f3732acb424345269</anchor>
      <arglist>(const int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a03626fddf498bb5d5d2a4049f5bf80f2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>ab238308606cd22a7b9b8aafbb447e296</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithm.html</anchorfile>
      <anchor>a2ee22b4801e5f37e63447dc7490bf8e0</anchor>
      <arglist>(std::ostream &amp;s=tbox::plog) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::GriddingAlgorithmConnectorWidthRequestor</name>
    <filename>classSAMRAI_1_1mesh_1_1GriddingAlgorithmConnectorWidthRequestor.html</filename>
    <base>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</base>
    <member kind="function">
      <type></type>
      <name>GriddingAlgorithmConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmConnectorWidthRequestor.html</anchorfile>
      <anchor>a8bd1dd8d48aa3a236362fff601868775</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmConnectorWidthRequestor.html</anchorfile>
      <anchor>ab29d7f84b05926a980717646e7a16dae</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const hier::PatchHierarchy &amp;patch_hierarchy) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::GriddingAlgorithmStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>GriddingAlgorithmStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>ac66a495166fdc78a84fe45848e09bea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GriddingAlgorithmStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>a3fdec568dce1e9d3d2d6f854ae2842f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>makeCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>abc3105d7f7328bc1a0b4e99e37924d73</anchor>
      <arglist>(const double level_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>makeFinerLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>ac8a0816df08b68f4785a5bbb2d3c24e0</anchor>
      <arglist>(const double level_time, const bool initial_time, const int tag_buffer, const double regrid_start_time=0.0)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>regridAllFinerLevels</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>ad02502d3aa08611787616c039b0f9ce7</anchor>
      <arglist>(const int level_number, const double regrid_time, const tbox::Array&lt; int &gt; &amp;tag_buffer, tbox::Array&lt; double &gt; regrid_start_time=tbox::Array&lt; double &gt;(), const bool level_is_coarsest_to_sync=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; TagAndInitializeStrategy &gt;</type>
      <name>getTagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1GriddingAlgorithmStrategy.html</anchorfile>
      <anchor>a9b246b008ecca77a449cab8e5dbb1f38</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::LoadBalanceStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LoadBalanceStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>a7886ea19b472581a014744d1fb5ad5a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getLoadBalanceDependsOnPatchData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>a26cddcc6d628372374dd30549800bfc5</anchor>
      <arglist>(int level_number) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>loadBalanceBoxLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>aa7a534291b2009f14179e0179b012900</anchor>
      <arglist>(hier::BoxLevel &amp;balance_mapped_box_level, hier::Connector &amp;balance_to_anchor, hier::Connector &amp;anchor_to_balance, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const hier::Connector &amp;unbalanced_to_attractor, const hier::Connector &amp;attractor_to_unbalanced, const hier::IntVector &amp;min_size, const hier::IntVector &amp;max_size, const hier::BoxLevel &amp;domain_mapped_box_level, const hier::IntVector &amp;bad_interval, const hier::IntVector &amp;cut_factor, const tbox::RankGroup &amp;rank_group=tbox::RankGroup()) const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAndReportLoadBalance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>ab350099ec4854c755f383309a66e8413</anchor>
      <arglist>(double local_workload, const tbox::SAMRAI_MPI &amp;mpi, std::ostream &amp;output_stream=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAndReportLoadBalance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>a4ad9b348b452e65466c577ac72899d86</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;local_loads, const tbox::SAMRAI_MPI &amp;mpi, std::ostream &amp;output_stream=tbox::plog) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LoadBalanceStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>af80c05053dd84aac72b9f0b5d912be33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>markLoadForPostprocessing</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>a4d2509cc7c30c8364dc1de602b05b636</anchor>
      <arglist>(int rank, double load, int nbox)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>reportLoadBalance</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1LoadBalanceStrategy.html</anchorfile>
      <anchor>a427b90ccd9c1f2f4c7ebc06a16196614</anchor>
      <arglist>(const std::vector&lt; double &gt; &amp;workloads, std::ostream &amp;output_stream)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::MultiblockGriddingTagger</name>
    <filename>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>MultiblockGriddingTagger</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>adb948f561f75511c5b7f8a5130b1991f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockGriddingTagger</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>aad77f88aa892f34ef12c0bb1e64aed99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setScratchTagPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>abc07f67ae2ef738f6bb7a3242e0e2ac4</anchor>
      <arglist>(int buf_tag_indx)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>addac72566ababdfd15eb95987b89fdb8</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSingularityBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>afe2421072964bb6b4d0337d4bc69e57f</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::PatchLevel &amp;encon_level, const hier::Connector &amp;dst_to_encon, const double fill_time, const hier::Box &amp;fill_box, const hier::BoundaryBox &amp;boundary_box, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;grid_geometry)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>ab96b1de7a6d058314bab32956a467050</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>a2ef5566a19d75a04a415ca6988306c1c</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1MultiblockGriddingTagger.html</anchorfile>
      <anchor>a203981543aaed716ea9d6b997fb877ab</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::SpatialKey</name>
    <filename>classSAMRAI_1_1mesh_1_1SpatialKey.html</filename>
    <member kind="function">
      <type></type>
      <name>SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a07e6a04edf9d082f962c65b3e91a01a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a07901ca7bea8fb196d515f2f5acf1189</anchor>
      <arglist>(const unsigned int i, const unsigned int j=0, const unsigned int k=0, const unsigned int level_num=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a5e7c2d43017eb3df6fe4c2efb14c759f</anchor>
      <arglist>(const SpatialKey &amp;spatial_key)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpatialKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>ae591291d8e5b79313cec6360a90a9ba4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SpatialKey &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>ae03cea6e42a9d3c4751542a47818d1cc</anchor>
      <arglist>(const SpatialKey &amp;spatial_key)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a39aee9c3b4a36a0c3d55d8969db9e796</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>ac1545d49dce39ccb1e18082df71dd72b</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a320742579299911af4679e7a410cfbe8</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a65d1c4f8a4ba94878fee4d9f8dcfe467</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a0ff9a42043fae90c0158d8f390f3e2ea</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>ac6848eaa9f9215e8c749a7838588abc6</anchor>
      <arglist>(const SpatialKey &amp;spatial_key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToZero</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a4503d187f85ccdf8942ff4cdf33e052d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKey</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a42f56122d5bfb926d5617a4ea24477a0</anchor>
      <arglist>(const unsigned int i=0, const unsigned int j=0, const unsigned int k=0, const unsigned int level_num=0)</arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1SpatialKey.html</anchorfile>
      <anchor>a871dd53761e64ccd765418d20211abe6</anchor>
      <arglist>(std::ostream &amp;s, const SpatialKey &amp;spatial_key)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::StandardTagAndInitialize</name>
    <filename>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</filename>
    <base>SAMRAI::mesh::TagAndInitializeStrategy</base>
    <member kind="function">
      <type></type>
      <name>StandardTagAndInitialize</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>ae21c0d026d841423e48564641a24c1e1</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, StandardTagAndInitStrategy *tag_strategy, tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardTagAndInitialize</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a31bef95da25d18cbaa7f0bc2bd744cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>usesTimeIntegration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>aa37bad8803c2517f18870416c4cb75b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getErrorCoarsenRatio</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a56b857ba74292787263282af5d4f982f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkCoarsenRatios</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>ab8946fcbdcf2b7834f4eabfea3d77031</anchor>
      <arglist>(const tbox::Array&lt; hier::IntVector &gt; &amp;ratio_to_coarser)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a591066d7188190bc9dd0c1a8638b02a8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a0999d97d30eb90586f7f963309efb5da</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preprocessErrorEstimation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a8d224f2de61a24253172cb360d9dd2f1</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double regrid_time, const double regrid_start_time, const bool initial_time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>tagCellsForRefinement</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a1e179e3b0ca1e1d4e0b24ede76ad1023</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; level, const int level_number, const double regrid_time, const int tag_index, const bool initial_time, const bool coarsest_sync_level, const bool can_be_refined, const double regrid_start_time=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>coarsestLevelBoxesOK</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>af53f4c1917212a5843340f9bea138c21</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>refineUserBoxInputOnly</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>aa8be9cbf84d5f4098dc1cb2c3c6fb0df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOnGradientDetector</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>ac5bf78fa8de312073656d0ae0e125854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffGradientDetector</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>af8cff7c5c287387f7ceacfe7330b58cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOnRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>aa6af5f98595685e2e8eba9962634a399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>aa6b2244ca47ce8fc7d6e5615f99bdc37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOnRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a37cf8227883b99bea83ca122d4f16659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>turnOffRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>ab358bad2f9322b66543ad4a29e52efc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a11b6e04565eac68c4e9a9fc0c79fb3b8</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const StandardTagAndInitializeConnectorWidthRequestor &amp;</type>
      <name>getConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitialize.html</anchorfile>
      <anchor>a1d2e39a4da1cac7ab7caee96911bb311</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::StandardTagAndInitializeConnectorWidthRequestor</name>
    <filename>classSAMRAI_1_1mesh_1_1StandardTagAndInitializeConnectorWidthRequestor.html</filename>
    <base>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</base>
    <member kind="function">
      <type></type>
      <name>StandardTagAndInitializeConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitializeConnectorWidthRequestor.html</anchorfile>
      <anchor>a3ec4c9baa669a9872922e1d78b270f94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitializeConnectorWidthRequestor.html</anchorfile>
      <anchor>a3f11b2f51462417606869467bebfeb82</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const hier::PatchHierarchy &amp;patch_hierarchy) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::StandardTagAndInitStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>StandardTagAndInitStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>af50f6ecbfd9602e3d99a2cce964ab480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardTagAndInitStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a12bf9c5051030766b26d4f1817cc8209</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getLevelDt</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a92c2928ea9f4f390517daf2198c59dc5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double dt_time, const bool initial_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>advanceLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a3be5bd62a311a80acd910c8532d01e5f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const double current_time, const double new_time, const bool first_step, const bool last_step, const bool regrid_advance=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetTimeDependentData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>ac8742211a56df9a75abbce4c4ff8f3ad</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double new_time, const bool can_be_refined)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetDataToPreadvanceState</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a96fe790dcfc0655aec34204296112882</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a3e5339378aff05cb5128ace280c75492</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>ad4373f982bf5410c9d39a343af8eeb7d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyGradientDetector</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a38c5818648a282323630461258365ae5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double error_data_time, const int tag_index, const bool initial_time, const bool uses_richardson_extrapolation_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>ad2765c6370bddff677e45c8d6d3e6e8b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchLevel &gt; level, const double error_data_time, const int tag_index, const double deltat, const int error_coarsen_ratio, const bool initial_time, const bool uses_gradient_detector_too)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>coarsenDataForRichardsonExtrapolation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1StandardTagAndInitStrategy.html</anchorfile>
      <anchor>a76485c8a7858264370c612dde86539dc</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const tbox::Pointer&lt; hier::PatchLevel &gt; coarser_level, const double coarsen_data_time, const bool before_advance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::TagAndInitializeStrategy</name>
    <filename>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>TagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a1138c0345bf51f7a3890de8e37f5b0e7</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TagAndInitializeStrategy</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a0881bc7aed70fbc3a4b243b0604eeaf6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUserSuppliedRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>accb27ac71663af2e17b40afd6f0c70cb</anchor>
      <arglist>(hier::BoxContainer &amp;refine_boxes, const int level_number, const double time)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>aa47e433dc0d17bff215e7d40b0e5e098</anchor>
      <arglist>(const hier::BoxContainer &amp;refine_boxes, const int level_number)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeLevelData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a901e3ca16f820817bd942b5dbadbd1f2</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double init_data_time, const bool can_be_refined, const bool initial_time, const tbox::Pointer&lt; hier::PatchLevel &gt; old_level=tbox::Pointer&lt; hier::PatchLevel &gt;(NULL), const bool allocate_data=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>resetHierarchyConfiguration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>acb9f9b6aa478936f4e61a633512ce627</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>tagCellsForRefinement</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a031b72a3db8e91a0ba6cdd273fa53b54</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double error_data_time, const int tag_index, const bool initial_time, const bool coarsest_sync_level, const bool can_be_refined=true, const double regrid_start_time=0.)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preprocessErrorEstimation</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a71e3d50cb43d470a43942795013907dd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const double regrid_time, const double regrid_start_time, const bool initial_time)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>usesTimeIntegration</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>af5ccf5a6ba4eabdceec9a3034c143f4d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>coarsestLevelBoxesOK</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a967073f61726ab146b080cf95ec8c781</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getErrorCoarsenRatio</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>abc0948d08ac24bb58fab8aae9428fa08</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>checkCoarsenRatios</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a3cd49ff5f8c41fb0992e6eace8b98093</anchor>
      <arglist>(const tbox::Array&lt; hier::IntVector &gt; &amp;ratio_to_coarser)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>refineUserBoxInputOnly</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a6b380005527a3a2d1ab28acdb2de5112</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a70092237f197ccebaffa91174143432a</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a118ea6de7b5767fd9cad35c7fc2ccfe1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TagAndInitializeStrategy.html</anchorfile>
      <anchor>a3fd93a38d203f6fc984b99db0f0bf595</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::mesh::TreeLoadBalancer</name>
    <filename>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</filename>
    <base>SAMRAI::mesh::LoadBalanceStrategy</base>
    <member kind="function">
      <type></type>
      <name>TreeLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a2fcfa1d7b73f3a82f65daf74baf5aac7</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name=std::string(&quot;TreeLoadBalancer&quot;), tbox::Pointer&lt; tbox::Database &gt; input_db=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TreeLoadBalancer</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a7e1a6278260a4eafebd5398fac659f4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSAMRAI_MPI</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a04d3cffd4ab53b845f8d30ef9d6ace77</anchor>
      <arglist>(const tbox::SAMRAI_MPI &amp;samrai_mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeMPICommunicator</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a80ea043fa9206101bebae0be445276be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorkloadPatchDataIndex</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a276c34aadbf791b21b53d38ca4a3004a</anchor>
      <arglist>(int data_id, int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniformWorkload</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a17623daf91eaa5a4fcf7d185258bddb4</anchor>
      <arglist>(int level_number=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLoadBalanceDependsOnPatchData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a9e4de5cd3e0abdb81dff88323e7093ad</anchor>
      <arglist>(int level_number) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>loadBalanceBoxLevel</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a8021d9d112fcd0f81d34860434dbc469</anchor>
      <arglist>(hier::BoxLevel &amp;balance_box_level, hier::Connector &amp;balance_to_anchor, hier::Connector &amp;anchor_to_balance, const tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int level_number, const hier::Connector &amp;unbalanced_to_attractor, const hier::Connector &amp;attractor_to_unbalanced, const hier::IntVector &amp;min_size, const hier::IntVector &amp;max_size, const hier::BoxLevel &amp;domain_box_level, const hier::IntVector &amp;bad_interval, const hier::IntVector &amp;cut_factor, const tbox::RankGroup &amp;=tbox::RankGroup()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>aedb50d9a591ac8be8c9fa78d5eb001a1</anchor>
      <arglist>(std::ostream &amp;output_stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>abc235fca30ace51cb343170a4d22d5f8</anchor>
      <arglist>(std::ostream &amp;output_stream=tbox::plog) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1mesh_1_1TreeLoadBalancer.html</anchorfile>
      <anchor>a0d6e84cb8642a5203c4e1cd802383d91</anchor>
      <arglist>(std::ostream &amp;co, const BoxInTransit &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::pdat</name>
    <filename>namespaceSAMRAI_1_1pdat.html</filename>
    <class kind="class">SAMRAI::pdat::ArrayData</class>
    <class kind="class">SAMRAI::pdat::ArrayDataAccess</class>
    <class kind="class">SAMRAI::pdat::ArrayDataIterator</class>
    <class kind="class">SAMRAI::pdat::ArrayDataOperationUtilities</class>
    <class kind="class">SAMRAI::pdat::CellComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::CellData</class>
    <class kind="class">SAMRAI::pdat::CellDataFactory</class>
    <class kind="class">SAMRAI::pdat::CellDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::CellFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::CellGeometry</class>
    <class kind="class">SAMRAI::pdat::CellIndex</class>
    <class kind="class">SAMRAI::pdat::CellIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::CellIterator</class>
    <class kind="class">SAMRAI::pdat::CellOverlap</class>
    <class kind="class">SAMRAI::pdat::CellVariable</class>
    <class kind="class">SAMRAI::pdat::CopyOperation</class>
    <class kind="class">SAMRAI::pdat::DoubleAttributeId</class>
    <class kind="class">SAMRAI::pdat::EdgeComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::EdgeData</class>
    <class kind="class">SAMRAI::pdat::EdgeDataFactory</class>
    <class kind="class">SAMRAI::pdat::EdgeDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::EdgeFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::EdgeGeometry</class>
    <class kind="class">SAMRAI::pdat::EdgeIndex</class>
    <class kind="class">SAMRAI::pdat::EdgeIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::EdgeIterator</class>
    <class kind="class">SAMRAI::pdat::EdgeOverlap</class>
    <class kind="class">SAMRAI::pdat::EdgeVariable</class>
    <class kind="class">SAMRAI::pdat::FaceComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::FaceData</class>
    <class kind="class">SAMRAI::pdat::FaceDataFactory</class>
    <class kind="class">SAMRAI::pdat::FaceDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::FaceFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::FaceGeometry</class>
    <class kind="class">SAMRAI::pdat::FaceIndex</class>
    <class kind="class">SAMRAI::pdat::FaceIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::FaceIterator</class>
    <class kind="class">SAMRAI::pdat::FaceOverlap</class>
    <class kind="class">SAMRAI::pdat::FaceVariable</class>
    <class kind="class">SAMRAI::pdat::FirstLayerCellNoCornersVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::FirstLayerCellVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::FirstLayerNodeVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::IndexData</class>
    <class kind="class">SAMRAI::pdat::IndexDataNode</class>
    <class kind="class">SAMRAI::pdat::IndexIterator</class>
    <class kind="class">SAMRAI::pdat::IndexDataFactory</class>
    <class kind="class">SAMRAI::pdat::IndexVariable</class>
    <class kind="class">SAMRAI::pdat::IntegerAttributeId</class>
    <class kind="class">SAMRAI::pdat::MultiblockCellDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockEdgeDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockFaceDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockNodeDataTranslator</class>
    <class kind="class">SAMRAI::pdat::MultiblockSideDataTranslator</class>
    <class kind="class">SAMRAI::pdat::NodeComplexInjection</class>
    <class kind="class">SAMRAI::pdat::NodeComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::NodeData</class>
    <class kind="class">SAMRAI::pdat::NodeDataFactory</class>
    <class kind="class">SAMRAI::pdat::NodeDoubleInjection</class>
    <class kind="class">SAMRAI::pdat::NodeDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::NodeFloatInjection</class>
    <class kind="class">SAMRAI::pdat::NodeFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::NodeGeometry</class>
    <class kind="class">SAMRAI::pdat::NodeIndex</class>
    <class kind="class">SAMRAI::pdat::NodeIntegerInjection</class>
    <class kind="class">SAMRAI::pdat::NodeIterator</class>
    <class kind="class">SAMRAI::pdat::NodeOverlap</class>
    <class kind="class">SAMRAI::pdat::NodeVariable</class>
    <class kind="class">SAMRAI::pdat::OuteredgeData</class>
    <class kind="class">SAMRAI::pdat::OuteredgeDataFactory</class>
    <class kind="class">SAMRAI::pdat::OuteredgeGeometry</class>
    <class kind="class">SAMRAI::pdat::OuteredgeVariable</class>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OuterfaceData</class>
    <class kind="class">SAMRAI::pdat::OuterfaceDataFactory</class>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OuterfaceGeometry</class>
    <class kind="class">SAMRAI::pdat::OuterfaceIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::OuterfaceVariable</class>
    <class kind="class">SAMRAI::pdat::OuternodeData</class>
    <class kind="class">SAMRAI::pdat::OuternodeDataFactory</class>
    <class kind="class">SAMRAI::pdat::OuternodeDoubleConstantCoarsen</class>
    <class kind="class">SAMRAI::pdat::OuternodeGeometry</class>
    <class kind="class">SAMRAI::pdat::OuternodeVariable</class>
    <class kind="class">SAMRAI::pdat::OutersideComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OutersideData</class>
    <class kind="class">SAMRAI::pdat::OutersideDataFactory</class>
    <class kind="class">SAMRAI::pdat::OutersideDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OutersideFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::OutersideGeometry</class>
    <class kind="class">SAMRAI::pdat::OutersideVariable</class>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeNoCornersVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::SecondLayerNodeVariableFillPattern</class>
    <class kind="class">SAMRAI::pdat::SideComplexConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideComplexLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::SideData</class>
    <class kind="class">SAMRAI::pdat::SideDataFactory</class>
    <class kind="class">SAMRAI::pdat::SideDoubleConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideDoubleLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::SideFloatConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideFloatLinearTimeInterpolateOp</class>
    <class kind="class">SAMRAI::pdat::SideGeometry</class>
    <class kind="class">SAMRAI::pdat::SideIndex</class>
    <class kind="class">SAMRAI::pdat::SideIntegerConstantRefine</class>
    <class kind="class">SAMRAI::pdat::SideIterator</class>
    <class kind="class">SAMRAI::pdat::SideOverlap</class>
    <class kind="class">SAMRAI::pdat::SideVariable</class>
    <class kind="class">SAMRAI::pdat::SumOperation</class>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayData</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayData.html</filename>
    <templarg>TYPE</templarg>
    <member kind="typedef">
      <type>ArrayDataIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aa61808c477b736e2de82651519394fbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a6100accb1d0e498a5befc8146090a11d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a55730c0a57e92e7873fab0a0067cc894</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a35c56024c6c190d0dd8a1d06b3317dc9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeArray</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aab9de2b2ed03a4244a02bbbac9b6e71c</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aeae47f59083d36bc2dabb4b1df111160</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>undefineData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ac7a19caf53e71e3f71aff559bdaac39e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a170ddbbf609c3cab8e3347796f37aba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a9e6c92db05257e61627836811f70a554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>af05ee46e60cfb1d462db9177fea7cbf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a4bf93371e0b96c84ff92e628c2272a69</anchor>
      <arglist>(const int d=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a796e446d3bc580a1be7900c904ee3e96</anchor>
      <arglist>(const int d=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ae07481f4ceef5776e13e93e7c66a452a</anchor>
      <arglist>(const hier::Index &amp;i, const int d)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aec289ce0610f674ece5a1b37f8ba1474</anchor>
      <arglist>(const hier::Index &amp;i, const int d) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a1f95dbc4aa63153b64793cff7b5e3245</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a630b971ca04cf416888eb907208dfc0f</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ac7d9dd6fe2177de262d9a4d7d37d6701</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::BoxContainer &amp;boxes, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aa72f530b68dcce8e62a89da0c2d5a8e4</anchor>
      <arglist>(int dst_depth, const ArrayData&lt; TYPE &gt; &amp;src, int src_depth, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aef60177ead7c3614f062590f7712609f</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>af41f9d64e0345c2ac79a2dcb0514d779</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>acfecc435a4deb40a8d854057e80a6ad0</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;src, const hier::BoxContainer &amp;boxes, const hier::IntVector &amp;src_shift)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a7a01cf26368b8dc5172151ca9090e213</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::IntVector &amp;src_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a6c5415ec52723f7c3e20ce314b2c574c</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::Box &amp;dest_box, const hier::IntVector &amp;src_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ae9134265a8087de6f6c253715f2ed5d5</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxContainer &amp;dest_boxes, const hier::IntVector &amp;src_shift) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a00c34907e10e962adb8282b965a6972b</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::Box &amp;dest_box, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a663216993c878358b0f84dc85274c833</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxContainer &amp;dest_boxes, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>abfefa9165703fe930fbf701512b6e039</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::Box &amp;dest_box, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a3d2e85ff58edd86fe137912575ded227</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxContainer &amp;dest_boxes, const hier::IntVector &amp;src_offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>aa7761b61f741eeee9f8004f94f7df72f</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>af027bcf7d6a05db1dc10c1151a1383b9</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a7ecf3eb56f88b338e444812c4b4996f0</anchor>
      <arglist>(const TYPE &amp;t, const int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a8cf9939aef99c8f49fe4e74c69c7828a</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, const int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a8f7f3692d90cb551b39c996b8e618fe8</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a31944b40db288246f8581247c8b438d3</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database, bool data_only=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a7581f6e0f2324c8a991fddc5e0d9c55d</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ad06305055f5f7e91b3cf6a5af6e0ef61</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a28e92f3388fa061111655f0be3b46156</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invalidateArray</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a13f8b3840d928c402b1c93a08b959977</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ae706e66d2db26e7235eb7ed7e226dc76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a2cca785892f8511c6ea587e9ad4413ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>ac1810efccd37bed780c05fc9931e7609</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>tbox::Array&lt; ArrayData&lt; TYPE &gt; &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayData.html</anchorfile>
      <anchor>a01f9eea0e9e62aa54ac01eb18f9d6a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayDataAccess</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayDataAccess.html</filename>
    <member kind="function" static="yes">
      <type>static MDA_Access&lt; TYPE, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataAccess.html</anchorfile>
      <anchor>accb3814242f9c49e6de83b7bba95f01e</anchor>
      <arglist>(ArrayData&lt; TYPE &gt; &amp;array_data, int depth=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static MDA_AccessConst&lt; TYPE, DIM, MDA_OrderColMajor&lt; DIM &gt; &gt;</type>
      <name>access</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataAccess.html</anchorfile>
      <anchor>a5e73de2ab27e435c00748f6692b17af6</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;array_data, int depth=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayDataIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>ArrayDataIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>af15c7aa2163cc5c23f3e561da0b901c0</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayDataIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>ac8bf86803ff6a12f80968ef384cd8461</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>ArrayDataIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>a401e8a42a5251c6ae3f0631695cdcc7f</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayDataIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>a25b713629169b18648a2d8c370c52b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::Index &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>aecaf4f45823b4be4c53bc8470aeb61c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Index &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>ac6c2ade3d515f2f22e5f763618f67af5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>a4889d5af34af5c48aa1acc0727caac15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>a9300d9e262218c9f7610ef889534518c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>ad4a123dd0bfa56d047d9804bec2a5e93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>a703ebbeb1d6eac2e7e29db2a84a8306a</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>af7c058fb4fc9e8e878805191eb003e43</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataIterator.html</anchorfile>
      <anchor>af79320e98f3c5fffc12a296c629fe4d4</anchor>
      <arglist>(const ArrayDataIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::ArrayDataOperationUtilities</name>
    <filename>classSAMRAI_1_1pdat_1_1ArrayDataOperationUtilities.html</filename>
    <templarg>TYPE</templarg>
    <templarg>OP</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>doArrayDataOperationOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataOperationUtilities.html</anchorfile>
      <anchor>af8d894a5a03241fe434671f7dd64f82a</anchor>
      <arglist>(ArrayData&lt; TYPE &gt; &amp;dst, const ArrayData&lt; TYPE &gt; &amp;src, const hier::Box &amp;opbox, const hier::IntVector &amp;src_shift, int dst_start_depth, int src_start_depth, int num_depth, const OP &amp;op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>doArrayDataBufferOperationOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1ArrayDataOperationUtilities.html</anchorfile>
      <anchor>ae9206b8841cb32b1e5c4f4473c710a02</anchor>
      <arglist>(const ArrayData&lt; TYPE &gt; &amp;arraydata, const TYPE *buffer, const hier::Box &amp;opbox, bool src_is_buffer, const OP &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>ab9b22baf24caf337641a380a4749de41</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>a28c2145b07c8ec6cd9d1ec3f5f3eec14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>a99e444247d7609b5c9f9e8e869dfb6ce</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>aaff84f362f7fe4414bcdda32d195dde2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>a785a4650b6388d69e5189401137a359b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>a43c767a1d895cca47dafa52f5fc77c7e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexConstantRefine.html</anchorfile>
      <anchor>ab181292091d63dc4020db0ffb2160dcc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>CellComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ab6e9ebb11b4339f64c410f1b00d81ed9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>addc8e97280c817de047d0b4b55fd31f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>adbfddec8690541f37b4f49cf2c07fba7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a7250583e047a4aaaf2ad8e7c4f336575</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellData</name>
    <filename>classSAMRAI_1_1pdat_1_1CellData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>CellIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>ac33b6ccd6f61063a0b77bbf6c307f795</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a8aaf5c2cf6d582ab52e33d8fd685d21b</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>ae3ef3bbd5cfc9df643316e8c620a5bd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a5c29487454f1f1617ce2b5dd481cbab9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a7290288e1320dbd10ffa02a66b5a5030</anchor>
      <arglist>(int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a0bec80281d883ecabb820d55a83e0609</anchor>
      <arglist>(int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>acd323200f397c1df9153ea369b80ff04</anchor>
      <arglist>(const CellIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a2865a5f828cd75dfb8a77fae75fa402b</anchor>
      <arglist>(const CellIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>af92b49965e364c54b7e30f701af8a449</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a6ff59b0423efcf1d8f25b38cb80cc676</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a5352ab973bea1faf56cd2653199e80a9</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a482d348ef60bfb012e4ac8a1c954d2a8</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a417e7b152a3e73f0cf450b0e32204fab</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a3287f963492e74e032f67cffdc33e185</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a6fcadf9a114d8cfe6564677432c6aa4c</anchor>
      <arglist>(const CellData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>ada47b14c671797ccac95cdfbacbd2f39</anchor>
      <arglist>(int dst_depth, const CellData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>aee332abaa31d2dd8c13e87a3c6ed5d97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a4c5d7252d5f113f1e4fa0b3634bd937f</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a0f6642d81399dd644e7cbd01af1cb78b</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a1bb304011ddc96a7cd1f1073a2948c6a</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>ab413a1abfe2541da7419836678e796ea</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>aa478cb86f9936dcc2c9b2b327fc259e2</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a376b142713fb625b808891fe7fe0720d</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a9c45e98df6a8e03dc47295bac0b5fff5</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a63234e470d0e2e1e7aeb188ae917f17f</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>af93f2eee1df7a368ff479b9e102edf91</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>ad1ad33156100c630a241c7f166c4a8bc</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a994305874520e944d1cb080a6e564f12</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellData.html</anchorfile>
      <anchor>a1cf4c62f2d72b0da7f707d81b31818df</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1CellDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>CellDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a3ba8b9f1dd4a86e913a9879b7a377849</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a07a2be2e2e2a95f0c83dd6263c14bfcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>adcca1dbd69738ce970e934a18b082f13</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a3bc35f1273730fb28a7949ed7a339b0b</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a66fbf03d065f88203ee72124deae2c09</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a0e7279eda2fd97c14198bee6871bf86a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a39e39dacef5b64e7de1ce589bc33a40d</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a18f1dcc7c6227f44146b5a0a77571952</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a6d0b6aa976d4e50ba58b56337006149e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a617f0027b170ce56668f3d8de6e70722</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDataFactory.html</anchorfile>
      <anchor>a8c71fd2c19122fd1eb81c084d1ecca91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>a23ed907764a2d2843b969b3dedd393dd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>a1f458ef094264477276b3e4062143690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>af8ef0ec3897f43f4b4ee442b8a747ea8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>a6ace9b5e58267745c1da9cec82656ccc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>ac818457dd6f55a17499ebe12fffe6443</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>a5be0459f6eb1bdf59db2ebaa9d4dbeb2</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleConstantRefine.html</anchorfile>
      <anchor>a585398f723def7b0e86e3016eafc123f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>CellDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>af8a6b928a1e419e556b7957eddbe4b38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a3af19b686e92547f141c6774b29ff976</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a2e1f678da51d2589a9811744aaf7616c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a5c90dc1db1f0bc2a00a644b99c07fcd1</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>ac0f3de4a0b40788909a343b05583256a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>a8a9ceab120f967c8948febfb2fd00d27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>a8c918190290b9cccda358b7f7e5a165d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>a67e936cdca584c7959295de121f92a4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>a84047c50dd6f90fc4d2fd1845933fa65</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>ab959d6389de0698f76bf1ef79cc172bd</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatConstantRefine.html</anchorfile>
      <anchor>a7c0d6703566df9bfde7315402fd24690</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>CellFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aab4559819463f8e9dc5bac6dfa17ac1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a90b4409e72d76a868244395e7af0a994</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad79bc9bc348e94c996e182faf312e0d0</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a3223b71b115e1813190e8f2b9f39c9c2</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1CellGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>CellOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a1bd22fab622eac2124f93e42a3c1a2f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>aab430494556d4306bb47aed9be847686</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a1f12aefbec6edf8a7244396ab18b17f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>ab6655f30ae7d9726635734af25430972</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationBoxes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a37ef8ac79b880cbb576567febd5169c7</anchor>
      <arglist>(hier::BoxContainer &amp;dst_boxes, const CellGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const hier::BoxContainer &amp;dst_restrict_boxes) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a498693d8d2e52149717b129d13adf483</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a4caa602cf48647e6aea58a3047fca625</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>aa84098f2d4bbdb3db350d3c573d416b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toCellBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a9cde7bd2b350cb3dbdc207609f42cb83</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellGeometry.html</anchorfile>
      <anchor>a349771893c962f6955982f3cd57cda01</anchor>
      <arglist>(pdat::CellIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1CellIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="function">
      <type></type>
      <name>CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a0a0bc074ae1cff7fd179cb4f68a48db3</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>add0f9406d2509f208270f67d0f91bb43</anchor>
      <arglist>(const hier::Index &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ac0fec81fe5dd9dfd265f832bcd26d8a1</anchor>
      <arglist>(const CellIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ac28d24ff043b7b3b2d03883ba4604c9b</anchor>
      <arglist>(const CellIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a0cb1fd65606d3b942be8276975ee8f27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ad7ce0ff34d452238bc72b39fd968b7da</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ae2acd7cb09265cba47e6a34bafff033c</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a071d082bf51b0b380d0827ee96f26c7e</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ae608adba27b6f299236c5aeff139e49c</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ab7fa2542d2909ffef1b103f945f5e5b0</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a4b3fe3a7f3c290692093a2b5abd16d98</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ac3414206bcdc1276abdbb88e71b5dba9</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a506da9e203cb039435cb2ce9d40f3f85</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>ae5e40327d1236f2d9a8a627e89bfde8d</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a8de5d518119cdad5f6fa01afb6986cf9</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>CellIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a245f5a4332190356f4bd56e9c271b4cc</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>CellIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a418ef2b0dd59b254a3c4bc08707d5572</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a3c7f604df683b64c5838cea7049dedfe</anchor>
      <arglist>(const CellIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIndex.html</anchorfile>
      <anchor>a450ad075c7cc9a9ce6bac8f7165b2a3f</anchor>
      <arglist>(const CellIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>CellIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>a8b6b17b836bdae747dc568e1c9364f72</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>ae20b6f1e3d18b1c0e4fbc13738d240f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>abfe9cfcd04c4dfeb2576af89e6edb46a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>aa1237d677c976821e0a1403b62270f1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>ac4eb3af9f39192903008a2e62e3d0fd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>a0d932a6e8851230f4b619a564d2ece0c</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIntegerConstantRefine.html</anchorfile>
      <anchor>aa19cb95640c4597418a8bc547484264d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1CellIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>CellIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>ad1a3d511c7f6d2588c3d8604e9d61b44</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>ae138711f67f34d611095c038662f3824</anchor>
      <arglist>(const CellIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>CellIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a2a0ff036cf2dad499ae852b3c518c399</anchor>
      <arglist>(const CellIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a8d69de8568111f04846ca717b339fe4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const CellIndex &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a92363a90d56733f01077c8cb317d2c53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CellIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a0921c5e2f83c6945fae5b9d9169cb41f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a42a0b67187e8b252f30fe0e75b01fee6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>ad93e86d9775903a07c8887c3c899779c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a00dcebc423826c2039571f607b0b9798</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a9d154e462f2e519c6fa803ff8cc10de5</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a37d1e0ab16a7a3bab40897251f1167fc</anchor>
      <arglist>(const CellIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellIterator.html</anchorfile>
      <anchor>a186f3072f894d0e619efcd95594bf275</anchor>
      <arglist>(const CellIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1CellOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>CellOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a7448cec9a34551dc6eec4bb5d55b806a</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a0164fb1f313797fd08df80e72528ddf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a6194a82df2fe5bf8ef9b5f2876d91328</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a620d8003b0d36c0ab861336aa64f3798</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a37100a37bebd88141a87508202bcb52b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a450d93033c4f72ede975cd7f20155743</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellOverlap.html</anchorfile>
      <anchor>a138e7c78614271da57be98a294828ec2</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CellVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1CellVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>CellVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>a6e022fd1718a9ebc0b9f94a97a60ae2b</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CellVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>a6dc123d4e7fe205538606a6b9b04a020</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>a9440ccdc5a8befe334630bc2384dfa3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>ac2cd24402504024ba5e9e03535b34bd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CellVariable.html</anchorfile>
      <anchor>a00bb43cea2510407bb856476a7c6d08f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::CopyOperation</name>
    <filename>classSAMRAI_1_1pdat_1_1CopyOperation.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>CopyOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CopyOperation.html</anchorfile>
      <anchor>a0b760627d795ebe5c1722e895dc284ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CopyOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CopyOperation.html</anchorfile>
      <anchor>a494c7127af50468aea576fa494fc2df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1CopyOperation.html</anchorfile>
      <anchor>a04a6b9f97378571dfbb5adb46de1db2d</anchor>
      <arglist>(TYPE &amp;vdst, const TYPE &amp;vsrc) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::DoubleAttributeId</name>
    <filename>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</filename>
    <member kind="function">
      <type></type>
      <name>DoubleAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>aecf3672c516a407f0e8bd5fc9a32ce01</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DoubleAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>ad1d024b22c9eb91c554a3ea6cd527760</anchor>
      <arglist>(const DoubleAttributeId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DoubleAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a9bbe7d478581717ed2bdc0533557a15f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DoubleAttributeId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a305944bbdc2a724a08f3b4d4d4c5ba9b</anchor>
      <arglist>(const DoubleAttributeId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a15122aff810bf3f839ce7506177dedcd</anchor>
      <arglist>(const DoubleAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a15b4b49b21f002f76ed1252c27ef4ade</anchor>
      <arglist>(const DoubleAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a4a178cf7f0309e017d5ff0f3afa26db4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Attributes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1DoubleAttributeId.html</anchorfile>
      <anchor>a6435a569d942a448371bf8107e065164</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>af4dd92a65f863325d11aeb18ef4ef1c7</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>a937afa0381b664a58ea162f8c174ffd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>ae86f402a00dc49d9ff040893b32ee363</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>a7d979872b3a18373424f7404fda24623</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>a4369b0e5a5be122076b70b1af71e05cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexConstantRefine.html</anchorfile>
      <anchor>a27662db900fa77ba00949d96524c6532</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a49d7c61c39930dea5464434a23b0be9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>abc2548065409ad103140abd5f5c9cd23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ab4a4985fbbb90537bc691f08d6a6e157</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a099cf656fd72919982af0a9aa9ad00f6</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeData</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>EdgeIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a7dd64cc9a6c1bc92d1cdc8ac36e4696c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>ab5433fa04b62996fde14c07a6e657ae3</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a11202fd30fba48fa4cb1c8044fad2c99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a086c0a419e21e0c5eb69b180f9d5ef1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a5185b09afb58438a4d6e66a121e1e68b</anchor>
      <arglist>(int axis, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>ad106c8c414a5a73cc4c3b89d7a19c0dd</anchor>
      <arglist>(int axis, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>adbf23de4b1ae1cd15cac92d3e530739d</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a2e2e83a2b39e4762eb80c68cbe4f414a</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a38a60898c46424c086c43dfb6ad98728</anchor>
      <arglist>(int axis)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>ac632a255e8851dac087b661a7c57c20c</anchor>
      <arglist>(int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a51cbb7edf56d38565ddecf7a78823259</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a7c7c7cbdd958c73ff3941dc1638729fc</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>ac2f432fdfce0ce06f67e34aa344f317c</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a371515be9c432de97192b8090978c14e</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>aafc3ec3c0ab413b1a984612fefff92be</anchor>
      <arglist>(const EdgeData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>ac4fa8b17b2ca511ff50b88eecd341b1b</anchor>
      <arglist>(int dst_depth, const EdgeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a6702152c33038aa68106aa8f38aa1d9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>aa3ba2cba2f0d5ed040940dbe69fee5eb</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>aa6067bee17fe87f7625e11bd57ceeda3</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>ac9469ffa5caabec2528a74fa76420ab8</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a99711ccd5bb47ae7f71f1c8ea7ed3463</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a43a7472c1062b6c7e1f1605fd58156c2</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a4a33b8808c81aafb00f0e5b3ab5af269</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a9684211bd0f9031c4defcec97f5d53bd</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>aabcb66a698f63bfa74c935e56e89e8ca</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a2b8e8b0ad522105a458b475045a6c143</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a1fc3b9ba467c94587b54603e809f20ce</anchor>
      <arglist>(int axis, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a8e1c47bfbc79045c13719cd62cffd102</anchor>
      <arglist>(int axis, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a1db97e0114bb96f27686afd42fcc2fa4</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a40ad68650093ef65247a312bf70b9a55</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeData.html</anchorfile>
      <anchor>a9b946825852f3c08712ca2b458b5625f</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>EdgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a0bde5e530dd7570de15161b35a77e5d4</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a43621685dc94bd7fe5bf68a7101101bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>abadc5ce57c5a5e7d11e229291b31a3a7</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a385e5ead844afdd1d9d93a99eb390fa5</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>aa3dc3780783c679b87009e4283bb8720</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>aa14bc3a078bb52fa369efc022413cc13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a54251aee03f86499be2e2a615b13ee1f</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a9246b6e9ab8f8c447a039ed20a023fc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a8943c74102432af10aa804ecce030673</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>a245c45a4f5d1dd8bd52bc841d00a6405</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDataFactory.html</anchorfile>
      <anchor>aea64063648e9206b40e17fdad68d3442</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>a5f7cb9977b43c2be64a9bb61afa9eb40</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>afb4877ccbd1a3cf444f19414a0879418</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>acab6e54752ef1fac0b66d6c6bec516b5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>a4b0b071ee18df3da3ff2b209357bfe16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>aaaa99d94a20c3619d1bbaaaed023009e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleConstantRefine.html</anchorfile>
      <anchor>a2578fd4e331f4e37d086feca5d6d362f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a13b4df22e6d4a2661d5ceb1ac56c4796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a884815e5302132541c75d0916d6bd7b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a81d1b4cf52ff4ca4d8a8f8e8f604eddd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>abb12ceab121c047a4e7962eaf49a5b36</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>a4685a96d68d46ba44ffef28081613d0d</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>a5c7f7bc5abf009b7d194287314dfbd00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>a5b461ce06b720ccef9ef85498620c266</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>acfedcfb10878b784c44a8dbb805474d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>ada8bc122557f05405630e5137f86e2c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatConstantRefine.html</anchorfile>
      <anchor>a113ce07ba9b592e083998c65a04289e3</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a806246354dcd19c10915ec2f7b52264f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a12f498cf96d6359b8ba39e653895b49b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a38bfc20997c19aca7f3d24add36b3d7a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a90b0838961a593b673bc226237928c44</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>EdgeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>aab3b9f4695be64913c518787015fe1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>a26c09563057050c8a011259deee9a356</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>afd2a4a632f69be98411a2f59304d2c49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>ad3c6854306d9f98d45948692d413c32a</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>afa10e77ea783b70dbbf09f7bf99df0f8</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>a33a5c1cfb65931ddfe01e1ed40560ecf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>a1d485b7ffd7cbf51e9ba5d348c6048fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toEdgeBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>a88c1b2262beb8406983c3b97073e1edb</anchor>
      <arglist>(const hier::Box &amp;box, int axis_direction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>a0e471eeb05c3f108f7fcd1bba926be9d</anchor>
      <arglist>(hier::Box &amp;box, int &amp;axis_direction, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeGeometry.html</anchorfile>
      <anchor>a0a354c7941bcd51c2eb8da8bd1469f93</anchor>
      <arglist>(EdgeIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <name>X</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9aa095151de9a081c35789103ba9b1dfac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9a3758aa073d401b1541c6e025ec1e2b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9a01e0854d1152d8b5cf575c54feed1101</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lower</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9a0554408a93cf75f430bbde74d9899768</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upper</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9acb7b841b07a1f08d94e8584b686d4eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9addc32e8f6700d22f421514e84f822a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9a1cde45b9a1f622a0e97e69e20504fcbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9a344c713f7ac0f6dd44856f8907d24853</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1962ae788f409c6123cc770c11c6cb9ab463bfe253a424b2d04a62825a2ad9f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>ab1d06836bb32421fd62e05b6e31c89d7</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a92df278f1775f357240aa0895fe3d297</anchor>
      <arglist>(const hier::Index &amp;rhs, const int axis, const int edge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a28d11494c044cd3e747f14aba83934e6</anchor>
      <arglist>(const EdgeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a5fc1708ae1493c97676344366c2fc3c4</anchor>
      <arglist>(const EdgeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EdgeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>ad109923b0de25f438b4479de2e2453f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>aa78c26679edf0f42e93b2efc999fc0a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a0cdaf3b9b178dc0eaf208e5abf0bc556</anchor>
      <arglist>(const int axis)</arglist>
    </member>
    <member kind="function">
      <type>hier::Index</type>
      <name>toCell</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>ae73c84be319a95d183777cad086aa77c</anchor>
      <arglist>(const int edge) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a5cb21ac9b01551ac944520a011f72c40</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a4404fffaa8bc5a2a3114a90e14a8d529</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a6f9d288b30fcafb34a29ea9da600edae</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>aeb9b5732c8b450d33502ea055e41d274</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a28b2f2867ef804883f60bd8a50c89a8a</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>af1d87ef1a4ab04e2bb0f994bf39d260c</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>ad1a9ed6ce5a4da85a1267b5ac0f2bef6</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a2d2cf835fdd7ea41bd74ba480631053c</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a03811b712c78e0d665895674de542124</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>acc1a55a28e96edaf236084612264ad46</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a8699fdef3bd932d976e83a15e11070a1</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>adb4852c83a100914e8fcd8f969287b1c</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>a2cfa16c47b71883ed95e9678fdeef1c3</anchor>
      <arglist>(const EdgeIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIndex.html</anchorfile>
      <anchor>aad6e7e996c66afce3aca1b5dc07736ef</anchor>
      <arglist>(const EdgeIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>EdgeIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>ae68afc669073eba341945fe5bebd8a70</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>ae0cb26352e02cf1c25eff39133a48178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>a6f9cf2f70d4f4bc3a83135a3789c6a9b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>a98e90a20ef59e18891c5cec221977faf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>a56b703eaf9fa59ec4064d04e2a4bf2a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIntegerConstantRefine.html</anchorfile>
      <anchor>aab5a3c7d71cb01cc03fbb57306a660f9</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>EdgeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a47726bd8bf87423bb80849639d2dc429</anchor>
      <arglist>(const hier::Box &amp;box, const int axis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EdgeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a5e403974533768c3b0efdb6bc73d9502</anchor>
      <arglist>(const EdgeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>EdgeIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a3fdcbb24599629e6d542b0c9ffe0ec7c</anchor>
      <arglist>(const EdgeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EdgeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>ad18ef41424d0226d765d9e93cdbd69bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const EdgeIndex &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a68e688b2e5b6678ee479f05f3b276313</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const EdgeIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a553a523f9b2ad8559168b3b645d7e712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a0b6adffaa0c54f0d0b0bfea6422f39fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a1232fb70df68f57b74b4f257d98f494f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>aa66547764753f914342b0ecd95579428</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>ae07af58a0ff1d453345a920e8e64bd82</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>a7793e1be3cad87b76b56c28a75d22a12</anchor>
      <arglist>(const EdgeIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeIterator.html</anchorfile>
      <anchor>aed18c9fa3a80cae7cea9e7b65772ffb3</anchor>
      <arglist>(const EdgeIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>EdgeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>ace4deb6102bb49efafe9d56cbfd2f2b5</anchor>
      <arglist>(const tbox::Array&lt; hier::BoxContainer &gt; &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>af922d2f58964c07cf96ed36b4617d5c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>a900bb6c729821a8b99cad7d1c1c66174</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>a2197a9a33a3ce6bb9944ec98b61c52d1</anchor>
      <arglist>(const int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>a86da6c4ee58bc29bbab3a3650f8b2b10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeOverlap.html</anchorfile>
      <anchor>a8fbc25b7b2f40b784438f91b5af360ec</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::EdgeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1EdgeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>EdgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>a3100e4bf08d30ff2c08a2f9842ec4f8a</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EdgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>ae21fdf580d3df51330904afd240bf001</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>a8cd7b4335cb2dc09a548da2e82de63eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>a5daba89636f11723309c4a4eaf70ca06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1EdgeVariable.html</anchorfile>
      <anchor>a26aabd05fa0b9b5211f7143b5c357f58</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>aac8c580cef3e79f9cfce0160db0f2f60</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>ae8c90ccb72835a4bb28223bd78fc78db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>a7eb4fd1848e557d87696725809eb9bb7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>aad86aa2c8dbf35792bab94f18fcc81f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>aee3b5de2f0322d73e3c2fe469be7e954</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexConstantRefine.html</anchorfile>
      <anchor>ab551ebb15e805eb03005a9e5c8171c6a</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a0423e197af5ddc159c2ad8edf85439b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aaa0595c8294718888d7c5948f824c2d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a2d8f703478db35485868b307e5d31ee4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>afbc5f39d290255cc1900f107799a4c0c</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceData</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>FaceIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a757f2a1ac374a6eeec4fbef93ea97296</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a1de9badbcd61ef81d5bc4236760cefd2</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>abd10e51187c8ff31fc41016f6527461b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>aa3e36fe0b3c672dcbc768529fb6dbb3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ad796a75a38cae101ea7df55805513830</anchor>
      <arglist>(int face_normal, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>aec988f5b6d5f3f52ea355d9b350829fb</anchor>
      <arglist>(int face_normal, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>af5d6c03cdd83828bffed8121f271bbf7</anchor>
      <arglist>(const FaceIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a4a85c427d849e3e91c945c502950dfeb</anchor>
      <arglist>(const FaceIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>afecb4e1f1a2bf5a7f48d5dc30778b867</anchor>
      <arglist>(int face_normal)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ade61ee3a9474d7511f9f6e82d6568eea</anchor>
      <arglist>(int face_normal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>adaf444f217a123e56e4603e283bbe327</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a4619040185e4f392d477351843db3f06</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>abbfae31501540902bba99145085b9d27</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a301fd5b5372328bc943f7c63fa927dbb</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a1e205da78cf4e493a3b81a22dcbb01cf</anchor>
      <arglist>(const FaceData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a86ddb488764ded2ad0de94dfa5b33fc8</anchor>
      <arglist>(int dst_depth, const FaceData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>aa3150192ec08c55f8c5d5b1ab4727f1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a88acffb022851abad7fa9a7b5907759d</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>adaac55e65df871c52a79f8e0410a0efc</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a7535898c38f52bb5e713548f50f24f8f</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a5a3af7e106c34bf6cc73caf746cc2817</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a99713ccc6ae9719814537736a8428634</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a6baaecfefd040b5ddb02e6f2dd6d4308</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>acf1665b94d4f2ed6dbbdf9a73015a9a0</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ac585617ce11ca3e6cace6083800c6518</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a66110fb111860c6106e1fb672f9e8ea6</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>aabd4a2de3af816d03863fdd54d004007</anchor>
      <arglist>(int face_normal, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a3cd6028449f476d0ab8d86b9c7a4ecf9</anchor>
      <arglist>(int face_normal, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ab7c451447c0c309991ffc532be6bbda3</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>ae8cb448d58cb693f41c642f5b785aeb2</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceData.html</anchorfile>
      <anchor>a8eb05ad2195632e5c37f1976494a9871</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>FaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a8d6fa32cde233a870ec394b7e57cce13</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a238fc005c4df93d53afb656391d34f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>adf40b98622b738753d9b3a23d082e938</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a5291270b81e42c83001ebf23aa19a99f</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>afe914a695200e51b31ca106691e3f5d8</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a6aea29ab16c50da70f3b0732fa7550f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a60f81790ee8ba98c6e8a604801a36814</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>ac948b5b4535b3138f5ea2e350cb9a261</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a410080ef35652ced2b9901fdb71e1596</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>adb50a1f757d45e28f83f3e3e2f1c1d17</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDataFactory.html</anchorfile>
      <anchor>a48063a33e697af2fe11e237279bb8fd5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>a7d41084522afb2af2edc7f6bbcdfd134</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>a7127f7d3ef43dddabbe6d47d6de8d16f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>a81e24496932616bf4b903265a88eaff1</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>adc85706f6da373fda8c73338c7e3ff0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>ab0fd9e4de1fce93712e349254be72c82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleConstantRefine.html</anchorfile>
      <anchor>ab7e48423c20fe61e24ca563fb8bbd9a7</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>afbc6ec7a1da9fbe624f2b9ca8aac5423</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a4959e3f35bb758e550f0ce0781c2d549</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ae1376781429aa89554efd6357c68a254</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a0d598087a93c633b58fdd942e37bd480</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>a69f65724a26fd1ecc8ef92a9597534ee</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>a77cd7f86f0770ae1b01ba0d0230b5c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>ae945e508e468f087c849c3053efaf30f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>a6976cabe7e0c30927c8bf8e9a86f769e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>ab680dac32eec8a75f3c34b1c03a86754</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatConstantRefine.html</anchorfile>
      <anchor>ab3cf2ba41321f282e7633f755405113e</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a58d72d8d2b24454daa57bcd6e94d21c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a4b10d638e66c2e5f974f32e4ee7deb43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a2c04bbeecf614bae084c3383efe74229</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aef4e7b19915a2896429433ed8b475402</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>FaceOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a4fcff948f04bca4721d5455a38161f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>aa7eff1fcbc6c2dc83d681ea8f29eb753</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a201a87873a4839ee5f233600e6f9afb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a9352a730f7928745e4286521ef2fb1d7</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a8bfbad51c3941a6344251549490814a6</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a8425155b55b29c8486414dfdb9f964f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a5adb69058cf2aa21c15a3e6c15c82112</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toFaceBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a49e71ac21b2e43ca06466908b164415d</anchor>
      <arglist>(const hier::Box &amp;box, int face_normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>aa08eeeea407ff401455228e0dde983e4</anchor>
      <arglist>(hier::Box &amp;box, int &amp;normal_direction, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceGeometry.html</anchorfile>
      <anchor>a900f9af24eb717eae301546b37e78d0b</anchor>
      <arglist>(FaceIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <name>X</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a3d28c029bc849bdbd850c7348460b979a34bde75e2cfa3c2b05e0f5bb3138ce70</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a3d28c029bc849bdbd850c7348460b979aa71ad72d1e7d4b6b642308315f6ff3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a3d28c029bc849bdbd850c7348460b979a4ca33453cf3da3ce17255131f27044f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lower</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a3d28c029bc849bdbd850c7348460b979a2e0049bb80381b1fea69047d3dc5e9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upper</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a3d28c029bc849bdbd850c7348460b979ad8096d79ee935875a97cbd30e2d84f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a443ea20e3a39d7dfb57c444a20700d42</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>ac07095d2bd7bcc476c3ebc10a1a2da13</anchor>
      <arglist>(const hier::Index &amp;rhs, const int axis, const int face)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a5f5d236baf2f526960c9ff8164f26f5a</anchor>
      <arglist>(const FaceIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a811dba213796406674d20572178bf9d5</anchor>
      <arglist>(const FaceIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FaceIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>aa928214d72c38f390011395f97e7cde1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a2369f1ce0d5700e7292ba98d725241f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a0f1c3cd0878a5c4302b5e49ca2bd6dfc</anchor>
      <arglist>(const int axis)</arglist>
    </member>
    <member kind="function">
      <type>hier::Index</type>
      <name>toCell</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a6dc4ff92222afd477cbe298d41decf42</anchor>
      <arglist>(const int face) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a0a579e6479044dac3a3379a5f0de0c9e</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a99f26a2e99d081f03072c479830e7eae</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>ae7425d9f062c5394c72adaf676fdcbde</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a1acd01b81ccfaad00539acb968978478</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a1c9db412cc3597e4500e26821fd26c50</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>af962e58b5e3787478c13fb07ddf4bd8c</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a93f619da61bb125c4c366aa2470239b6</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>a6d71226bf199ca697ac5f7f91766262c</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>acc27d9d289d1b3f908512b18f18f1c18</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>ac74bacae3c059b020cd316cd1d0a99c9</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>FaceIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>ae9c4feb0b5f89d391fa401fbd23f8adc</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>FaceIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>aca29f766b49610caa0d42e2aee3c9ac6</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>ade752d3777e51d3d91c4abbba55a8f36</anchor>
      <arglist>(const FaceIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIndex.html</anchorfile>
      <anchor>aacfe746fe1b4a38c1323b260ec9af0d2</anchor>
      <arglist>(const FaceIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>FaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>a55669e87ee9b5a4b3ae945d4cdf5cbff</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>abe731088409f9de8285854e46d9c5bac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>abc3bf973fdd4c76e09b1cbd434d82f7a</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>a0a972d99bac7748f1dc51f115bb9c8b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>a9df811b0d010249234a61056a9322d7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIntegerConstantRefine.html</anchorfile>
      <anchor>addca2841d332a0bf4fdf9d65f2efa53c</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>FaceIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>aae63e119bfee18e10530fbfa2f40c221</anchor>
      <arglist>(const hier::Box &amp;box, const int axis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FaceIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a9f07ed75fe4832723b713d894a4936dd</anchor>
      <arglist>(const FaceIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>FaceIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>aaac13e45c287528b53c793df0c62adec</anchor>
      <arglist>(const FaceIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FaceIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>aa1037e10a32ecf8718273e3e773806a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FaceIndex &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a027d47eb4380b88a8b35996d7a0074f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const FaceIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a2a5b8010c25d44962cd6c01f73dd0596</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a6e7f23cdb8815744cee21b21fd5a0a8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a524ffdb07e1ce34e0292550d99c18462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a22889d7c60ac4bd4947148a726708e27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a5c493297b186bfef30feb45ff3806f74</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>aac600f8ca8fe20516ba3d7a7934fddc0</anchor>
      <arglist>(const FaceIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceIterator.html</anchorfile>
      <anchor>a2d44f29c9325476cb8f52793b2f14659</anchor>
      <arglist>(const FaceIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>FaceOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>a10bf444ae90649c5969b3cbdd7d3ca52</anchor>
      <arglist>(const tbox::Array&lt; hier::BoxContainer &gt; &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>a89103ed7e985e852ae3b14694b87df2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>abb86615fcc3edf5f03715c32b2badf52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>ac18ffd78c20f80cd6f8bd43aa62d66ec</anchor>
      <arglist>(const int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>a1f98fdb92be9d55548c4287d4c6b76cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceOverlap.html</anchorfile>
      <anchor>a250dc0b0bbded1eee09cdd56b4438960</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FaceVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1FaceVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>FaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>ab43a5ec9de4cebed006a48fcc4a4880e</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>a4379f485f0324ed673a41bf1983a42a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>a4e80d32c6671a6962097824d6b06d2d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>a04e05aa8e52dca5d6a8fc923bf326b23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FaceVariable.html</anchorfile>
      <anchor>a479824c5598f3553a945477168cd6ada</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FirstLayerCellNoCornersVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>FirstLayerCellNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a84d1cc7bf84f8a7236c00d04541904c8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstLayerCellNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>ab87dfa947253c251a2dd962ec33f8ab7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>abd1d9cec12ac0c78a78799b077fc003a</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>ad4aea28be9903f597e7e731d4549d630</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a7968564d0f9b033ac1388fef8a0ec895</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellNoCornersVariableFillPattern.html</anchorfile>
      <anchor>aaaabe21e83134ef935a00beae93110b8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FirstLayerCellVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>FirstLayerCellVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>a34e2628f3d40a2316381b7e3cc15f15a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstLayerCellVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>a86b8d00550eec9491dbb44183c8fad21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>a3a1572359d61e5ac089b0cf7d50d54b6</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>a560a4fae74bbbee5c6ebe47fbeb8988f</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>a9d1d45be99bc59f5bf3b0439534648cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerCellVariableFillPattern.html</anchorfile>
      <anchor>a859e750b4967ec25ea15a451b99b018b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::FirstLayerNodeVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>FirstLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>aacaa90f9b524a7100d441e0cb0a3baa9</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FirstLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a0b25fb6b59a48db0e9be838757d6cbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>abf4d423e932557c05c03ceccaa29f7e3</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>afc9d17753921518b614cd0bf514bc156</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a3bd3e92a3d7192284b1139d3c6b96d38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1FirstLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a402c9595adfd58a30934008f6d3bb69e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexData</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexData.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>abac064ff11ad2bf895b3ed5d2205b038</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ac4c9ea6e9f9c3cbc8118d96135e0dfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ad25afd61eed259cd2939f1bf63aa40da</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a6b07c138f212dda39f6687eaf4484c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>abad8eeab874b36bd742717b2dfa3b604</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ac5a794f5382370d79636ccd7a0d2346f</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a783668a670f8670f6abe44d95fdbfdf7</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a16d1e1fa67694b8436d6227d81e49a02</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ae3f83e42f45ec7a0ada7cf37b1891b47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ac1ed20b9b3eebdf3da00077066b22cfa</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>aa65a4529dba173d4e15c2b8074f93406</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a93cd47ba0dd29264f7c08163a58aa6dd</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ac8c2a5fcd8eebfaeffb94f2252430c42</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a24266abe951aa6d638f56b262c30ee04</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a5f1274ba909e98c7a7613d8022ac2f01</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a73b3c3b8e498919850456f2c73438ab1</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAddItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a252835ce846eb490af3469a5db72e074</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAddItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a499ef0534ddbd04c52c2a8f0074bf59f</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAppendItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a4ad2ee1b92fc104d366069ea0ad2a3dd</anchor>
      <arglist>(const hier::Index &amp;index, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>replaceAppendItemPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a7d1158a59d3f9d6a78a31b45e34a077d</anchor>
      <arglist>(const hier::Index &amp;index, TYPE *item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a24b91487eb39e85f6e98847bb8ececb5</anchor>
      <arglist>(const hier::Index &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfItems</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>aeb00a0856e22d8a17e6e5d21de8bc539</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeInsideBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a6e06c5fac816fce6403fdfaa83539225</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeOutsideBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ad39269d851f7a469fa6f41c0b99dcc46</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeGhostItems</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a144b1148c739fd9e6b50d3012f85bc38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeAllItems</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a275639b560e4f86afda769e80196a3f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isElement</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a2259154309a002325966caf50905c82e</anchor>
      <arglist>(const hier::Index &amp;index) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a544059db74c87a01106c044f5c34280d</anchor>
      <arglist>(const hier::Index &amp;index) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a7080073068ed843b4b5073f5de49a1cd</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>a27bd4c985f7d0adb9db8300e57493eb7</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>aad8c12f0e86ea2cbf823261482d7827c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexData.html</anchorfile>
      <anchor>ad5afc49845ee06b6260afa14748dfeda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexDataNode</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexDataNode.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <member kind="function">
      <type></type>
      <name>IndexDataNode</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>a56c2cdac753d1e46b0de81bce3bf4972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexDataNode</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>a6b64d0440223b0fcab1712ea15cde7e2</anchor>
      <arglist>(const hier::Index &amp;index, const int d_offset, TYPE &amp;t, IndexDataNode&lt; TYPE, BOX_GEOMETRY &gt; *n, IndexDataNode&lt; TYPE, BOX_GEOMETRY &gt; *p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexDataNode</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>a06f2d7e0fa5f953f8f284c4aa5d9978f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>IndexData&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>a0aa91d1de3e5f7ce82afe3a8519b755c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>aad8c12f0e86ea2cbf823261482d7827c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataNode.html</anchorfile>
      <anchor>ad5afc49845ee06b6260afa14748dfeda</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexIterator.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <member kind="function">
      <type></type>
      <name>IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a90018f9f59c5e0edf89fc4c9dc856cb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>ab66332162631d4677cd183cc877eed96</anchor>
      <arglist>(const IndexData&lt; TYPE, BOX_GEOMETRY &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a0e618707c273adc74596042eda5cb12d</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a37e65908a79a164d510e6291023c54fe</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IndexIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>ade1d17fdb632fc91e7af801da154a527</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>aefded0742ffb8649bde6b42c5ee9d7ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>af3a3a17626d62f729cec3da49f4d9aa7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a31f410606dde21ab9eaf2ad19098ac7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a321c64d19f3c4288617b47ef97a79b52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>getItem</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a9e831a556d613161099a7c99ef56de91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::Index &amp;</type>
      <name>getIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a153d5e6eb0a31b947c42c0a6744ba005</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a220115d410b452d987c6d328a7dcbf1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>afc636acc35718e88e0158c7af6b8462a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a394b0a5e9fd3a389f48cf37fe86dcf04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a6e8bced637186fe4ae21ad32ffcb6dc8</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a6a5e8f40ea8e86697cf005f99af04cf4</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a3b07c636ffcf9f5fc9c4ff758f6f7724</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>add60059e13d7680ee01502ab2a7d5b51</anchor>
      <arglist>(const IndexIterator&lt; TYPE, BOX_GEOMETRY &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewindIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a512b6933fa242e2f0f1251a374227218</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastforwardIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>aeb977ffc09b58507e864f47560ba9ead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ConstIndexIterator&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>ad5afc49845ee06b6260afa14748dfeda</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>IndexData&lt; TYPE, BOX_GEOMETRY &gt;</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexIterator.html</anchorfile>
      <anchor>a0aa91d1de3e5f7ce82afe3a8519b755c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>IndexDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>a126fbe7db8f2cc20b6e0de2b4db739d3</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>ae65c92ac836b51f11a1da75968b859be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>a980676624a59f076d92bea1dfbace86c</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>ad63162b0e1be9214ffa1f9ce46ba5025</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>ace198dcab9dc27d9c9a8f7f75784b2af</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>ad172f8eea5fef2193c352cfa3d256dee</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>a0a67b144a9a81d1c335a171f6f5074fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>a6b88e895c4894f4f7297a7466f93ba3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexDataFactory.html</anchorfile>
      <anchor>a06ae84ea515da06ef7b1d2db0949db50</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IndexVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1IndexVariable.html</filename>
    <templarg>TYPE</templarg>
    <templarg>BOX_GEOMETRY</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>IndexVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>a045aa1a2da3b1a5fbc90e123df26da26</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IndexVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>a295b81ad0f73d5b1a70ee5e7894549ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>a7f96b3b114ab55ce714325cf721c7efa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IndexVariable.html</anchorfile>
      <anchor>a87a4891c459c62180dfd6463ef9d6d4b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::IntegerAttributeId</name>
    <filename>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</filename>
    <member kind="function">
      <type></type>
      <name>IntegerAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a3c4679a85a36b90d8b5fa88d2022aedd</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegerAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a5cc3d510cb687019ca5cec090b017827</anchor>
      <arglist>(const IntegerAttributeId &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~IntegerAttributeId</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a1a7d7dd9a72d165c76b27962e8d90fa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>IntegerAttributeId &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a61c029a728d435c3f15faf89c5cfc3de</anchor>
      <arglist>(const IntegerAttributeId &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>aa6c1ca570a47be92b454234e5005e59f</anchor>
      <arglist>(const IntegerAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a0cf1440b7f341e073277a0fa1f61f1e5</anchor>
      <arglist>(const IntegerAttributeId &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>adec659f1fabafbe544f812759cb2526f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>Attributes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1IntegerAttributeId.html</anchorfile>
      <anchor>a6435a569d942a448371bf8107e065164</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockCellDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockCellDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>ac1683c02afde85c2670cd83ee2bd0e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockCellDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>a9061929f7ca9de787667b72a5070415a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>ab6584a05ea75adfc98ff990fb80c9663</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockCellDataTranslator.html</anchorfile>
      <anchor>a0fa36eb67c9a41bc404970372bed952c</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockEdgeDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockEdgeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>a4d440034b5a7f4b4d34cc15745e7e6a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockEdgeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>a998b52139e9d3463e07decf21e08e0bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>ae63bbd63d5f5ca446597e29ea7ecb8fe</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockEdgeDataTranslator.html</anchorfile>
      <anchor>a5b2bbfe08bb795ed40d6336a31a6b5cb</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockFaceDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockFaceDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>acca258400ce0bc46cf5da3aa14759479</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockFaceDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>ad86dd7264c632e577a64ad0bf220cc0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>a10a65e851e6eca76a8a3f9a5a25f5bea</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockFaceDataTranslator.html</anchorfile>
      <anchor>a93d257ef27a3afd7a9b810121e00526f</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockNodeDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockNodeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>a9800f07bdee78916ded85572e79cf0d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockNodeDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>a354c4d6d86f92663372f8c408bfab9d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>a824aebbad22599a696d77c2ff83b78cc</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockNodeDataTranslator.html</anchorfile>
      <anchor>ab64e9265c646471f49ae545dd7c2ea90</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::MultiblockSideDataTranslator</name>
    <filename>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::MultiblockDataTranslator</base>
    <member kind="function">
      <type></type>
      <name>MultiblockSideDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>a16ea86bb228d745c156164a5010fe050</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MultiblockSideDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>aa2405584feba35cbb4bc56e7245c2059</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndCopyData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>ad299916838a9788c13dc8a0845edaf3c</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>translateAndFillData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1MultiblockSideDataTranslator.html</anchorfile>
      <anchor>a75f7cbde6d9732e829abdd3cbb7564a6</anchor>
      <arglist>(hier::Patch &amp;dst_patch, const int dst_id, const hier::Patch &amp;src_patch, const int src_id, const hier::IntVector &amp;shift, const hier::Transformation::RotationIdentifier rotate)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeComplexInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeComplexInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>a33e30e32e22f06207ef75b5b8cec1729</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeComplexInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>a920c1eb65b394cb44d284a0a5b43077b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>ac461bd76111ec9814feaa08907d0f608</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>aa25f771b65a349ecabb9e3111308c092</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>a1310590a9ea00fd34cc79aa05c9c24cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexInjection.html</anchorfile>
      <anchor>acedf1810b448eb9fb8a25655f934e428</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a1cac8ee27d89b6790269aca27d94f524</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a1435f7ecf123924f6de47fbc4cfde617</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad9adf8d4485b6a7aa4b88e66e68d62bd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aa77d2895292dc6558be3c20aec621255</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeData</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>NodeIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a6634f0408a7bdcdd963e8b08b8523ab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a13481b4626e3bca0ed6c977c16b8dfc5</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a43d5fd7ae99a5764573ebf493768d404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a62b8b5169318752a86c4aedc408e0834</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a0ef9bc03e9fc4384426e9c3a4c53f219</anchor>
      <arglist>(int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a349d2187699fc26612b91c3205244197</anchor>
      <arglist>(int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a718d83a4e4b250b2d902dc52046ec4a9</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>ae5f887c4adee70216d9e20741a098563</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a54f516ff0d2be6608260f1cad0a65d30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a4b482e8f33faecf38cc2f75a28b19215</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>ae115145e15ea77533a5a0be3986a5db6</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a3b66256c285a9c51c5e5519a00347232</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>af3761eb6c05ba8574cb6a784ef17c4fe</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a2385aab74b607f0501a2c9adbd4ecd63</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a679c53b4ab6d0a3b881fd1f485febefd</anchor>
      <arglist>(const NodeData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>af4843b126109cd78e8c0a8804efc5a64</anchor>
      <arglist>(int dst_depth, const NodeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>adbe844b0f2ee7e7024e8f988bf7f0d1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a71ea1e5fa3f07882801242cc87041848</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a27846f11bc1e06a055d387ebea0bc80a</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a4359530e98f293858f3ee47d0182334c</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a51496cd15a86d3640bf65f8972318be9</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a2c96b045504f65426c4c0f9e5d8dd03a</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a0732351a815f0a3f44c86581fa56e6a6</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>ab03158ee8e0f46b903331521046e7767</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>aa367c3c99d0792a4b1d454d0e68e5578</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>afeab3e6907f07ad76812473525cc6c89</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>af8470b7c369db6f2a9497fe466322288</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>aaa63ff9e8123f5c87357c7bdd57f8944</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeData.html</anchorfile>
      <anchor>a4dac5065bff53526765ed8b20683f260</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>NodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>afc5ba39fcbf43188f28214ff90a3c0f7</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>ac473550c5797d05abae3252ce45665af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>ac1793c11f20b6a181707b6e785fb298d</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>ad6ff12986404a51e6e9274dcb3cf9a6a</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>aefca7827a7d3b672c5313d1610b0d9d5</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>a2eff59864fc1c5224491201a1bdc979c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>a7a94107d940f9bde283dd6a346bfb3b8</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>a19ae6bf8091e89c13ac4fe47742aeb99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>a1d2dddefcebedf2b3abfd7bb08cdd8a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>a4c4e5b53bff0d111dc4502605b4aaacd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDataFactory.html</anchorfile>
      <anchor>a48d161f56c5f7aec236bf6db8f16cea3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeDoubleInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeDoubleInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>a8b6f1d558369bdd244b579e1ce750b9f</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDoubleInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>a5232117ea1a8590378252549e4a3ad46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>ad46192879f55fc77c54059668034edef</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>a2657f2a496ac1afec59754900bfdb233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>a2c14982c70ecaf9bfe4e14298219d4b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleInjection.html</anchorfile>
      <anchor>a6d12a6debe5ac1dc7679fbd57c744bcf</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>af4098b97de78f297b2f8dce2e08e6bdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad173be0a9c6d03a4a6ec5dd1fc006136</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a9f569a9a00d09fda0c86f4d1e3002e06</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad51d7ed92897593ba0960e76e604d37c</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeFloatInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeFloatInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>ac4a41bf68c0184bcc3ee05e112f698d6</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeFloatInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>a813265ccbe79a49dca12d4b47f3091c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>ae4382cc9168d2e4241660e461ae5ce15</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>a971afcae0c7a32e591d6809a0f40eaca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>accfef256cd5e58c65f92688d5767f22c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatInjection.html</anchorfile>
      <anchor>a66dd2222962f655d51e1c1ddfbf7c483</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ab251121b844a38fb0e4f9faccc19df2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a853812ce2f96ca22906b52731fd92040</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a70475690cc36d85b40d893f7f145b5cd</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a6f2f15fbd2335b9df1ecb11e52502442</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>NodeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a913f9ed8b357a4d36a4e43af39bfb528</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a4e41a6a5962c5e6c5f53b59b376ac4dc</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>ad8ffa2fabfcd1b8e7e6b14caab4237c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>aac4b829ea7ce7b974872304abd4f6dc9</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationBoxes</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>af37db72bd2a2835668df6d58f425bf35</anchor>
      <arglist>(hier::BoxContainer &amp;dst_boxes, const NodeGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a4466e1dadb05ac1e4f76c6a437d4c9fd</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a37da69684f2f8e6ce28c23db09f54a20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a218cfaac6a2059767bf81800741a82d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toNodeBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a232c4a6cf23fcb92d6c7ffcb88dcc076</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a54cfaf01b7475fa3c26a2e119e05594a</anchor>
      <arglist>(hier::Box &amp;box, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeGeometry.html</anchorfile>
      <anchor>a1d5af7e6871d0cd5a998d270901e3e7f</anchor>
      <arglist>(pdat::NodeIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumeration">
      <name>Corner</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Left</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a6f852bace5d86cd3c8e8eb3dd6a896d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Right</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a73ccc38686e6ee69c245f51e25fdd8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98af8f8770af7a60af40ed20260bb89bd15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LowerRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a23b185f977d1f9bff3db043c532151df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperLeft</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a16f7c660f95083df18fdc7f6c16d19d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UpperRight</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98afaf133cb79ca040f5580b3c29dcaff66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a5a60d1973c300401b41245b155658812</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ULL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a15919bece9531ddb4c6b17ddcc75690f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LUL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98ad81a418efba38b7cc75e2f7c275c593a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UUL</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98af5fe90cdf369a1c8270de87b5972c11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LLU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a137334f8d206960b308ed6c490e0c28f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ULU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a3718f4bb2197737b58fde19da3f4782e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LUU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98a6147763dff3483a9985bb4b192d66da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UUU</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ab378de6757245444a06d3a721df6ab98aefeca885144a56e8f470b0fa91e2b9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ae40330e26c4cb9ac6600bc665d411eb4</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>af7fbb231b3f27bae98141b0e101d4a87</anchor>
      <arglist>(const hier::Index &amp;rhs, const Corner corner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>aac2324beeca72e2346cdc2bfae146071</anchor>
      <arglist>(const hier::Index &amp;rhs, const hier::IntVector &amp;corner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a06bf86d76fdb3bbca47249adfb7c8b1e</anchor>
      <arglist>(const NodeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a97ecdfeba808e4a4ee820ef07a206e68</anchor>
      <arglist>(const NodeIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a99dd8d2f3069e999fbc0e9952c9beb0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>aca3038774e3aaaf8951c327062404cce</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a0e6327f8450c75431ed016cfce24c80f</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a0c1c94ae01eb1f777e788b4867b477c1</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a2973c4fad4384afbc51db22a7e5fab69</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a55792a1fc28b535b846ce836c50658ea</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a35206e1d2833ab1ecfaa707abdadcb31</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a7a40f6b95554c85f467edc1f208da90f</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>adf375e6895dd6d5cd3c13b98583b35a5</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a264abc508a7dae10d7f2e5a238a38a10</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>ac088e42ba1d5341298caf29ad11917c1</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>NodeIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a4460d2c53a81f6cc824c77ae1f504095</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>NodeIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a23e4bfb8f5843ca67dcc805285e0c34c</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a33e5bb6d2c0838d3662be911d554b1a0</anchor>
      <arglist>(const NodeIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIndex.html</anchorfile>
      <anchor>a8d8c4075ed3f3f452ec5bbbde36a1d15</anchor>
      <arglist>(const NodeIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeIntegerInjection</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>NodeIntegerInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>a4d98bcd7c7e9ccb1c10ad797e0c1f051</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeIntegerInjection</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>a10612041b22e0f7a42b001a74726fa53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>ab9f667efa61584c56bef4f1ff20be6a3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>a9137dcfd9de592376e80b2df414833a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>a56eac4315441ced6070e5276f3261d3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIntegerInjection.html</anchorfile>
      <anchor>af8d9e4ffc64b4739fea2b277f7731319</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>NodeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>ae593e75a7172274227c891568ab0bf74</anchor>
      <arglist>(const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a8e6f8c682085315c97efba71326b4bdb</anchor>
      <arglist>(const NodeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>NodeIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a9542d5250da03132e7c746496ee6932c</anchor>
      <arglist>(const NodeIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~NodeIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a06a7a1425b62f70f223c642ff145331d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const NodeIndex &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a02b5075cf17bf2d0ce1844e2fd93166c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const NodeIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a555352004547f9dd4d02676f2c48321c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a1222910dbc15e77eb8bd2f0afee988d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>ad0789d5beecd803c9f32778cd73902a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a3135c3e1041212d121aff599bf5ac73f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a30f37ba632fc64f90202d1de184cff8f</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a2f144383a4d628257e2f172ca81a30b4</anchor>
      <arglist>(const NodeIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeIterator.html</anchorfile>
      <anchor>a71b4cca6747fa198ea949bccc9a91edb</anchor>
      <arglist>(const NodeIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>NodeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>a1d6941e8a798398e01f8087d6db489ad</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>afb4f2d9c5415f2d26c8ccf3eba6868b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>a755a7d6081bf3755fb0d4fe04bcfc83c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>abf2b3eef9d811755ce39a3d748fc4e78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>a150d56070c894b3302ea11e3094c3ae5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeOverlap.html</anchorfile>
      <anchor>aeda3960679424df9b7eb77631c1f5209</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::NodeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1NodeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>NodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>a718ea8b88bd10269dd03358510aac7da</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>adf77044e3a4e350fb279cf0b9c8b863b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>a8a676942aa5f2f8367cb7763822e20d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>ac2b83b52781a7cb0134f5f019f37c78b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1NodeVariable.html</anchorfile>
      <anchor>adfe1d52faaa8455b3a465d8c7fd17690</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeData</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>ae93a939a339960ebd8fe23619c3443f2</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>ab56f6467748e4007a15d1a598196fbb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a9582220a2ec1e65da7b4a2d549483904</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataExists</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a398457fd97a4479a8ba389080202999a</anchor>
      <arglist>(int axis, int face_normal) const </arglist>
    </member>
    <member kind="function">
      <type>hier::Box</type>
      <name>getDataBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a22bbf4cf4c3dde390cda398d531dd630</anchor>
      <arglist>(int axis, int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>ab12f7e6fe687dec83fcb37e7f4508784</anchor>
      <arglist>(int axis, int face_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>abba1f107c9076f3a4f79804610f8240f</anchor>
      <arglist>(int axis, int face_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a6187f87608e2b4aa75f62c8c2a1eef9a</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a4016359f3de4b35a5cfde9021a8fed49</anchor>
      <arglist>(const EdgeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>abac70ff7ce42b8d08d582c9b0ae77685</anchor>
      <arglist>(int axis, int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a8bbee5c860d0df9103581173c71eca2f</anchor>
      <arglist>(int axis, int face_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>aac5d8c13ca05c50b5f88c80c3f78ea92</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a3592bba5724b619b798d09502d044e1c</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a4acd765a71de212834ea6a7b9160f259</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>af3547603fe16d66e57dc2eb095c4348d</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a800ee1a498d93679f9c72f764a1d890b</anchor>
      <arglist>(int dst_depth, const EdgeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a0ae546bb2d9d0a3b5ff37e2562f8d636</anchor>
      <arglist>(int dst_depth, EdgeData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a21ec1414a34922c6b244d6553a69a6d1</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a86ae3f8f198b35afb21cecbf8e97276d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>aebda3831bfc284beeba7e7dc0dd3648c</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a87d96f37d474c3416044d92d82b223b2</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>aaf6c8aee86d802d52a2b59f425376a6b</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a698fd4eaa01be7d9c40319f0363bd1e8</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a6ae6fad0878aa0e67d3ad9e11ef6bae5</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a0778a3518e0a599f769e36a28543e1f2</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a54e12b1be7dadf84cd13cdaf9b71d1d2</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>aa3689a92a5a6d18bffb81b757929c68a</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>af7478b2c947ebbd05f0023880ca88e10</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a3bf36ab3bc9936b3b673370261edfa4a</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a09eecf7259892c6a45a71933986214cf</anchor>
      <arglist>(int axis, int face_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>abbd6412b2c6479cd3d850b52f382bb75</anchor>
      <arglist>(int axis, int face_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>ae57ad3d315fe6920237b3f8af2cdb981</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a04d9d975cb2b6a7e943d9a94f2f3cb84</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeData.html</anchorfile>
      <anchor>a63aff3cf6a833dfe90eaef9b0749ff40</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>ab4a024cbd5542a5eac00aa528a71a2ef</anchor>
      <arglist>(const tbox::Dimension &amp;dim, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>a997c59ed8634bb0a0051c9fadae5fe60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>a5c829781f06fda2268fa009f5c42e4ff</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>a1bc672f1f9e8a2c45804d81fb2ecfd79</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>aa1aa5055d13fd84e1c86344cffa8af31</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>a26e8212beba1f0739b6b733728ef9ccb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>ab4b4bf005ec2e5f55b9283f5cb18797b</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>aa682d83d00849986669fdbd021913615</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>a8e1a2d29d7fe58eaf2db8224006ae237</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeDataFactory.html</anchorfile>
      <anchor>a9edf50748993ec9eebef5254777db13e</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>EdgeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>a63dfcd3c5f023a92de6e6a082212892a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OuteredgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>ae576225e1a7307d777d19e6db0c170d7</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>a64da0615bd9baa74c8f0c5084ac9d1ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>a930de37bc8c5cdb5d03ece0bff25b7d7</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>a373e54da2abe8788f0289f98ca885245</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>ab7a9dad06be464bbba7489beee7fa885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>a2038908e246ce7d5bef7c94a8f0fd165</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toOuteredgeBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeGeometry.html</anchorfile>
      <anchor>a7b73a2c9e1fe36e1c1b7bac4ecd20e88</anchor>
      <arglist>(const hier::Box &amp;box, int axis, int face_normal, int side)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuteredgeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OuteredgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>af4f9b55cca68700dddb9b7932f37274b</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuteredgeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>a075ff315719e18f1690be7714b55b428</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>a58c225af7fdde75c6b6ffc3aa7243282</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>a091387a5ab24114e0869c1b3f224d7ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuteredgeVariable.html</anchorfile>
      <anchor>a18327e4328bb288e40ddd7b102d23983</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a037e2103aeec42ff91a6a1bce209f3b2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>ac2e8311188b332f4590d31b17f480e47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a79aae791efabdc54a83d5d305f00645f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a1a936ecd30a29cdcc4fb7d47d8aac378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a82ba0d86892cca1c249aa0a8447d57fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexConstantRefine.html</anchorfile>
      <anchor>a32667913499cf880c14e2c60e985c7d9</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a638f62cc11fddaab7dd5ea6642100401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a949370263f693719df654814968cf5f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a30e92e79d11d2ff7710c782fb760202b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad91c58fbfbc807b9b907d8502dc08cdb</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceData</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a94fcaba560254c423bdabafa316396af</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>afdccc0522f8d632b0bf438aaafccfb26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>abac46eb1ac3dcf5effde699db9d02650</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a4c3758a18fdbc09dca8643d9a7ee42df</anchor>
      <arglist>(int face_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ad9ea79b48c26eb6dcc02188785126655</anchor>
      <arglist>(int face_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>af6e11e8072fc4494ddf9fa9a3c900ed2</anchor>
      <arglist>(const FaceIndex &amp;i, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a2b74ad62ad7f404514a31279ac4afa89</anchor>
      <arglist>(const FaceIndex &amp;i, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a05f2fff0ba861c7984e13093d0ed2639</anchor>
      <arglist>(int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a8b7d71a39e9883e18505e4edfd3f896c</anchor>
      <arglist>(int face_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a4bb8a3cc7cf4137e1c2999c732bccc14</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a960411cf88d31ca4c40f80c63a49d351</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a9101df7477ea5dea507d714e2f4668e0</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a14c827b8e8b29b771884025c848156bf</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a5e86cfb24a2f8364be3750aaa8c2a112</anchor>
      <arglist>(int dst_depth, const FaceData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a92d331d694747a97d57b363627c9a2b2</anchor>
      <arglist>(int dst_depth, FaceData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a9dd89d4744a8db9b8bff2839865ee816</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a12385045107d6c625f71c24493a7140c</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a4a23bd0dbe30c2507938511455db545f</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a8d924c3ecf7ec9d85d02337a533c545c</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a5967795f55e3310928ee737eb709cd46</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a7fc9aba6642effb1774b85db9891a984</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ac6da9f8f7c25acbc14ece18120818043</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ac6e767f808b40d90b9232c07f1835ddf</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a79b4e2069385d746d38ce80106758df1</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a9c4891e6167dfa374314d2a5de71d1a5</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisFace</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a4fb9cd0a7403085b7859f05ef3e0dd17</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisFace</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ab1da38cad810b675d6cb2038dd80d88e</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a36bde34495bf4fca4a22ca2bde13aa83</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>a122b6d203befb74f5ec417c4f937d774</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceData.html</anchorfile>
      <anchor>ae312867ccc7b2d5462c76b2fcd33586e</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a2adb258db4e458f45e3473c86d109558</anchor>
      <arglist>(const tbox::Dimension &amp;dim, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a58febafa4d6129beeb13a4b60f53a0e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a133f554036328e7ed2208e23660c969a</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>ae6bd67940219f9dc0b4563d05a896ba7</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>ae18a43331002b46f162b9c0326d3e98c</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>abcbfa8717ba3a872a58e66ca2d44fdb6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a7c8af7ec9abf3fdf18045083123c6fd0</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a135d87a00bc0bcb0a92ff8f32838d25e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a0ba947e0e9e43a5308c3e5fe8423bd3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDataFactory.html</anchorfile>
      <anchor>a9557a625929ff1d28cc227cdbc6ed4ab</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>a7f6ebdb00789793094292852414f549e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>a832983f0adac05afce653d69ee70afa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>a30787b6b36d31aa042f29957d4e74509</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>aef9b8b4e325b5921c5e37a3ded8eb2d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>aa34b4abb717c6893ce7a84c00615b792</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleConstantRefine.html</anchorfile>
      <anchor>ae57c049498537b70e5c07f997424223f</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a8713ee01d0656c5cfd2aa6e287767cc4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ae0a91013315ee7a0b5c363d53086c1a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a9744b49789353835fd07ca76f7d13339</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aa5368ed4f1a52c9297dd5ba74840ea1a</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>a6149124b5cdba252004a17d6b7760a1a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>a1be5b08d41703fa76130bc664905443f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>a01994092c6fc7f00cba47a3f02c90d81</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>a7cdafdeb21ebe7187ef8d74baecf619e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>a9ffec9eb54571827c3d09991bf0f0983</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatConstantRefine.html</anchorfile>
      <anchor>aaa6aaa9f7d03dca255174ed4101f6160</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ab49f81c9c7669d40d290a2daaff857ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a5230c7b66166c1984bc3e3ad88aed5c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aaf85f54d9b2d665c47373012410a9fba</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aba1a0c7b68652a40df30ba83a0869bc1</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>FaceOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>ad7c552dd7540ee2cb8c620c31839d2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OuterfaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>add5184020e2604ef087e05a1ad544d94</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>abe5003331dbc5ae4faba6be3aeb6c4e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>aefb7d56fc9080be850f2932fba8af9f1</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>a9754aa6abeb6c06d5bd48c83aab32c70</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>ab4fb5e99b52120bfbb69deb612eb9eb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceGeometry.html</anchorfile>
      <anchor>a3d975836454f9ed9330113b0d8ba5b49</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>a3ae2f7bcc32a1044f780e984e1eee9e7</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>acd4048334fa97db1a64e14721c513f71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>a8cb21d82b23521cb7f855bdae3a6c4f4</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>acfde52d722b5a89beec154015aedcb05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>a8762b238931a496fb0ce21c833bf3b73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceIntegerConstantRefine.html</anchorfile>
      <anchor>a456676b2129ec30708c3e532f1fd54bc</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuterfaceVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OuterfaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>a9ce23e724b419b7b3f0f939fd263549d</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuterfaceVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>a6ae81086dd3e1d6611498913ddf96b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>a855a8a9372c0e15c86dfda38b848d84b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>ac40f24f7a6eb23d06aa6f437b0bba1c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuterfaceVariable.html</anchorfile>
      <anchor>aeddfabaaa662af55167115a49a65facc</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeData</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OuternodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>adfe0542fb7f4523c4b7fdfe3bf077667</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a0128045397f487384663467089024916</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>af33eeb6b84f7b9bf83c326ed5d4f2336</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataExists</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ac70f49698f3caf21bf5afa3fed04fe5a</anchor>
      <arglist>(int face_normal) const </arglist>
    </member>
    <member kind="function">
      <type>hier::Box</type>
      <name>getDataBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ab3736a632e854e867570ac5f2c773cdd</anchor>
      <arglist>(int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a84caabbaaffd6f12cf7320777e89da0b</anchor>
      <arglist>(int face_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a41d52cbd48c6b8e7c388829429031224</anchor>
      <arglist>(int face_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a6e2a91955337c0116bdd3adb6b076485</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a50a53d880024e6ed5f7917bbea4e2608</anchor>
      <arglist>(const NodeIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a596870d61a3428286e3a751c4bf72b78</anchor>
      <arglist>(int face_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ad7040da1e76b1cc01470746420b6cb4f</anchor>
      <arglist>(int face_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>af2f19218c8a309e1803d46a544717a67</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>afc09a908e16e18fa788f222641c93ed9</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>acc8d76911e96fd63e9a027715cb09147</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ae0c852565ad15d3949b05dc6da143029</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>aec59e0f618e85d017208f15392867ad8</anchor>
      <arglist>(int dst_depth, const NodeData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a8a41f654d00baf434d440261e28109a7</anchor>
      <arglist>(int dst_depth, NodeData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>sum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a66ee5a9f492f937485f350471f5a4908</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ab62fa6f731e24022863c68f441e123f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a051a2bc7289bea12bd3a8309942081cb</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ab502138bce02588199b2d6280a52ee65</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a4e74709b5561f9f49f4a5a632efcfc13</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStreamAndSum</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a232a93e1a011af7d4be64eda4b075cbd</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ac48a5d19f6d2b5e5c7083aa1c812cc65</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a2b633081cdf0053bf0fe94fbf4956e00</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ae25954d8dedc1f39788ca8c720dca63c</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ab2c87419e10beeebfec2620503c4a102</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>ab88b98e7f0916cca392f5dd8f5471542</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a392458d7953027d935f44b70fa067997</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a3fae21f57a244e4413aa8f8064d7664f</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a2ee1de2236f289e645017c90b8351ac6</anchor>
      <arglist>(int face_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a4e128d5ca46c2884714aca3061268cb7</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a1cc6c9e1dff5cc764716d164ac223c8d</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeData.html</anchorfile>
      <anchor>a1022258267c7742a64a5364002a2c570</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OuternodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>adcafdcd1c270dd3fd6f04734b0fd77df</anchor>
      <arglist>(const tbox::Dimension &amp;dim, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a8d133d928fbd35b148bf6375a8ab98b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a3028bb3e51a2cf6dc13e3468cc8a6755</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a8eed023b6c90b70db650a16dad9d09c7</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a9b5b7e8fb34d7ab033586675b81e7f8c</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a5b2f73183704d2453b889fa0c519daeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a1f5ecef7793e1642c46e69545d6b9cc7</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>af8d2ca5576b651ae4046b6a07a030fc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>afd078f8b3764159fd70ea5343f5befaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDataFactory.html</anchorfile>
      <anchor>a42d1d6520d9929d9220a9392a479974d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeDoubleConstantCoarsen</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</filename>
    <base>SAMRAI::hier::CoarsenOperator</base>
    <member kind="function">
      <type></type>
      <name>OuternodeDoubleConstantCoarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>a59f296dccdc06c14e6701817dd282ada</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeDoubleConstantCoarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>a909791ebff51e0d95bc004c49969b7f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findCoarsenOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>a97eee91b3b71d9e9c3c933be7f2a7cc3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>aba10eee2665af7c43367c8857fb2c93f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>ab58aa2c73f8f81d279cd694e86e0928e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsen</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeDoubleConstantCoarsen.html</anchorfile>
      <anchor>aa634b079310319e264f80765b7b42d34</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const int dst_component, const int src_component, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>NodeOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>ab9ec7a005655bad7601b00183cf0aca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OuternodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>a581950e21acb43cc02537b0a57c3f1d4</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>aa27cb4f7f5587fd7cec3e406e3c5efce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>a78ecacc7cd0cbae95f69827b41517c88</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>ab2257faf38e35980a31177c7f478f2b2</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>ab9140184e7707a2edb458995fbc1f280</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeGeometry.html</anchorfile>
      <anchor>a9f3cddcc56b2673e2b5c5a1735236f6d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OuternodeVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OuternodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>a8235cd12e80a49e0a864f3ba0a644eb0</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OuternodeVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>ad4e703eab03fb04f677d0f18cff84399</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>a4aa5ee1dbf8f80dfaf48304856226f24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>aaaa9fc2d843c0418fc4c34206313d30e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OuternodeVariable.html</anchorfile>
      <anchor>abb75d320d5df5276e1762c5aebedeaf8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OutersideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ae28c6b89d01ea7c819fe59f1dda9e80a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a899a94a3ffc914b1a319edde2489326e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a70747692f4e898ea1328f8541b9cb4ca</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aed14c37d5742234b04f3553d2336ff09</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideData</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="function">
      <type></type>
      <name>OutersideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>afebe9b78412bc99ab77d445f84478efd</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a06bc4de3d2c23daec6daad8c78ff7a1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a5f0ca587deb2db2ca306da57fe788b16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a03c20907c71d125922734c4973c2c744</anchor>
      <arglist>(int side_normal, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>ab5502b6b94bd070c5237fd0c37cdebc2</anchor>
      <arglist>(int side_normal, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a4a32e227a015be5392e936a03355fe6b</anchor>
      <arglist>(const SideIndex &amp;i, int side, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>af64aae74f8da63e3433a68d026cc7b20</anchor>
      <arglist>(const SideIndex &amp;i, int side, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a1abfc16d7700f1d52e304ccc11a82d9c</anchor>
      <arglist>(int side_normal, int side)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a32fe477351de65c081267c92018ff7b8</anchor>
      <arglist>(int side_normal, int side) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a63a12af01bd8192673bfecf6b5869c15</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>ad791516370418b0bba3ab249b825ede5</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>af81c4791f0df548cfa9ef0ce70b39403</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>acae756dc17bc40051b29516bc60bb364</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>ac2d2ea596adcea9010d5c7dd4dd00580</anchor>
      <arglist>(int dst_depth, const SideData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a50a0a6ad50a9e7e9f9122affbf81c5c4</anchor>
      <arglist>(int dst_depth, SideData&lt; TYPE &gt; &amp;dst, int src_depth) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a6daa5b99476bf5cf151ac98ec7023716</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a0bcb8cc626b9dd367266c1ae64a37c0d</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a48d748fdb64fd42748b0e88671993636</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a24f67cfa6cd5dee8f89943ed0f882b93</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a122517ec8f2cc3a4fffe72f406bf0c55</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a938d403fef203d22a9e75a9629c4ad2a</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>aeb4d411acf39cb988d0a1ddd1f134082</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a637b423fe179fddcfabd82af53421787</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>af259a0d77b3bfdbf7c1cfc963e30e8e7</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a88d553ba1f1a1707094ab6ae96651ea7</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>aceb25dd84beac57f89c4ff302e8d77f6</anchor>
      <arglist>(int side_normal, int side, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxisSide</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>ad77ace2fb201ca5a6aebacf04231f1c9</anchor>
      <arglist>(int side_normal, int side, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>ae60d514d05af4714d66fb2e56487177a</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a762ab59372c9b720ccd45c81de8cd0e8</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideData.html</anchorfile>
      <anchor>a205647cfcd6df34fe98da22c11d239dc</anchor>
      <arglist>(const hier::Box &amp;box, int depth)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>OutersideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>a3d591b37362c035df8f43c31cc781137</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>af3d6b2e356c9322091cc71e6fd5ccfdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>aeddeb57524c3cb822952be5f6a8d8384</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>a4d7f89c57351d873cfe6848184573333</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>ace3bf238060138b24abc8cab781d326c</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>acdb6d550ff2fa29592c85ef8e59acbad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>ab87537c4f8a2ad70e6bd254ef34d53d6</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>a728006fb75d27f4a22e7107f25d29aea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>a608a47a38e4e89c892ccbc83ea6ae276</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDataFactory.html</anchorfile>
      <anchor>aeabb9fc45eb802a01481a3e11af8ef04</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OutersideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a80950cce587a4b2cb69d68131a86aec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>abd8488986d04d448ae546157d53db08b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a35cc9c8cefd5b728749cc7ecb0250cf3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a801d8595a5b1e287fcc9a1c24d4b3c8d</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>OutersideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad07552b0e8fb25337b3dc27f1ad16bd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ae4e8371c3f8f1b14175b05e7b2384198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a59eec4bfe2d01c2cd45f93f55a383458</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aeb4f4f42c4e1603849654641166c6471</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>SideOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>afb16fa8ad4aab157f76ac48fb8fdb51c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OutersideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>ad4396f4880fb889027aa850c5ccddc60</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>a9c353849151da34dd03df194db2c02b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>a6468ad2ff3aba6586de77ff9f7786c1e</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>a741e38e44710853ded7d6dfd7cc9d742</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>a10b5500e3a7f4f1af37db0ce42e6144f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideGeometry.html</anchorfile>
      <anchor>a820172f33afcde86bf9c850e49e5e922</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::OutersideVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1OutersideVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>OutersideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>a0761bd33971681fd294893473f03aff6</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutersideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>adff3347a1e52756b1f0a7217f256d208</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>a35d8145fab093fcde87adf06ec8ddc62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>aa90e2d990da521cfec264d3d946865b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1OutersideVariable.html</anchorfile>
      <anchor>a9a9d0ac0bedcd6ca1020570ebb84b44d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SecondLayerNodeNoCornersVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>SecondLayerNodeNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a6e7b3892e5169773782d6e4d9c7a8f20</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SecondLayerNodeNoCornersVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a388474970703bc21fdbaf1bd1d7c09e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a9177bf950436fc4a685ad701e0ecc1ee</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a2590a4ce9fee8b59875e0459792e74b9</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a70667cdd3299d56f85efb625c4229064</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeNoCornersVariableFillPattern.html</anchorfile>
      <anchor>a34c0a39fd288b011ea27bc861306ed40</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SecondLayerNodeVariableFillPattern</name>
    <filename>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>SecondLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a3f060e6254b790247b318f40b26986b8</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SecondLayerNodeVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a575cf6d91bb5329c2d81e57dca390436</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>aebbcb2f4f683e7d8e6105114eb971f1a</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a93d886d0f216db980ea972555d18e24c</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a2933626c24c34dc8d384c87e6a4f6aae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SecondLayerNodeVariableFillPattern.html</anchorfile>
      <anchor>a72dc153ccbb1f3139b8a235a293c30be</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideComplexConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>a1914af2adfc86780bb806b65b4bd0bfd</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideComplexConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>a384010c8cc4ede51e7cca7e8ed0e8ec3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>abcc750a33e0ec309a97959ec61513f8d</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>acaf53d07623d1396088e164a91cb68ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>a8aa58405312ffec8e918f7a6c9aa6a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexConstantRefine.html</anchorfile>
      <anchor>a8ee12bb55c51dc6219a6b47c288541a2</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideComplexLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>SideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a6bfe604975f55eda085fcc48378d6515</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideComplexLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a5f17b59cd200c3745245daff4c6bf8b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>afdc200305adef165a92548c593e444d8</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideComplexLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a7a72dff1dec3533e31e5864fc77bac19</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideData</name>
    <filename>classSAMRAI_1_1pdat_1_1SideData.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::PatchData</base>
    <member kind="typedef">
      <type>SideIterator</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a7922a23370966da9fb24d17defb40abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a189f2217afc01343aaade9157dc8fd67</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts, const hier::IntVector &amp;directions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>aab16042c774f4839c8c427f9e945ee91</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a73dfc408cfc9d9efe5a2ca1a7008f2f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>aa3336a2aff2145821938b67c0f2e0418</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>ad905e959b9c9fed2eb2b88f35aade052</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>aca3a0d973afcce44df4a1a756ecc50cf</anchor>
      <arglist>(int side_normal, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a1bb05e14cfb1d902dec09d2e928bb84e</anchor>
      <arglist>(int side_normal, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>aa378a3aa08badb81695ddc0909bc6ff2</anchor>
      <arglist>(const SideIndex &amp;i, int depth=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a369abb7990e78bea9cf4ddcb87441fe1</anchor>
      <arglist>(const SideIndex &amp;i, int depth=0) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a6016a3d30ce1c10220bc2ccb54a2948d</anchor>
      <arglist>(int side_normal)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayData&lt; TYPE &gt; &amp;</type>
      <name>getArrayData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>ad581380b301a910b0419d1b12a4a7ac7</anchor>
      <arglist>(int side_normal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>aa734b21163d23fb7fdac69226c2a966c</anchor>
      <arglist>(const hier::PatchData &amp;src)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a689e4d482edcfd2fccbf59acf8ef6202</anchor>
      <arglist>(hier::PatchData &amp;dst) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a7aab10344503d9c879b0dd3611695eb9</anchor>
      <arglist>(const hier::PatchData &amp;src, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copy2</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a56edd614bb8fdcbd8691c5d689b5ae41</anchor>
      <arglist>(hier::PatchData &amp;dst, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyOnBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>aba78ba7e5210a7fe1154cdf307c104e8</anchor>
      <arglist>(const SideData&lt; TYPE &gt; &amp;src, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a54ddf38a3770baef841edfd42ad89673</anchor>
      <arglist>(int dst_depth, const SideData&lt; TYPE &gt; &amp;src, int src_depth)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateStreamSizeFromBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a510a7443f5a0b5976f7c86b570b7cf4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a8e9fe5ff6cfcef386d75fc8f21b6e506</anchor>
      <arglist>(const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a72ceb02056871c998c6c7027db2afb8e</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a33625db5acc8a2537b305a766744693f</anchor>
      <arglist>(tbox::MessageStream &amp;stream, const hier::BoxOverlap &amp;overlap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a8be77b0d121e64f47c7c261ba77ab0ec</anchor>
      <arglist>(const TYPE &amp;t, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fill</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a16013f5a7f754f5dfa6599a4a81f4594</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box, int d=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a327a8502304d4f03d23e91b368aa9e68</anchor>
      <arglist>(const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillAll</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a2265ad96ebd890b580af1e9d8660d519</anchor>
      <arglist>(const TYPE &amp;t, const hier::Box &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a5e095c6597a12d0f5d8dbeb8e24d8bb2</anchor>
      <arglist>(const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>acd7f2553db6fb5b05f31f63766f7ed0a</anchor>
      <arglist>(const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>ac3ef6a5d3f28ec3f6e34fbc4427902b2</anchor>
      <arglist>(int side_normal, const hier::Box &amp;box, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a2f96fae76b998702ca0aab37658d4fbb</anchor>
      <arglist>(int side_normal, const hier::Box &amp;box, int depth, std::ostream &amp;os=tbox::plog, int prec=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecializedFromDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>ac65469e3b8c7e947c7f8d53f48b84144</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putSpecializedToDatabase</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>a705e052def6f207630af1b38bf93a294</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>getSizeOfData</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideData.html</anchorfile>
      <anchor>adc240e9845e07e8a4bfd71809cffd7e8</anchor>
      <arglist>(const hier::Box &amp;box, int depth, const hier::IntVector &amp;ghosts, const hier::IntVector &amp;directions)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideDataFactory</name>
    <filename>classSAMRAI_1_1pdat_1_1SideDataFactory.html</filename>
    <templarg></templarg>
    <base>SAMRAI::hier::PatchDataFactory</base>
    <member kind="function">
      <type></type>
      <name>SideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a64a3362a723d61e697ea033337f349d7</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>aa99d674df389fa8706bc3b93a49474f2</anchor>
      <arglist>(int depth, const hier::IntVector &amp;ghosts, bool fine_boundary_represents_var, const hier::IntVector &amp;directions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideDataFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a5ea49b994a02c4275d80d4ed704bedd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchDataFactory &gt;</type>
      <name>cloneFactory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>ad4a274685c3cc004b8816624388fd886</anchor>
      <arglist>(const hier::IntVector &amp;ghosts)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>aa294c18fad32cf62fbb774b09d44746b</anchor>
      <arglist>(const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxGeometry &gt;</type>
      <name>getBoxGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a729a916072f996c08ab888f99b8ec12e</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a200c0df0ba24906af97c264cb29e049c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a9a3a10f6bd1feab6b37433d26f7ab3ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>getSizeOfMemory</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a9552f7d8e709ad0104492c93266806de</anchor>
      <arglist>(const hier::Box &amp;box) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>af82439edd4446a0d60ac368ecadb83ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a04aba7930cbe31d19f3eb775f2ea490b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validCopyTo</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a275cfd07a34388ce798ccd30b521363b</anchor>
      <arglist>(const tbox::Pointer&lt; hier::PatchDataFactory &gt; &amp;dst_pdf) const </arglist>
    </member>
    <member kind="function">
      <type>hier::MultiblockDataTranslator *</type>
      <name>getMultiblockDataTranslator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDataFactory.html</anchorfile>
      <anchor>a6e0fc1520e51063485dbbf8500f87171</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideDoubleConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>a48a65b8b528db04c0922186501c54205</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideDoubleConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>ab62d4811e8bbdf6cb6e7111a3abcc323</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>a62ba410e5edd065eea9174d59f6c62a7</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>ab785706698c3b2940f17c86215fc60bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>a4fc667cb1c9c25db8e8ccc3b45459202</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleConstantRefine.html</anchorfile>
      <anchor>a75f9abf3580484492a9fd4d05b313406</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideDoubleLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>SideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a88339d19cf9f1d7f8d18d8b6c72cf1fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideDoubleLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a57e6c941b29601a33c1270c87fe75f80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a92ac785020b808fa5ba7e27caf18446c</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideDoubleLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a494f9dcc5f029a358d6072b425e7c638</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideFloatConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>a6325bbf02e10f1a27ebf0837c05ea7dc</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideFloatConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>adae23ee937be97b4fdbe763ff2165804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>a2a03e2edf3b9b6a111649a6ad4736ec3</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>a31c7d20425b63c7f7a3726ca3243c0c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>a01555f08e17ff54062124a27d6f44d5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatConstantRefine.html</anchorfile>
      <anchor>a1f2ae1baef7e90f749c8bfe6c6fcb923</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideFloatLinearTimeInterpolateOp</name>
    <filename>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</filename>
    <base>SAMRAI::hier::TimeInterpolateOperator</base>
    <member kind="function">
      <type></type>
      <name>SideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>ad1df5391783b92a9143094a57c75c6ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideFloatLinearTimeInterpolateOp</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a19ee7c512d6bff02aa45a824da5c3f7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findTimeInterpolateOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>a64d578e6b3069ed4b96069abf10063f5</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timeInterpolate</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideFloatLinearTimeInterpolateOp.html</anchorfile>
      <anchor>aab6b710feb497b02192bda53aa867012</anchor>
      <arglist>(hier::PatchData &amp;dst_data, const hier::Box &amp;where, const hier::PatchData &amp;src_data_old, const hier::PatchData &amp;src_data_new) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideGeometry</name>
    <filename>classSAMRAI_1_1pdat_1_1SideGeometry.html</filename>
    <base>SAMRAI::hier::BoxGeometry</base>
    <member kind="typedef">
      <type>SideOverlap</type>
      <name>Overlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>aaadfee5c3af96df3219fa9ea9ae024bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a30cb8cb7af894eb758920333a5ded25f</anchor>
      <arglist>(const hier::Box &amp;box, const hier::IntVector &amp;ghosts, const hier::IntVector &amp;directions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideGeometry</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a01edf94e045c5c064bb95903b62c1f07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a8ec117f58b2adf21b921c6a2ea203c92</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation, const bool retry, const hier::BoxContainer &amp;dst_restrict_boxes=hier::BoxContainer()) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>setUpOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>ac9056b11fcc2651d981bc68cdb1d7641</anchor>
      <arglist>(const hier::BoxContainer &amp;boxes, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::Box &amp;</type>
      <name>getBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>afb1f4039ae357a0ce1a0f5b3440b328a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getGhosts</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>ab96d6df99453615dd1ef323f6fc60c8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a1188c4f02ef7e6a4a05ec90ead5b1a4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::Box</type>
      <name>toSideBox</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a265a2b3184d307fb7894b648aaa14b17</anchor>
      <arglist>(const hier::Box &amp;box, int side_normal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>ae30f8eba58c9bcfd37123e46e1358fa2</anchor>
      <arglist>(hier::Box &amp;box, int &amp;normal_direction, const hier::Transformation &amp;transformation)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>transform</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideGeometry.html</anchorfile>
      <anchor>a71bb66d2daf3811a31c0785031b29c94</anchor>
      <arglist>(SideIndex &amp;index, const hier::Transformation &amp;transformation)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideIndex</name>
    <filename>classSAMRAI_1_1pdat_1_1SideIndex.html</filename>
    <base>SAMRAI::hier::Index</base>
    <member kind="enumvalue">
      <name>X</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a45d834bf65746272bde9b5238c68e587a8241903704ee9c196753e405db0750c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Y</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a45d834bf65746272bde9b5238c68e587aeb2fd5f259284cd3ddbe94159da2d7c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Z</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a45d834bf65746272bde9b5238c68e587a3878e0af18d3912d9b0a510e1e6cdb56</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Lower</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a45d834bf65746272bde9b5238c68e587ae37f8a4fcb685109e96810458b340e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Upper</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a45d834bf65746272bde9b5238c68e587a873faa7cf8001e839c5660732882952f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a71f2602d7788f47c57b796f02d04ba9e</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>af60c96b8b6c60ff3863a57e64b5cbe59</anchor>
      <arglist>(const hier::Index &amp;rhs, const int axis, const int side)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>aac6902c87fe00fa8fb05894b7a7c8644</anchor>
      <arglist>(const SideIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>adcc45996e164872d5d46f87c9be0642b</anchor>
      <arglist>(const SideIndex &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SideIndex</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a97bd0b89e99af21b2e04f6a01e8ade85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>aa2176802f6869553ceec1fc34230066b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAxis</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a0e19309ecf93c4aea6f4ec31fdf77902</anchor>
      <arglist>(const int axis)</arglist>
    </member>
    <member kind="function">
      <type>hier::Index</type>
      <name>toCell</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>acbff9cbbb8f6d9f32cacaec7e2fc1492</anchor>
      <arglist>(const int side) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>ac8169e22a27141ddfe52adbb923d9db0</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>add3287dcda161056003c571540f680eb</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator+=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>ab57f1a7e86545399d17bdf0dc21b7979</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator+</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>ae8a1b75ea32109288a2b4b8d503e78eb</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a6d0dd00ba5f2b345e7be9e5ccbfb70ff</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a7e65e1e7d9b5fedad8c188b5d1f60358</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator-=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>adc6d758e48e4f856c73e864889ab4ecd</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator-</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>aa04645f0f02f916fb6fc31daaa41ebf2</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a2c484167a2fa37087992df52f197f9d4</anchor>
      <arglist>(const hier::IntVector &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>a3b48cea97c68fcd6b2d7452a60537526</anchor>
      <arglist>(const hier::IntVector &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>SideIndex &amp;</type>
      <name>operator*=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>adc9632719ba999cf74c0239908ecef28</anchor>
      <arglist>(const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>SideIndex</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>ad99d6b82df988cc76a8f873c87774139</anchor>
      <arglist>(const int rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>aad977cb9a9c788d224ccf4611d9d6d9f</anchor>
      <arglist>(const SideIndex &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIndex.html</anchorfile>
      <anchor>ae30a23705543c757668be119473dc838</anchor>
      <arglist>(const SideIndex &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideIntegerConstantRefine</name>
    <filename>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</filename>
    <base>SAMRAI::hier::RefineOperator</base>
    <member kind="function">
      <type></type>
      <name>SideIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>a7a0810a290ab05ba6bbe4da430e3cac0</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideIntegerConstantRefine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>aa9f3c9d56a01baafc0d39195cd358774</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>findRefineOperator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>a3d75906af92efdf7a0db4ee722ea7897</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const std::string &amp;op_name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOperatorPriority</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>a1e281c5bde41693c608240272f7f06de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>aa2624091b98db85f9a1214a809eed9f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>refine</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIntegerConstantRefine.html</anchorfile>
      <anchor>a7dec9f5d166045139f4d71f895e59cf7</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const int dst_component, const int src_component, const hier::BoxOverlap &amp;fine_overlap, const hier::IntVector &amp;ratio) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideIterator</name>
    <filename>classSAMRAI_1_1pdat_1_1SideIterator.html</filename>
    <member kind="function">
      <type></type>
      <name>SideIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>ab7962b69aa73cb6c90a77a08f3ba51f1</anchor>
      <arglist>(const hier::Box &amp;box, const int axis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SideIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a38f30c025d414632abc7ad1b80bac647</anchor>
      <arglist>(const SideIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>SideIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a516da319f7d474f39d7e2a6b5e3d9def</anchor>
      <arglist>(const SideIterator &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SideIterator</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a245f51ab4421816e0fea5e95c6df994f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SideIndex &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a972091acd6554047e9c12539f72ebdea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const SideIndex &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a19d311ca15f9d997b3ba9fbaced691ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a3fd09aca568f7f482702a9db29c452ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a4c92c41ea47fc5debabdd35414d01749</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a5a8184efb9cd0e048c2d8cc198d5a4b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>abaa89af8041bea7e4784484aa97f55df</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a391a75817fb0464f7cbdfcb4ed30ca99</anchor>
      <arglist>(const SideIterator &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideIterator.html</anchorfile>
      <anchor>a5a2af55de181270c3fce00b207a761b4</anchor>
      <arglist>(const SideIterator &amp;iterator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideOverlap</name>
    <filename>classSAMRAI_1_1pdat_1_1SideOverlap.html</filename>
    <base>SAMRAI::hier::BoxOverlap</base>
    <member kind="function">
      <type></type>
      <name>SideOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>a12d6d402e7e67d18b78764bf42df5234</anchor>
      <arglist>(const tbox::Array&lt; hier::BoxContainer &gt; &amp;boxes, const hier::Transformation &amp;Transformation)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideOverlap</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>a2f1ca26bb24e25b30d8afb50645b351e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isOverlapEmpty</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>aa691b1a4386779908ac5979d6a40024b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::BoxContainer &amp;</type>
      <name>getDestinationBoxContainer</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>a327e0ded01f3748c8f393c171cae9274</anchor>
      <arglist>(const int axis) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getSourceOffset</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>a59ef8f31ce1801fab8114230d60fbe44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const hier::Transformation &amp;</type>
      <name>getTransformation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideOverlap.html</anchorfile>
      <anchor>adea194007a85394abb459e260bdd326a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SideVariable</name>
    <filename>classSAMRAI_1_1pdat_1_1SideVariable.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::hier::Variable</base>
    <member kind="function">
      <type></type>
      <name>SideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>af2fc34792fcdc83ac5234168796ee402</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;name, int depth=1, bool fine_boundary_represents_var=true, int direction=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SideVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>a5746a8c0b0cbd03d8f71462cf5a62445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getDirectionVector</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>a39950039019a240b4b7f9b7126e32346</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fineBoundaryRepresentsVariable</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>ad39ea6e3602d718f1a206935d38b1427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dataLivesOnPatchBorder</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>a62e9d95dd2705eae6277ffd6962cdd59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDepth</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SideVariable.html</anchorfile>
      <anchor>a3468fbc9744e1bf739f59e0f8f491f65</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::pdat::SumOperation</name>
    <filename>classSAMRAI_1_1pdat_1_1SumOperation.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>SumOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SumOperation.html</anchorfile>
      <anchor>ab2f5fb41f74a8999f44905c1cbc96382</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SumOperation</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SumOperation.html</anchorfile>
      <anchor>a1e59d16e49df5fd17d1a88c489b32367</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1pdat_1_1SumOperation.html</anchorfile>
      <anchor>a6d024d2348effe0a292deae12b1716e9</anchor>
      <arglist>(TYPE &amp;vdst, const TYPE &amp;vsrc) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::solv</name>
    <filename>namespaceSAMRAI_1_1solv.html</filename>
    <class kind="class">SAMRAI::solv::CartesianRobinBcHelper</class>
    <class kind="class">SAMRAI::solv::CellPoissonFACOps</class>
    <class kind="class">SAMRAI::solv::CellPoissonFACSolver</class>
    <class kind="class">SAMRAI::solv::CellPoissonHypreSolver</class>
    <class kind="class">SAMRAI::solv::CVODEAbstractFunctions</class>
    <class kind="class">SAMRAI::solv::CVODESolver</class>
    <class kind="class">SAMRAI::solv::FACOperatorStrategy</class>
    <class kind="class">SAMRAI::solv::FACPreconditioner</class>
    <class kind="class">SAMRAI::solv::GhostCellRobinBcCoefs</class>
    <class kind="class">SAMRAI::solv::KINSOL_SAMRAIContext</class>
    <class kind="class">SAMRAI::solv::KINSOLAbstractFunctions</class>
    <class kind="class">SAMRAI::solv::KINSOLSolver</class>
    <class kind="class">SAMRAI::solv::LocationIndexRobinBcCoefs</class>
    <class kind="class">SAMRAI::solv::NonlinearSolverStrategy</class>
    <class kind="class">SAMRAI::solv::PETSc_SAMRAIVectorReal</class>
    <class kind="class">SAMRAI::solv::PETScAbstractVectorReal</class>
    <class kind="class">SAMRAI::solv::PoissonSpecifications</class>
    <class kind="class">SAMRAI::solv::RobinBcCoefStrategy</class>
    <class kind="class">SAMRAI::solv::SAMRAIVectorReal</class>
    <class kind="class">SAMRAI::solv::SimpleCellRobinBcCoefs</class>
    <class kind="class">SAMRAI::solv::SNES_SAMRAIContext</class>
    <class kind="class">SAMRAI::solv::SNESAbstractFunctions</class>
    <class kind="class">SAMRAI::solv::Sundials_SAMRAIVector</class>
    <class kind="class">SAMRAI::solv::SundialsAbstractVector</class>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>namespaceSAMRAI_1_1solv.html</anchorfile>
      <anchor>a046930b1fb6beb06e2c9cc852e7f8a66</anchor>
      <arglist>(compfluxvardc2d, COMPFLUXVARDC2D)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CartesianRobinBcHelper</name>
    <filename>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</filename>
    <base>SAMRAI::xfer::RefinePatchStrategy</base>
    <member kind="function">
      <type></type>
      <name>CartesianRobinBcHelper</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>ab5f902b19c0f16a675c53d1f2defccad</anchor>
      <arglist>(const tbox::Dimension &amp;dim, std::string object_name=std::string(), RobinBcCoefStrategy *coef_strategy=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CartesianRobinBcHelper</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>ac584bddf584afbd0a76564e8b9e5a2cf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a81a7cb7342f918784e8fe5cc65ec8c06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a16446008b3dda2332960e2748d43678e</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)</arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a3080f3d114f8c505500473bac8f9c8d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>acf86f3a681a534f91f33ad9eeeda18f1</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a45f34002a8892972bad987f62efb18e8</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a28c2af4322afcefa6db8fc30897a4ae0</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a1e6971500c7065980dc23970b850deed</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSingularityBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a4e1f795e450f22584070cdaca4cc4d14</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::PatchLevel &amp;encon_level, const hier::Connector &amp;dst_to_encon, const double fill_time, const hier::Box &amp;fill_box, const hier::BoundaryBox &amp;boundary_box, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;grid_geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValuesInCells</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>af9a02fd848d9fc73cac674c9172d9beb</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill, int target_data_id, bool homogeneous_bc=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValuesInCells</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>aeec0686bfbc279bdd0b260682ae5ae6d</anchor>
      <arglist>(hier::PatchLevel &amp;level, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill, int target_data_id, bool homogeneous_bc=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValuesAtNodes</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a38993238a738784975b62159f2096927</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, int target_data_id, bool homogeneous_bc=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoefImplementation</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>ae0e190ee02ff0d408d6b5cf5083df3f4</anchor>
      <arglist>(const RobinBcCoefStrategy *coef_strategy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTargetDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>aabbf8953d2001131ca81cc412e1e9892</anchor>
      <arglist>(int target_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHomogeneousBc</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CartesianRobinBcHelper.html</anchorfile>
      <anchor>a4d88c097694dd147158cac91e3718aeb</anchor>
      <arglist>(bool homogeneous_bc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CellPoissonFACOps</name>
    <filename>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</filename>
    <base>SAMRAI::solv::FACOperatorStrategy</base>
    <member kind="function">
      <type></type>
      <name>CellPoissonFACOps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a7560ff0373145a42b5e00472953c1fca</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name=std::string(), tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellPoissonFACOps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>ab929e6d932ac305f7e97a2042ad7bc29</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a0e5003c2efd2430aff1565d28a66b2a3</anchor>
      <arglist>(const PoissonSpecifications &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLogging</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>ac5f390be955fa0116ff644baca321ab0</anchor>
      <arglist>(bool enable_logging)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicalBcCoefObject</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a11d8e67e044428ad3785e5b2c7555da3</anchor>
      <arglist>(const RobinBcCoefStrategy *physical_bc_coef)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeVectorWeights</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a1f5e2a71dc648618dafd9e5c15af4653</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int weight_id, int coarsest_ln=-1, int finest_ln=-1) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a1d6862e56b7f55785a17b2a3fd508db3</anchor>
      <arglist>(const FACPreconditioner *preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFluxOnPatch</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a84c366a3490f4eb173f1e3486bf8829a</anchor>
      <arglist>(const hier::Patch &amp;patch, const hier::IntVector &amp;ratio_to_coarser_level, const pdat::CellData&lt; double &gt; &amp;w_data, pdat::SideData&lt; double &gt; &amp;Dgradw_data) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a07f963c2ba4d2b963f92393fb9b3c70e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSmoothingChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>addaca7b7d5d5b01d0af01a89979635d9</anchor>
      <arglist>(const std::string &amp;smoothing_choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>ae98af0144797774b5b61d164d57f9683</anchor>
      <arglist>(const std::string &amp;choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a0c59ea504691702a7e8fe0e4f08c9aa8</anchor>
      <arglist>(double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverMaxIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>aae8fb1daa6ff02d4e1d5d9630e660508</anchor>
      <arglist>(int max_iterations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarseFineDiscretization</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>acceff1410061d5329e9ca8345b132932</anchor>
      <arglist>(const std::string &amp;coarsefine_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProlongationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a28d01a7fccb95917571a6ab1bf5b253a</anchor>
      <arglist>(const std::string &amp;prolongation_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseSMG</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>ac8105cfa666111d9e9682bf1472ed680</anchor>
      <arglist>(bool use_smg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFluxId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>ac8cb3c4d50168c6d1d08ba4c599e772b</anchor>
      <arglist>(int flux_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkInputPatchDataIndices</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>add6f2240f4c16d618288864b8a95b925</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restrictSolution</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a519af350efc4c727346d102c9de49c3a</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>restrictResidual</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a9a76c90308783470ee687e9a68777681</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>prolongErrorAndCorrect</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a039613b32f29f73b7f2e12f9d14080ac</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>smoothError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a83625dda387afc4b50a9359967990b96</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int ln, int num_sweeps)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>solveCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>af0def579f9a4ffa10dd39f89a4b63245</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int coarsest_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeCompositeResidualOnLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a82e1606b80843a097c4d99763a41e232</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;residual, const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs, int ln, bool error_equation_indicator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>computeResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>ab2091fb3e4e044ffdbf773918abcf9b7</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;residual, int fine_ln, int coarse_ln)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a2da31e44d1cf2f54f7a941b6623fd7be</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deallocateOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>af48e45974c427278215ae11ee7bba734</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessOneCycle</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACOps.html</anchorfile>
      <anchor>a554bf193dfb039a95c9a6e7f9af40d77</anchor>
      <arglist>(int fac_cycle_num, const SAMRAIVectorReal&lt; double &gt; &amp;current_soln, const SAMRAIVectorReal&lt; double &gt; &amp;residual)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CellPoissonFACSolver</name>
    <filename>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>CellPoissonFACSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a49843abb1f7d2264aefacd31eb6d0637</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellPoissonFACSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>adb89a15de50b4704386b3bd422cd1017</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLogging</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a85325e01507b184e37460da0d5d401fc</anchor>
      <arglist>(bool logging)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a95a772e28ed1ee9dc2abaf581819a3aa</anchor>
      <arglist>(const int solution, const int rhs, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int coarse_ln=-1, int fine_ln=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>afe212d42581fa8eb90e2720a18bf4588</anchor>
      <arglist>(const int solution, const int rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaries</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a9b0be77958d81c1cdeddde09caa84d42</anchor>
      <arglist>(const std::string &amp;boundary_type, const int fluxes=-1, const int flags=-1, int *bdry_types=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcObject</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a759f60c6823f3bb41770ecb245ba7061</anchor>
      <arglist>(const RobinBcCoefStrategy *bc_object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a3d741fb98ef0697be27626dd4d05c776</anchor>
      <arglist>(const int solution, const int rhs, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarse_level=-1, const int fine_level=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a6c5f98f4b42b2446883f04752f76a95c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a406d59e375217782bb7f16d1002013a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a641db16b48dce1db624a22b1ac759c77</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a524e4bf7c32998c0d7a8135b99d93162</anchor>
      <arglist>(double scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a88ddf116f1e5a097ebab56d1b0441cb0</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a69bdbacdf5629f14adf99c4cc55f2256</anchor>
      <arglist>(double scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>afb1eb3c6aced79e6ab2320903c403089</anchor>
      <arglist>(const std::string &amp;choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a5f266e1c79ba8f866802f804a9707372</anchor>
      <arglist>(double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsestLevelSolverMaxIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a6e400d33f717accb7a9965440438c706</anchor>
      <arglist>(int max_iterations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseSMG</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>aee7ab9975f0ecc3189db57438ae224aa</anchor>
      <arglist>(bool use_smg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarseFineDiscretization</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>ae7466b51a89d5843a89e9dbe00832239</anchor>
      <arglist>(const std::string &amp;coarsefine_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProlongationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a88fa8036bb11a3824b2261689fddd79f</anchor>
      <arglist>(const std::string &amp;prolongation_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPresmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a61fdf1e75abec35586c35d4dffaab1a2</anchor>
      <arglist>(int num_pre_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPostsmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a3107042f95f81d42b48bfa7487d2e50a</anchor>
      <arglist>(int num_post_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxCycles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a6afac9946d93c3747ccb284419779e18</anchor>
      <arglist>(int max_cycles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a6d3f4c43d46943cafa6cb4b7112bbd1b</anchor>
      <arglist>(double residual_tol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a9446a1f437dc6276c29a8344e86de765</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConvergenceFactors</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a44adb9846d5b6c019bc7e6b5e0016993</anchor>
      <arglist>(double &amp;avg_factor, double &amp;final_factor) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonFACSolver.html</anchorfile>
      <anchor>a4dc6880e42acd91f58bc0e36d871abe7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CellPoissonHypreSolver</name>
    <filename>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>CellPoissonHypreSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a2fa9e62e4ba01663462eeeda4a566f07</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CellPoissonHypreSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a09b35d1aa19d26a55bd5673fde493e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>afebd015ee393402aea365c6e9c9c557a</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, int ln=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a657c7d64da8864c13d29aa195772c385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMatrixCoefficients</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>abb4f038b8bf890ab367d4496cc8d58b9</anchor>
      <arglist>(const PoissonSpecifications &amp;spec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolnIdDepth</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a28c2e8a6f2610be9bd9814d91573f126</anchor>
      <arglist>(const int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRhsIdDepth</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>aabe0547085ae3e145bac77bfccc023b6</anchor>
      <arglist>(const int depth)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStoppingCriteria</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a591ed0f75eca7fa509d02933fe28767f</anchor>
      <arglist>(const int max_iterations=10, const double relative_residual_tol=1.0e-6)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a593a3c91dbc75cd49403dc21da522905</anchor>
      <arglist>(const int u, const int f, bool homogeneous_bc=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a2025b37911077573fe684fe18b63398b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumPreRelaxSteps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a524762f7f4c0c9d01825e9daca8ec70b</anchor>
      <arglist>(const int steps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNumPostRelaxSteps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a5025a82dea19b7362d88c9cd092b24fb</anchor>
      <arglist>(const int steps)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRelativeResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>aea771a592a59fded11db58fce4da206e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseSMG</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a29e8df94840e831bdfb18bdf32cdac8d</anchor>
      <arglist>(bool use_smg)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaries</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a00ba4a31492ce4f68a8ecff0a6d3ece0</anchor>
      <arglist>(const std::string &amp;boundary_type, const int fluxes=-1, const int flags=-1, int *bdry_types=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicalBcCoefObject</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a45701483b6cac80c23c15e688d46d604</anchor>
      <arglist>(const RobinBcCoefStrategy *physical_bc_coef_strategy, const tbox::Pointer&lt; hier::Variable &gt; variable=tbox::Pointer&lt; hier::Variable &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrintSolverInfo</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>acace2c05278f650c2d849ca85151871e</anchor>
      <arglist>(const bool print)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CellPoissonHypreSolver.html</anchorfile>
      <anchor>a0957fe73e9da04f840cdee40cdbf477f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CVODEAbstractFunctions</name>
    <filename>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</filename>
    <member kind="function">
      <type></type>
      <name>CVODEAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>a607f5510414a79a7db0c1c0d32011e7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CVODEAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>a90eeea6b7ece82bb9ba998a45cf635e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>evaluateRHSFunction</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>ae9099cb58928379cd76caa82894e344c</anchor>
      <arglist>(double t, SundialsAbstractVector *y, SundialsAbstractVector *y_dot)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>CVSpgmrPrecondSet</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>aabf8b115ddc8f8e28f9a975cad619506</anchor>
      <arglist>(double t, SundialsAbstractVector *y, SundialsAbstractVector *fy, int jok, int *jcurPtr, double gamma, SundialsAbstractVector *vtemp1, SundialsAbstractVector *vtemp2, SundialsAbstractVector *vtemp3)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>CVSpgmrPrecondSolve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODEAbstractFunctions.html</anchorfile>
      <anchor>a1f3730352df45d0314b5a230d21bf0b9</anchor>
      <arglist>(double t, SundialsAbstractVector *y, SundialsAbstractVector *fy, SundialsAbstractVector *r, SundialsAbstractVector *z, double gamma, double delta, int lr, SundialsAbstractVector *vtemp)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::CVODESolver</name>
    <filename>classSAMRAI_1_1solv_1_1CVODESolver.html</filename>
    <member kind="function">
      <type></type>
      <name>CVODESolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a994e93ca33b3509da79c1521cd585d02</anchor>
      <arglist>(const std::string &amp;object_name, CVODEAbstractFunctions *my_functions, const bool uses_preconditioner)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CVODESolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ae745a18a563e0a3c4797e17625dc8445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a2eca6c63dc0cb7e44775b027924256e7</anchor>
      <arglist>(SundialsAbstractVector *solution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aafafa5194788f6ea65b5ae02dadeef34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFileData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a2cb9574bf1b40bb6be376e55f9f992d8</anchor>
      <arglist>(const std::string &amp;log_fname=std::string())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCVODEFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aa4a4b2df7174271d3ae98cef26924714</anchor>
      <arglist>(CVODEAbstractFunctions *my_functions, const bool uses_preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>CVODEAbstractFunctions *</type>
      <name>getCVODEFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a7bff9cb95cd266641f68950a87a7b50e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearMultistepMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a483e8188a18e217cfdfe85a8c8867c7d</anchor>
      <arglist>(int linear_multistep_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIterationType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ab9f4afbe85e2524e68b794b7370d51a9</anchor>
      <arglist>(int iteration_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToleranceType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aa1835b9ab1ca17131b1f8c6ff464da1e</anchor>
      <arglist>(int tolerance_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>af8af6c76dc48ab8977b9070319d72765</anchor>
      <arglist>(double relative_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a3ee48a8a4306cf6545ee290182f68c9a</anchor>
      <arglist>(double absolute_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a8059c1b204117e3555a564ba36f46309</anchor>
      <arglist>(SundialsAbstractVector *absolute_tolerance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSteppingMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a8eefb63ac62de5de1c7a21d88e66f116</anchor>
      <arglist>(int stepping_method)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a26ff3ce64bb8a5451b0dc1651e3c7cc6</anchor>
      <arglist>(double t_0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFinalValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a3297a40ae5620057c1f2413743c111f9</anchor>
      <arglist>(double t_f, bool cvode_needs_initialization)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialConditionVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ae5482c38c112959b8228fa81745ff47f</anchor>
      <arglist>(SundialsAbstractVector *ic_vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLinearMultistepMethodOrder</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aef6dd613232ce5fdeafaaafba3aff11c</anchor>
      <arglist>(int max_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumNumberOfInternalSteps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a1d675750f31268f864ed1792f3b4db31</anchor>
      <arglist>(int max_num_internal_steps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumNumberOfNilStepWarnings</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ababd9c44a9af757b62fd1431532a62fd</anchor>
      <arglist>(int max_num_warnings)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialStepSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>afd1525a2b53c0f7fefdf1546054ba139</anchor>
      <arglist>(double init_step_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumAbsoluteStepSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a781a3487e2d01ada3b7a5d24520b3bd0</anchor>
      <arglist>(double max_step_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinimumAbsoluteStepSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>afb88d5ec443ebaf001e32034c06dd570</anchor>
      <arglist>(double min_step_size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioningType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a7f888015471a5eb786863e2ba3b1798d</anchor>
      <arglist>(int precondition_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGramSchmidtType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a6cb5bcfa01f6facb089730b35ec3582d</anchor>
      <arglist>(int gs_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ad79a41600de1cda41f02e700d2ab53cf</anchor>
      <arglist>(int max_krylov_dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCVSpgmrToleranceScaleFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a002b124dd4d37c184601b73424de6675</anchor>
      <arglist>(double tol_scale_factor)</arglist>
    </member>
    <member kind="function">
      <type>SundialsAbstractVector *</type>
      <name>getSolutionVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a6b3bd32f4cc4c6fed13a8cea2b84434e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDkyVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aa9a3bb1af084e86000a20ffccdcea19b</anchor>
      <arglist>(double t, int k, SundialsAbstractVector *dky) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getActualFinalValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ace651631bb0e5e8ba2214351392f9bf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatistics</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>adb387b5a76de72dc1986784942d9c07d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCVODEStatistics</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a402c0659726349436ced985345627f51</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfInternalStepsTaken</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a90faa0146f9e519f8f36226b324abf33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfRHSFunctionCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a58d4afbb04e329c94745eb250f2498f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLinearSolverSetupCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a917486e1f7225672581b522f3c32b85c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNewtonIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ad62ce2ce1e1be293880b8223fa905551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNonlinearConvergenceFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a9a0aba540b1e48739e4883b33c184e38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLocalErrorTestFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ac5705e929141d57a72d5db3c8aea3413</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOrderUsedDuringLastInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a1003333877d291d2c3c61507f30abfe0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOrderToBeUsedDuringNextInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a47cea1f9d0f9c11dfd3b154b9280af21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVODEMemoryUsageForDoubles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a32825e406d8f9836d52300127830517c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVODEMemoryUsageForIntegers</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a2de172137756e4fd476157da164410d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepSizeForLastInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a111cf1695d1519480e74164ddbcc45f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepSizeForNextInternalStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ad41fd0d4bf5706edfc1f8de1bbb096bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentInternalValueOfIndependentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a9b5feeea80ec3a22c2b1945a46d457a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCVODESuggestedToleranceScalingFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a415a5ebe94e541f3e7a4b88daa8e553d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCVSpgmrStatistics</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a0c4c4c83d8397695a12ae447e03d36e6</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfPreconditionerEvaluations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a8e51d26289ebe158a9985770c1ab3eba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>ad74b72aede08de701c141c487bfb9c43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfPrecondSolveCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a3c7a3d3d22e144af152b47c902389037</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfLinearConvergenceFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aaba09559b8b38758006fada3de762e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVSpgmrMemoryUsageForDoubles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a3d0306517272384b7aa190f902211090</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCVSpgmrMemoryUsageForIntegers</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a81ac7c05461cd7fbe375cda53b76ee0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>aa02fac50461e40e82d2d68c81f8d1406</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1CVODESolver.html</anchorfile>
      <anchor>a64627a7f33d4c6b40d31cbe5bca02cf0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::FACOperatorStrategy</name>
    <filename>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>FACOperatorStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>adfeec8b88ff2587a6673a71031338b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FACOperatorStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>ae60cb0c7e6819078738665aac8eada15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restrictSolution</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a5030937d907996a88c7190d87e2fd89e</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>restrictResidual</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a39ad805a6e850d759239166842d02be7</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>prolongErrorAndCorrect</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a23e9def6e2f18a274a0636820e96f17a</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;source, SAMRAIVectorReal&lt; double &gt; &amp;dest, int dest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>smoothError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>aefd99edc26ae9390c63a4f67d03fe280</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int ln, int num_sweeps)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solveCoarsestLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a2a1b36e8d09e7639541c5bb05e3d33f9</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;error, const SAMRAIVectorReal&lt; double &gt; &amp;residual, int coarsest_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeCompositeResidualOnLevel</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a6c5f405d18477a61e41e62d4d68af5c8</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;residual, const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs, int ln, bool error_equation_indicator)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>computeResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>abc03df2bcd01320f9d482aee213a684a</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;residual, int fine_ln, int coarse_ln)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessOneCycle</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a50a3f4b77f33e6c64b19a8964416a982</anchor>
      <arglist>(int fac_cycle_num, const SAMRAIVectorReal&lt; double &gt; &amp;current_soln, const SAMRAIVectorReal&lt; double &gt; &amp;residual)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>a063a2a786cc344bd08f85a391d04b6a0</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>deallocateOperatorState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACOperatorStrategy.html</anchorfile>
      <anchor>ab1a9e2eef933ee70d5aed9e7a0274a1a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::FACPreconditioner</name>
    <filename>classSAMRAI_1_1solv_1_1FACPreconditioner.html</filename>
    <member kind="function">
      <type></type>
      <name>FACPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>aa94bdb69a52c5d6acc9c93544aa36daf</anchor>
      <arglist>(const std::string &amp;name, FACOperatorStrategy &amp;user_ops, tbox::Pointer&lt; tbox::Database &gt; database=tbox::Pointer&lt; tbox::Database &gt;(NULL))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FACPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a7b6ed15e90db016986cff8f1991a9604</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solveSystem</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a77e53855e38169cdc9e9ebdd256c15c1</anchor>
      <arglist>(SAMRAIVectorReal&lt; double &gt; &amp;solution, SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a144d6bbf397572a9dde823a1dbe38762</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateSolverState</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a858f92f87e407e1a5f36466765234178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkVectorStateCompatibility</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a6724b777e306596e843d9d27daaf057c</anchor>
      <arglist>(const SAMRAIVectorReal&lt; double &gt; &amp;solution, const SAMRAIVectorReal&lt; double &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>aadf717ed2ba829a8ab24b19a3d129852</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a9f5f263299544a09af5243f34dab34f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPresmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a76d1d49d960664d0f8d5489d92bff985</anchor>
      <arglist>(int num_pre_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPostsmoothingSweeps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a13e45982be7e74195454dae1682267c1</anchor>
      <arglist>(int num_post_sweeps)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxCycles</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>acbcdcf1bd4e8b141f4421ede1fa82702</anchor>
      <arglist>(int max_cycles)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>ae1148e43ad0972f3794290147619a20f</anchor>
      <arglist>(double residual_tol, double relative_residual_tol=-1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAlgorithmChoice</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>ad53f592d2d7e0be12a5c499e6caae161</anchor>
      <arglist>(const std::string &amp;choice)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableLogging</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a456ef1952e8bc73e6c790271b3c0b0b0</anchor>
      <arglist>(bool enabled=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a76c1e5e088316c26a5575db868e45ca2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getConvergenceFactors</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a0ff99b5858ee5d8bb729c6bd2983b3f5</anchor>
      <arglist>(double &amp;avg_factor, double &amp;final_factor) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNetConvergenceFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a00e7b7174ba117ffab7e1cc44682ff98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAvgConvergenceFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>abf27d781ff300de25007334be7e7bc03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFinalConvergenceFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>a94a0dfb2e09bad4dfa5f092dbd18ae1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1FACPreconditioner.html</anchorfile>
      <anchor>ae94751e3d211f90c3a904d254345dc19</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::GhostCellRobinBcCoefs</name>
    <filename>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</filename>
    <base>SAMRAI::solv::RobinBcCoefStrategy</base>
    <member kind="function">
      <type></type>
      <name>GhostCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>a2e0b22804059b94df35eb158d893a661</anchor>
      <arglist>(const tbox::Dimension &amp;dim, std::string object_name=&quot;&quot;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GhostCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>aee8c4aa1934b01580fd163d9f19f5fc6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>afeec52b7c686e46fdc7db9549cef4f6a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, double fill_time=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>a0a1d11a0c83d38f51f4cd746255bf627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGhostDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>aec3e600ed2b6e0cf4367450d57c19e2b</anchor>
      <arglist>(int ghost_data_id, hier::IntVector extensions_fillable)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1GhostCellRobinBcCoefs.html</anchorfile>
      <anchor>abe4f026dcf962bd4949736e52a904cbb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::KINSOL_SAMRAIContext</name>
    <filename>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</filename>
    <base>SAMRAI::solv::NonlinearSolverStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>KINSOL_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>ab84e73a8e14b3b95ccfa20bddd7fa19d</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, KINSOLAbstractFunctions *my_functions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~KINSOL_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>a66ea7a7793c7e9c3cb98d35e5835a265</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>a39a0e58d861f9561035bfe1ed69c7bfd</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; solution)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>ac073f42fcc7a4c771fef3e28bd6fabdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KINSOLSolver *</type>
      <name>getKINSOLSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>ae4e3e5fa56f6edb4bbad8a21d3d25f61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromInput</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>aef6d50d47c76ca7291d71976f8a41d8d</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>adc2897fa7af0cca22715828f647e3b63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>a693c8d6716ef905783bec45aaf369359</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>a7a4458a1ff94e72fc648303f6aaa7a82</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOL__SAMRAIContext.html</anchorfile>
      <anchor>ad19f4ddd384f4e5a47fb917be57a3bf6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::KINSOLAbstractFunctions</name>
    <filename>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</filename>
    <member kind="function">
      <type></type>
      <name>KINSOLAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>a5f6e983466f6d1c274d42b8b4c30275a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KINSOLAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>a4a45a5dece0b6b1b084f0a85fd79fca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateNonlinearFunction</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>a3b98de3852fed47d580519fce381f65f</anchor>
      <arglist>(SundialsAbstractVector *soln, SundialsAbstractVector *fval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>precondSetup</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>aedb59b86ef54919f6b21d079df3c6d8f</anchor>
      <arglist>(SundialsAbstractVector *soln, SundialsAbstractVector *soln_scale, SundialsAbstractVector *fval, SundialsAbstractVector *fval_scale, SundialsAbstractVector *vtemp1, SundialsAbstractVector *vtemp2, int &amp;num_feval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>precondSolve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>a37ff5d322a031e39d79fedc400dbfc89</anchor>
      <arglist>(SundialsAbstractVector *soln, SundialsAbstractVector *soln_scale, SundialsAbstractVector *fval, SundialsAbstractVector *fval_scale, SundialsAbstractVector *rhs, SundialsAbstractVector *vtemp, int &amp;num_feval)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>jacobianTimesVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLAbstractFunctions.html</anchorfile>
      <anchor>a0a6608ac3c0c16ffdf3a6a47d85edffa</anchor>
      <arglist>(SundialsAbstractVector *vector, SundialsAbstractVector *product, const bool soln_changed, SundialsAbstractVector *soln)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::KINSOLSolver</name>
    <filename>classSAMRAI_1_1solv_1_1KINSOLSolver.html</filename>
    <member kind="function">
      <type></type>
      <name>KINSOLSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a849165c608758eedcefd81dc6b3e5540</anchor>
      <arglist>(const std::string &amp;object_name, KINSOLAbstractFunctions *my_functions, const int uses_preconditioner, const int uses_jac_times_vector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KINSOLSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a428221b7719d876fdcd0cc4ee679ddc3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>af5ca03fb124e7fa7ca7cbe640cced348</anchor>
      <arglist>(SundialsAbstractVector *solution, SundialsAbstractVector *uscale=NULL, SundialsAbstractVector *fscale=NULL)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a50b81c9a3ab1c83b860c7e839dc25d18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLogFileData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>af720d317a9da8471409716d15d1cdafb</anchor>
      <arglist>(const std::string &amp;log_fname, const int flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setKINSOLFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>afc39ada43b93a52d9ec5f31653c2874a</anchor>
      <arglist>(KINSOLAbstractFunctions *my_functions, const int uses_preconditioner, const int uses_jac_times_vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>adae411866c5f022319d76bac6ce56dbc</anchor>
      <arglist>(const int uses_preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJacobianTimesVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a6025abff16d2d87eb1b4cdc802683aed</anchor>
      <arglist>(const int uses_jac_times_vector)</arglist>
    </member>
    <member kind="function">
      <type>KINSOLAbstractFunctions *</type>
      <name>getKINSOLFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>af1a0d4e1ef9a65fcfe0cb2580f155ee3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstraintVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a463d35adaf5c922ecb3e72cb86953f6a</anchor>
      <arglist>(SundialsAbstractVector *constraints)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualStoppingTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a4f62ac406cfac076d612b2d572187875</anchor>
      <arglist>(const double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a27e4f1f788424f7a1615b69855ca8b3a</anchor>
      <arglist>(const int maxits)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a6dc4427f6145561ae0224e00a8d2c880</anchor>
      <arglist>(const int kdim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>aa96506e93b740b6fc49c73a0bb66eb7d</anchor>
      <arglist>(const int global)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNewtonStep</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>aa7f0455ac24ac0fb7d64b298fd5a6d1f</anchor>
      <arglist>(const double maxstep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNonlinearStepTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>af83030017ad34f53130ebbf5c9ffba88</anchor>
      <arglist>(const double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeFunctionError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a2771e119c00bc362a4d9313427bad71f</anchor>
      <arglist>(const double reserr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverConvergenceTest</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a1de93c8015b79b78c9dcca22014729d5</anchor>
      <arglist>(const int conv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverConstantTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a1cb08c940dd28346f69883fee256c58d</anchor>
      <arglist>(const double tol)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEisenstatWalkerParameters</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a5672647456156c1d69fd88c97231d839</anchor>
      <arglist>(const double alpha, const double gamma)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxStepsWithNoPrecondSetup</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ae45c3fa5ad5be31e7feb05b4642a400e</anchor>
      <arglist>(const int maxsolv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLinearSolveRestarts</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a5c9be16b8fa6ce1b0c010085b6ad85f3</anchor>
      <arglist>(const int restarts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxSubSetupCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a3ce8640fa1484b87a34a05b620ca7034</anchor>
      <arglist>(const int maxsub)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualMonitoringParams</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a95d6398c6629a61ed3e0099365fa64c2</anchor>
      <arglist>(const double omega_min, const double omega_max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidualMonitoringConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a5b506e8eb2a24d3b01184a186e62e09a</anchor>
      <arglist>(const double omega)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoMinEps</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>aaf1ff23ad0979bd3875b427c50148a3a</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxBetaFails</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ad4478a7b6d815226d105fa9e4df9b42d</anchor>
      <arglist>(const int max_beta_fails)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoInitialSetup</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>abd12b67833658bec99426a29caa256de</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoResidualMonitoring</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>adb73336e9a93ae52883b743405561609</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ad7125582d3572dae25f2e0b8e3a5b047</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfFunctionCalls</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a675c7fe4c42528040b85c4b0688aa91b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfBetaConditionFailures</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a3d9170403035b4422a2c474a93ac68aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfBacktracks</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a251b3b72c37b306794816d00cd70dbc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getScaledResidualNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>ae4a135e22b4d60bcf0650f9fad643fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getNewtonStepLength</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a7284f5133819990f9840bd55bc62e680</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>afafc201acb31ee18adc6c59119540882</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeKINSOL</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a5187c05a2e39c263f02a4089df0c83dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1KINSOLSolver.html</anchorfile>
      <anchor>a5c1908363e87c33e121499e19c979b28</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::LocationIndexRobinBcCoefs</name>
    <filename>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</filename>
    <base>SAMRAI::solv::RobinBcCoefStrategy</base>
    <member kind="function">
      <type></type>
      <name>LocationIndexRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>ad613e717a74678686763a9c3d52a3d99</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LocationIndexRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>a92f99da2fad195f6a36d78ae44809464</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>af72c7c8ad28be3d83b9b9b75ca64479a</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, double fill_time=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>aff02c9f22a97b9e9104f21c0bb82a390</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaryValue</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>a4584beb91fea9b24acbb7ee8c36f4122</anchor>
      <arglist>(int location_index, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundarySlope</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>a30b9a3935ecca875e6a30ed9175fb03a</anchor>
      <arglist>(int location_index, double slope)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRawCoefficients</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>afe65eeb3e1f30254156cf3647f38be3c</anchor>
      <arglist>(int location_index, double a, double b, double g)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getCoefficients</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>ae3c2fcdf666745dd731bef9eeb619753</anchor>
      <arglist>(int location_index, double &amp;a, double &amp;b, double &amp;g) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>a0c016551a177c2ddf05fb0d42e05ec86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const LocationIndexRobinBcCoefs &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1solv_1_1LocationIndexRobinBcCoefs.html</anchorfile>
      <anchor>ae59f06c66fdee4c351344b747ad149b1</anchor>
      <arglist>(const LocationIndexRobinBcCoefs &amp;r)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::NonlinearSolverStrategy</name>
    <filename>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>NonlinearSolverStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>aa0e4ab83da452bb9098b9b74c35703a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NonlinearSolverStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>a57aa1a90e3d99ff9ae1f56105e2db72a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>a11736a9d41a8eae5cf05a9f1e14ef0d3</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; solution)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1NonlinearSolverStrategy.html</anchorfile>
      <anchor>a6b06c04a0a263bc876f1e8d8d88aff96</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::PETSc_SAMRAIVectorReal</name>
    <filename>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::solv::PETScAbstractVectorReal</base>
    <member kind="function" static="yes">
      <type>static Vec</type>
      <name>createPETScVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>ae6303485a6afac0a2e03a3a7e4e3d61f</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; samrai_vec, MPI_Comm comm=PETSC_COMM_SELF)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroyPETScVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>a5e66a1c63f8b1a673a64f2fe3a1ddc1c</anchor>
      <arglist>(Vec petsc_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt;</type>
      <name>getSAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>aa40c7d2716d55144247154e17e44ac1e</anchor>
      <arglist>(Vec petsc_vec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PETSc_SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>a9906542058d23351d99dce916aee2b4c</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; samrai_vector, bool vector_created_via_duplicate, MPI_Comm comm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PETSc_SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETSc__SAMRAIVectorReal.html</anchorfile>
      <anchor>a11dfe65b561af48f6711c8aa937c4dff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::PETScAbstractVectorReal</name>
    <filename>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function" protection="protected">
      <type></type>
      <name>PETScAbstractVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>af6b9e6225754ad082b31fe446f9cc3aa</anchor>
      <arglist>(bool vector_created_via_duplicate, MPI_Comm comm)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~PETScAbstractVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>ad9af575feeb961dd2bc61f35e3916b7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Vec</type>
      <name>getPETScVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a10404166c994b47661c769850c60facb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual PETScAbstractVectorReal&lt; TYPE &gt; *</type>
      <name>makeNewVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a0a5ae4b46c48c46ca265fb6ad0102352</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>freeVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a69fa2ce2b0a3eaa18cce776b2d00a366</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>viewVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a9aed3e4e271f882e612b0a96a752d0bc</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>dotWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a4374e59f611e15a46b7f8f4fab35f29d</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *y, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>TdotWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a630c854fbad38ccd1e2281973d26286d</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *y, bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>ab7fa4aac954a12832fcfe4eeef4b1362</anchor>
      <arglist>(bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a9fd478f58ff69053be0e57cfdf6c4a20</anchor>
      <arglist>(bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual TYPE</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a91be42ec607b8221b5fc6dd1db0c258c</anchor>
      <arglist>(bool local_only=false) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>af12d9bf112559ff2930e668f27e1cbe8</anchor>
      <arglist>(const TYPE alpha)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>copyVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a3408823e0fcefddebc23d9d723026933</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *v_src)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>ad662326dc51e353ad5036d804d2109f5</anchor>
      <arglist>(const TYPE alpha)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>swapWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>aa2d695dd761b88b4141267356f3464fb</anchor>
      <arglist>(PETScAbstractVectorReal&lt; TYPE &gt; *v_other)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setAXPY</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a7d48d6962c4dd5032ef05f16e774ca15</anchor>
      <arglist>(const TYPE alpha, const PETScAbstractVectorReal&lt; TYPE &gt; *x)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setAXPBY</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a12ec89aa1888db959e2661939efe822b</anchor>
      <arglist>(const TYPE alpha, const PETScAbstractVectorReal&lt; TYPE &gt; *x, const TYPE beta)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setWAXPY</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a7d487cada617463b16292e9eb4dbe08e</anchor>
      <arglist>(const TYPE alpha, const PETScAbstractVectorReal&lt; TYPE &gt; *x, const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseMultiply</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>aaf052c3342c70c51ea73de655d3dbee5</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *x, const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>afa874c33f8f990e1ced589f6439a1aa8</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *x, const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual double</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a2dfacc68ad0652ae7cd9a2a8aa957331</anchor>
      <arglist>(const PETScAbstractVectorReal&lt; TYPE &gt; *y)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>vecMax</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>acac7751220a839dac55bca12febcf0d6</anchor>
      <arglist>(int &amp;i, TYPE &amp;max) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>vecMin</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a3bbda9413bbce16260d23ac78d23a5a0</anchor>
      <arglist>(int &amp;i, TYPE &amp;min) const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>af1edbfdc6e5e05941c15717c7e7ba247</anchor>
      <arglist>(const TYPE width, const TYPE low)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>getDataArray</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a20f6152092e34a60d80782ce89a4e703</anchor>
      <arglist>(TYPE **array)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getDataSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a279ea0e3b0dc57d72dc264424797001e</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int</type>
      <name>getLocalDataSize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>ae651fec66d6c107053d22b1e3adf1f96</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>restoreDataArray</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PETScAbstractVectorReal.html</anchorfile>
      <anchor>a31d87fb987b781c56da8f6ed0b625de1</anchor>
      <arglist>(TYPE **array)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::PoissonSpecifications</name>
    <filename>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</filename>
    <member kind="function">
      <type></type>
      <name>PoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a710529c395f5caaf6db5609c77fb4c6a</anchor>
      <arglist>(const std::string &amp;object_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a1c952a21f0b2e0899383af57cf2bb753</anchor>
      <arglist>(const std::string &amp;object_name, const PoissonSpecifications &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PoissonSpecifications</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>addf1638b3e450ebdf5060880b0a9ec3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PoissonSpecifications &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>ae5e368fd64c59247b486b3f415527b7b</anchor>
      <arglist>(const PoissonSpecifications &amp;r)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a9f8bfe3b50c5094ae4e61188004c3ac8</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a73e8dcfa32334db34fd8e834f861faaf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a29d9357fc2c0b1274f21b71c780c745d</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a2d9d8d380aa507924a155338e86cfb04</anchor>
      <arglist>(double constant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dIsVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a1f17a3fb6a8a65976b83b75371013397</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dIsConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a22012376a0f373337e96d4973508620b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a6b9444d97defdf069668589de29870ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a98cf4637606bd664385a2b7fa5dfab82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>aa38ac4147d6ff4f5977820ce32473b4c</anchor>
      <arglist>(int id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a20df8b5a51176d69ae35ca1073c33e15</anchor>
      <arglist>(double constant)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCZero</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a6b9ed0534294d7dd52a89e31d5d56280</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cIsVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>ab68f9587a02090c81e133894a397fcca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cIsZero</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>ae715acb7c4e450336e123e56790b2e4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>cIsConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>a1b6d472a30edc874a64aba2ef8865f96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCPatchDataId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>ada3d37ebd5401ee56d37471758b7a60b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1PoissonSpecifications.html</anchorfile>
      <anchor>ad43c2c804e84052d78ccbf85766fcad6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::RobinBcCoefStrategy</name>
    <filename>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>RobinBcCoefStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>a6ce6120bcc74eff6a7fc4f813ebe2868</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RobinBcCoefStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>a578c1416d1a7f535688c8938abbb1d0e</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>a8a77bb07545bea006a53b897872174b9</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, const double fill_time=0.0) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1RobinBcCoefStrategy.html</anchorfile>
      <anchor>a863faff36d37984903b4661ba49dc848</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SAMRAIVectorReal</name>
    <filename>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a8a1611c2af58f7c148465c4fff20c058</anchor>
      <arglist>(const std::string &amp;name, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SAMRAIVectorReal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a581070ab4220ad5b2fbc3aa75f1e3eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a4be703d182bd7fcc3e0f51a927322722</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputStream</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>af78821ae8d3401bd64612e3280cde56e</anchor>
      <arglist>(std::ostream &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>getOutputStream</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>acc1b440a99ea67cbf870f3b12588a3a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLevels</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a671291b63ea703578b795083ba6bb8fd</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a8e882d8bbd0aa67204982cc4436c6558</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchHierarchy &gt;</type>
      <name>getPatchHierarchy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a852690b248b1f88a6c02d4c323c3a09e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCoarsestLevelNumber</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a6c6d8a2cc8e2cb3e0bf1c60f27550256</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFinestLevelNumber</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>aa9528be9c459d77073d436c6ac75cf66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfComponents</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ac997ab381e29fd7876e34784475b4b08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>getComponentPatchData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>af6297a8c646d16137b0609d6de31bb0a</anchor>
      <arglist>(const int comp_id, const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::PatchData &gt;</type>
      <name>getComponentPatchData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a165840b14c8f0333058b866fb6094c4f</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const hier::Patch &amp;patch) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::Variable &gt;</type>
      <name>getComponentVariable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a0be857f0dc360e04a59e6ea775645e1c</anchor>
      <arglist>(const int component) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getComponentDescriptorIndex</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a59cc6ab95aa2fc44564fd052688cdd38</anchor>
      <arglist>(const int component) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getControlVolumeIndex</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>adcf55a4f553c4d416cb4f5f2f75a4c33</anchor>
      <arglist>(const int component) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt;</type>
      <name>cloneVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a2c321c46d633c178c7404c8cd8304578</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeVectorComponents</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ab77193fdf529f2e4fd367b562ce171ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addComponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a37c243c3c1341269f54e422e318d1eca</anchor>
      <arglist>(const tbox::Pointer&lt; hier::Variable &gt; &amp;var, const int comp_data_id, const int control_vol_id=-1, const tbox::Pointer&lt; math::HierarchyDataOpsReal&lt; TYPE &gt; &gt; vop=(tbox::Pointer&lt; math::HierarchyDataOpsReal&lt; TYPE &gt; &gt;)(NULL))</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateVectorData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a40d5da5c80161dd33e699a1ad8fe1666</anchor>
      <arglist>(const double timestamp=0.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocateVectorData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ab7eb91445678395d0d1cd09d4c234af4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a5d2a65e315281cd26c1017579c5b40f5</anchor>
      <arglist>(std::ostream &amp;s=tbox::plog, const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a68061f45607c65c6eabc47894bd866b1</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; src_vec, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swapVectors</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a8c66441b832029474a1a72b939bce8a5</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a53713e997f15865ad62f59c4eee48ac9</anchor>
      <arglist>(const TYPE &amp;alpha, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a31620e5477d0a8e89bd97d2ddeec339c</anchor>
      <arglist>(const TYPE &amp;alpha, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a2419fb90373752b9e07511a7e262ef18</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const TYPE &amp;alpha, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a18ff5bd51c8f2cd5afa1b89e4e40acec</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>subtract</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ae220377ebf697255e2c9c4d2cf5dbb21</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>multiply</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ac4fba959f6939343536332716e22ad55</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>divide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a95e232c71521c6ec487cdabe95027e81</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a16548ce28d22912798a91b7567c2face</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>linearSum</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a0190c10ff14a62bdb19cbd0347baf6b6</anchor>
      <arglist>(const TYPE &amp;alpha, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const TYPE &amp;beta, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>axpy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ae827d93890d0cb7ec2fc291e43b27ccf</anchor>
      <arglist>(const TYPE &amp;alpha, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; y, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>abs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a5f0c5a2c88e6662f8fb58f5edf935bf7</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>min</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a672582d0e6d1a3d6063e33bc5dfd97d9</anchor>
      <arglist>(const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>max</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>afe7fe73730c8eb47bddd07f6939ec7a9</anchor>
      <arglist>(const bool interior_only=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRandomValues</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a0fbd684b86ff07667e52fbcc8705ff88</anchor>
      <arglist>(const TYPE &amp;width, const TYPE &amp;low, const bool interior_only=true)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a800b72b8b29d97562248bf67ce3840d8</anchor>
      <arglist>(bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>L2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a202d7dbedb67dca5991b04bdb626e799</anchor>
      <arglist>(bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>af923d45813a6244b9eb75d103e6927c0</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; wgt) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>RMSNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a0e926ab1c66e05602ae6fffa60767ad0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>ae0e6fc5658ea8370eb64ce9e85933778</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; wgt) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a2dd1570845d92cd2a5a89b308416a60f</anchor>
      <arglist>(bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>dot</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a1d18cbf7661159f1ad165df18ca353e0</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, bool local_only=false) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeConstrProdPos</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a59ae37abd5bee1f9a98a984fc8eb75f9</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a4c6ed4a08cdd993572ea12b0535e5166</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x, const TYPE &amp;alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>a84a3da75e1b5a10f208672f48acc4bef</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; x)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>maxPointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SAMRAIVectorReal.html</anchorfile>
      <anchor>aff53b3eed0fc4860b77e918a5abb9de7</anchor>
      <arglist>(const tbox::Pointer&lt; SAMRAIVectorReal&lt; TYPE &gt; &gt; denom) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SimpleCellRobinBcCoefs</name>
    <filename>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</filename>
    <base>SAMRAI::solv::RobinBcCoefStrategy</base>
    <member kind="function">
      <type></type>
      <name>SimpleCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>ab9bbf9220bb5fd73cfdd4b8691d5a4d0</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const std::string &amp;object_name=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SimpleCellRobinBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>ab670c2985e54d68c947ebdf94081c469</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHierarchy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>af6fa61765ab5911caa6a46aea9ce4f27</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchHierarchy &gt;, const int ln_min=-1, const int ln_max=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBoundaries</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>a9ffb333fb8a46c319af34d64d2e70e0b</anchor>
      <arglist>(const std::string &amp;boundary_type, const int fluxes=-1, const int flags=-1, int *bdry_types=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cacheDirichletData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>af3060374dce83a05c929d8773887269d</anchor>
      <arglist>(int dirichlet_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restoreDirichletData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>a5a99d2515f0fc3cd0eff6ea7f1994ead</anchor>
      <arglist>(int dirichlet_data_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffusionCoefId</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>abc9747979b0fd9f81ab4d83b20f3ca13</anchor>
      <arglist>(int diffusion_coef_id)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDiffusionCoefConstant</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>a9a8f6fc3a3b57ce70b91d2040a84694f</anchor>
      <arglist>(double diffusion_coef_value)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>adbeb6235f3ec9af729330245213142cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBcCoefs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>a3ab387ec922419b191a1fe8c3f64017e</anchor>
      <arglist>(tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;acoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;bcoef_data, tbox::Pointer&lt; pdat::ArrayData&lt; double &gt; &gt; &amp;gcoef_data, const tbox::Pointer&lt; hier::Variable &gt; &amp;variable, const hier::Patch &amp;patch, const hier::BoundaryBox &amp;bdry_box, double fill_time=0.0) const </arglist>
    </member>
    <member kind="function">
      <type>hier::IntVector</type>
      <name>numberOfExtensionsFillable</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SimpleCellRobinBcCoefs.html</anchorfile>
      <anchor>a22518faac3838ee0aa7c70adad45f0a3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SNES_SAMRAIContext</name>
    <filename>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</filename>
    <base>SAMRAI::solv::NonlinearSolverStrategy</base>
    <base>SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>SNES_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ac97761d9599051e41fb35dfee131b590</anchor>
      <arglist>(const std::string &amp;object_name, tbox::Pointer&lt; tbox::Database &gt; input_db, SNESAbstractFunctions *my_functions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SNES_SAMRAIContext</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ad784ae7a775f23bbd229479bf45a901c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SNES</type>
      <name>getSNESSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a8c049b4b2ca02c9ae8d6538d4d25bf98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SNESAbstractFunctions *</type>
      <name>getSNESFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a04914c0dedb72543299e0f0ca9e94629</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KSP</type>
      <name>getKrylovSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ac334b80dfaf417bdce16a21be01cca30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Mat</type>
      <name>getJacobianMatrix</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a7499af27c48da55cc01d668279931483</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ae94a16d61f62b70662b2df004e0d01d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a3c7f012de51e6d34f71bd22bb4373053</anchor>
      <arglist>(double abs_tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRelativeTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ae966775ffb01cd7e914f4ff5b962e64f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRelativeTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a6f0841cca7aff0dd3fe518d54e405b31</anchor>
      <arglist>(double rel_tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getStepTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a5d5450e3021b14a4bb0ba5fa2b89ff71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStepTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ad866eb0a047c813939e0bb5e34e0b876</anchor>
      <arglist>(double step_tol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a8a3f31d1500a4139c7a431431426a669</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a89fb7173b4f1a344ee6fdb28f29a6078</anchor>
      <arglist>(int max_nli)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFunctionEvaluations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a41985c2fd05ff925677e258d5dd5ab2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxFunctionEvaluations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a5e0db720c2d05f33569d6f5b83a3171a</anchor>
      <arglist>(int max_feval)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getForcingTermStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a82428967a5bb52b9936df7d445daa842</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setForcingTermStrategy</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a456dbc7984c2aee1af0b33ccf3999a82</anchor>
      <arglist>(std::string &amp;strategy)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getConstantForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>abc85964ebdc1541ba99ae2fbb1333326</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConstantForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a4702d152f0d224514763056259f10016</anchor>
      <arglist>(double fixed_eta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a39b4ca99b5fbf6248d2e56b901695ff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a015103306dd3f22e9589da58b66dd63f</anchor>
      <arglist>(double initial_eta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaximumForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a835121f614e85251c131e960d66b96c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumForcingTerm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>aed62ea8e08640fd1caee8ff0b3ec6cb8</anchor>
      <arglist>(double max_eta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWChoice2Exponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a05dbdfa235ef8829103f6c4d8ad1bd36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWChoice2Exponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>aa02a464a99b2a234af1c7a8e21fb1fa8</anchor>
      <arglist>(double alpha)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWChoice2SafeguardExponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>aff072c350ecd376cf66d8724ada23cd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWChoice2SafeguardExponent</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>aaa702668a1d4a1020e32877fdcea2224</anchor>
      <arglist>(double beta)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWChoice2ScaleFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>af810e159514bcb27804df3d8deedcf43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWChoice2ScaleFactor</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a085ad8b4090d4dd8c23acef1b8e947b6</anchor>
      <arglist>(double gamma)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getEWSafeguardThreshold</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ae5d7a2e18312a0dcc0a454b67ddec9f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEWSafeguardThreshold</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ae7072e224adcab19fe22e6579875f491</anchor>
      <arglist>(double threshold)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLinearSolverType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a5057aed2b3a51469b7dbd043ccee55f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverType</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a04eedc9cc99810ede26cca9610467797</anchor>
      <arglist>(std::string &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUsesPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>afaf370e6382f01ea158278b6f47de87d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ac1a1c9f71a280224529eee007fc26018</anchor>
      <arglist>(bool uses_preconditioner)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLinearSolverAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ad4d7af73da278178cd223a30efa0637b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverAbsoluteTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a370b7e1611c785ace184726ba6cb4929</anchor>
      <arglist>(double abs_tol)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getLinearSolverDivergenceTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a9ad6f27a99bfe2b7a2842bf7062d43d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLinearSolverDivergenceTolerance</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a0ba2aa0a2d0f3af49c8d6cd6ff210dd2</anchor>
      <arglist>(double div_tol)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaximumLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a35d18330b7bbf88bbecbfd4ba8f11c2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a36ad81d2e663aca175008e1caf16807c</anchor>
      <arglist>(int max_li)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaximumGMRESKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a83ce98b54ee8c7d063ad3668a36718af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaximumGMRESKrylovDimension</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a25220d486626637ba12e493a4706db59</anchor>
      <arglist>(int d)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getGMRESOrthogonalizationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a79a848c8943874b495d395ce7b0b8703</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGMRESOrthogonalizationMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a31be21049f795ce5ef0fefb16a0ecfd7</anchor>
      <arglist>(std::string &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUsesExplicitJacobian</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a563510787c7e3717d71be4f8fe21cddf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUsesExplicitJacobian</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>aa631cd60869d18d464a6780e6ed8cb14</anchor>
      <arglist>(bool use_jac)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getDifferencingParameterMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a0b64a9e646b084f3b5ef1db49cac5fe3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDifferencingParameterMethod</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ad84fa4d32bb83bf17e498a8cd88a42fa</anchor>
      <arglist>(std::string &amp;method)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFunctionEvaluationError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a63bfe854e2da0751e436b52255357e72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFunctionEvaluationError</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ab03d4b7bf6319b6b57c1c8169c4dccbb</anchor>
      <arglist>(double evaluation_error)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a4e04c44ddf4eb514a1082b5692376511</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; solution)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSolver</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a9f3a0180667d14960a42b08cae694042</anchor>
      <arglist>(const int coarsest_level, const int finest_level)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ab2afe5bf3d3cc5c6746c27a76dace820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfNonlinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>abbd1a382f0c5191c5b330410b7ebabe3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getTotalNumberOfLinearIterations</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>ac8c9ddd3040adab2b698b14d1773d14b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reportCompletionCode</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>afbbb99801680fc15ec2caf3719d583d9</anchor>
      <arglist>(std::ostream &amp;os=tbox::plog) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a92f5afe282a6a7f652679a2124aadbaf</anchor>
      <arglist>(tbox::Pointer&lt; tbox::Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a8fba5efea64ecacccdbdd55eacba227f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNES__SAMRAIContext.html</anchorfile>
      <anchor>a7d512af27991ace79ba3697ff1ccd25e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SNESAbstractFunctions</name>
    <filename>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</filename>
    <member kind="function">
      <type></type>
      <name>SNESAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>a60c310b1635c105f1a73424687056586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SNESAbstractFunctions</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>a19de3fd8e471a4d263d461255a16cea2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>evaluateNonlinearFunction</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>a63e3ac44b1bedb5c4f8d4bfd2269bb6e</anchor>
      <arglist>(Vec xcur, Vec fcur)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>evaluateJacobian</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>a9d5fd73cdbe6f0229ca46e0f7e43aad8</anchor>
      <arglist>(Vec x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>jacobianTimesVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>a196fe919ca77d555b32f28d03d5d6ffd</anchor>
      <arglist>(Vec x, Vec y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>setupPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>ac9321d3c23a63a64ff499f5a6b0870b2</anchor>
      <arglist>(Vec xcur)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>applyPreconditioner</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SNESAbstractFunctions.html</anchorfile>
      <anchor>a618f15d8a7a74909b7b2f832d28afbd7</anchor>
      <arglist>(Vec r, Vec z)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::Sundials_SAMRAIVector</name>
    <filename>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</filename>
    <base>SAMRAI::solv::SundialsAbstractVector</base>
    <member kind="function">
      <type>void</type>
      <name>printVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>a77b6eeafb2ab02426fd45427372f69a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SundialsAbstractVector *</type>
      <name>createSundialsVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>a04bd40a63b2767778f82ebc7cdc6b1b9</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; samrai_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroySundialsVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>a60592682c0a0072f2c7bf06dcfa50d50</anchor>
      <arglist>(SundialsAbstractVector *sundials_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt;</type>
      <name>getSAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>af46de47826fc582c5a5785b0722fe835</anchor>
      <arglist>(SundialsAbstractVector *sundials_vec)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt;</type>
      <name>getSAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>ab7d29a7bbd1792bb9f194b7671344391</anchor>
      <arglist>(N_Vector sundials_vec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Sundials_SAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>a324fd3d3af4ffa45b31ca5add12e35ab</anchor>
      <arglist>(tbox::Pointer&lt; SAMRAIVectorReal&lt; double &gt; &gt; samrai_vector)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Sundials_SAMRAIVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1Sundials__SAMRAIVector.html</anchorfile>
      <anchor>aa56646ea969d27fe8e2c327f6047b48f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::solv::SundialsAbstractVector</name>
    <filename>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</filename>
    <member kind="function">
      <type></type>
      <name>SundialsAbstractVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a63cd330f5294891de63db572c66b1ad0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SundialsAbstractVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a0b962016911cd2a080d378830a84fecc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual SundialsAbstractVector *</type>
      <name>makeNewVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a0b1db8a004744aa7ca284277a3a35018</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>freeVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>aa836befff447ecf06146568eca06ac9c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>ab194d580a802e04b46f157508a1a497b</anchor>
      <arglist>(const double c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scaleVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a000b1cf607fb2e92b80d88cc02a80d4a</anchor>
      <arglist>(const SundialsAbstractVector *x, const double c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setLinearSum</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a09c0e9c72a4e942b63cf36686c24d432</anchor>
      <arglist>(const double a, const SundialsAbstractVector *x, const double b, const SundialsAbstractVector *y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseMultiply</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a1006024938c43e384e227abf7c60c0a1</anchor>
      <arglist>(const SundialsAbstractVector *x, const SundialsAbstractVector *y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseDivide</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>af01eda5525893e03be9104a9b5a076ea</anchor>
      <arglist>(const SundialsAbstractVector *x, const SundialsAbstractVector *y)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setAbs</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a1a266f451b04c1b9d23432bdbdb443e4</anchor>
      <arglist>(const SundialsAbstractVector *x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>pointwiseReciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>af11658a117d0ea81c057976d9ddcce12</anchor>
      <arglist>(const SundialsAbstractVector *x)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a4dd966a2984aec30904ffad698b590ca</anchor>
      <arglist>(const SundialsAbstractVector *x, const double b)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>dotWith</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a39d58c1f8d6f28d8ef7038eb2476cb4c</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>maxNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a64105b344d97e1121ee957cf8daca507</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>L1Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a6b18bece1cdecc8ada4fc5d7317450ae</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedL2Norm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a5cdc18e48023497b28d2dab588786791</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>weightedRMSNorm</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a43d0383c7ad21a17caa6f4fe2b193635</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>vecMin</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a376ddcf7acc687756a7065de639e3034</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>constrProdPos</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>aa0da10f9835c66b4f32a1741bded3f99</anchor>
      <arglist>(const SundialsAbstractVector *x) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>compareToScalar</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>a9fc2e8d1cee9e8df4caf7c68ecccd308</anchor>
      <arglist>(const SundialsAbstractVector *x, const double c)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>testReciprocal</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>aece7b90d7d51722ff15ab0146714f5b4</anchor>
      <arglist>(const SundialsAbstractVector *x)=0</arglist>
    </member>
    <member kind="function">
      <type>N_Vector</type>
      <name>getNVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>ae36568bbc9ac7dade31cbf1b78d4053a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printVector</name>
      <anchorfile>classSAMRAI_1_1solv_1_1SundialsAbstractVector.html</anchorfile>
      <anchor>ad91e5bb178c42fed3a90733298af0d9d</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::tbox</name>
    <filename>namespaceSAMRAI_1_1tbox.html</filename>
    <class kind="class">SAMRAI::tbox::Array</class>
    <class kind="class">SAMRAI::tbox::AsyncCommGroup</class>
    <class kind="class">SAMRAI::tbox::AsyncCommPeer</class>
    <class kind="class">SAMRAI::tbox::AsyncCommStage</class>
    <class kind="class">SAMRAI::tbox::BalancedDepthFirstTree</class>
    <class kind="struct">SAMRAI::tbox::Clock</class>
    <class kind="class">SAMRAI::tbox::ConstPointer</class>
    <class kind="class">SAMRAI::tbox::ConstPointerBase</class>
    <class kind="class">SAMRAI::tbox::Database</class>
    <class kind="struct">SAMRAI::tbox::DatabaseBox_POD</class>
    <class kind="class">SAMRAI::tbox::DatabaseBox</class>
    <class kind="class">SAMRAI::tbox::DatabaseFactory</class>
    <class kind="class">SAMRAI::tbox::Dimension</class>
    <class kind="class">SAMRAI::tbox::HDFDatabase</class>
    <class kind="class">SAMRAI::tbox::HDFDatabaseFactory</class>
    <class kind="struct">SAMRAI::tbox::IEEE</class>
    <class kind="class">SAMRAI::tbox::InputManager</class>
    <class kind="class">SAMRAI::tbox::List</class>
    <class kind="class">SAMRAI::tbox::ListNode</class>
    <class kind="class">SAMRAI::tbox::ListIterator</class>
    <class kind="class">SAMRAI::tbox::AbortAppender</class>
    <class kind="class">SAMRAI::tbox::WarningAppender</class>
    <class kind="class">SAMRAI::tbox::DebugAppender</class>
    <class kind="class">SAMRAI::tbox::Logger</class>
    <class kind="class">SAMRAI::tbox::MathUtilities</class>
    <class kind="class">SAMRAI::tbox::MemoryDatabase</class>
    <class kind="class">SAMRAI::tbox::MemoryDatabaseFactory</class>
    <class kind="struct">SAMRAI::tbox::MemoryUtilities</class>
    <class kind="class">SAMRAI::tbox::MessageStream</class>
    <class kind="class">SAMRAI::tbox::NullDatabase</class>
    <class kind="class">SAMRAI::tbox::ParallelBuffer</class>
    <class kind="class">SAMRAI::tbox::Parser</class>
    <class kind="struct">SAMRAI::tbox::PIO</class>
    <class kind="class">SAMRAI::tbox::Pointer</class>
    <class kind="class">SAMRAI::tbox::PointerBase</class>
    <class kind="class">SAMRAI::tbox::RankGroup</class>
    <class kind="class">SAMRAI::tbox::ReferenceCounter</class>
    <class kind="class">SAMRAI::tbox::RestartManager</class>
    <class kind="class">SAMRAI::tbox::SAMRAI_MPI</class>
    <class kind="class">SAMRAI::tbox::SAMRAIManager</class>
    <class kind="class">SAMRAI::tbox::Schedule</class>
    <class kind="class">SAMRAI::tbox::Serializable</class>
    <class kind="class">SAMRAI::tbox::SiloDatabase</class>
    <class kind="class">SAMRAI::tbox::SiloDatabaseFactory</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager</class>
    <class kind="class">SAMRAI::tbox::Statistic</class>
    <class kind="class">SAMRAI::tbox::Statistician</class>
    <class kind="class">SAMRAI::tbox::StatisticRestartDatabase</class>
    <class kind="class">SAMRAI::tbox::StatTransaction</class>
    <class kind="class">SAMRAI::tbox::Timer</class>
    <class kind="class">SAMRAI::tbox::TimerManager</class>
    <class kind="class">SAMRAI::tbox::Tracer</class>
    <class kind="class">SAMRAI::tbox::Transaction</class>
    <class kind="struct">SAMRAI::tbox::Utilities</class>
    <class kind="class">SAMRAI::tbox::vector</class>
    <member kind="typedef">
      <type>SAMRAI::tbox::MemoryDatabase</type>
      <name>InputDatabase</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>af506c0b86c47956e0b66d35aff487e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>List&lt; Pointer&lt; Transaction &gt; &gt;::Iterator</type>
      <name>Iterator</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ad2da72b30f83887791d4cee7786d95d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>afb643ccf275c7f30adceb8eb78b4159a</anchor>
      <arglist>(std::ostream &amp;s, const Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>round_internal</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a8fb80f5f7c49e400c31d0a58f00414fe</anchor>
      <arglist>(TYPE x)</arglist>
    </member>
    <member kind="function">
      <type>template float</type>
      <name>round_internal&lt; float &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a415e3675aa1cdf8e34bb5d073a78057c</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>template double</type>
      <name>round_internal&lt; double &gt;</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a3b11f55b23390dd0f75956ad05a1e782</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>badnew</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a67dea29da08b2f13fceb709a2bc19532</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>pout_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>aaafff0bbde1815d1e4661864aa54c85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>perr_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a5ff8d206d2e85ac4f715aa01967fcf42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static ParallelBuffer</type>
      <name>plog_buffer</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ade90ffa35166163af6107adacde08691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>pout</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>a1e98e73dc869d986f7ffe5b295075979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>perr</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ad72fd66574b63c87061563d2c66b5475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream</type>
      <name>plog</name>
      <anchorfile>namespaceSAMRAI_1_1tbox.html</anchorfile>
      <anchor>ab84041705493761fb17a8127e3a2dca2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Array</name>
    <filename>classSAMRAI_1_1tbox_1_1Array.html</filename>
    <templarg>TYPE</templarg>
    <class kind="class">SAMRAI::tbox::Array::DoNotInitialize</class>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a92589344100113a940fe8b7dbab9243b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>ae08ffcf3cedc79277718470f0d4204c9</anchor>
      <arglist>(const int n, const TYPE &amp;default_value=TYPE())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a4c0ef0c957f128c4800cba86d7d452e7</anchor>
      <arglist>(const int n, const typename Array::DoNotInitialize &amp;do_not_initialize_flag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a65f15a441dd9a007b62ce3583c6c23d7</anchor>
      <arglist>(const Array&lt; TYPE &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a5fa6a357df4181bf9061c6964bec68ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>aa86a0eb537058f8cdc280ac858d3d814</anchor>
      <arglist>(const Array&lt; TYPE &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>afb18233881c1ec6ae2f87d27e28f0382</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a531064fd08cc09c039776683f078a8b8</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a8decd4408107f318dabe9a49669e74a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a08539e6032c95dd9e97ef3968a095053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>ac3570c85fa5e336fec11798325ca0e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a4868036f59ca96374d929d7e5e6d737a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a6051f614e8035ead269e9f76e4bc07ef</anchor>
      <arglist>(const int i=0)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a4b1630bc7f059a1bb8462c1cceb971ad</anchor>
      <arglist>(const int i=0) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a057dd159b71523e7b872f7b97560eb6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a0682ba5b01690d8e37690f15e47e6dbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a6500b59dd06b70fc01efe4815333c572</anchor>
      <arglist>(const int n, const TYPE &amp;default_value=TYPE())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>ad53cd39c711784690f4f3857501f1b1c</anchor>
      <arglist>(const TYPE &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>back</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>ac11de702bf11a1b627eb789bfd87131a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a71db2396462a47f02b862f9ca89628df</anchor>
      <arglist>(const int position)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a5ec4c85ebadef25920d2d6717dd8c0f1</anchor>
      <arglist>(const int n, const bool &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a1663d67af42972d77a998165e29edca5</anchor>
      <arglist>(const int n, const char &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a31ac14d5bc2bdb1e3d44b5bba023b60d</anchor>
      <arglist>(const int n, const int &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a7ff219b495f51c0d1b62d1c194981e62</anchor>
      <arglist>(const int n, const float &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a8d4ef0ba2ffa6a399a74e42d61da21ce</anchor>
      <arglist>(const int n, const double &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a5ec4c85ebadef25920d2d6717dd8c0f1</anchor>
      <arglist>(const int n, const bool &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a1663d67af42972d77a998165e29edca5</anchor>
      <arglist>(const int n, const char &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a31ac14d5bc2bdb1e3d44b5bba023b60d</anchor>
      <arglist>(const int n, const int &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a7ff219b495f51c0d1b62d1c194981e62</anchor>
      <arglist>(const int n, const float &amp;default_value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>a8d4ef0ba2ffa6a399a74e42d61da21ce</anchor>
      <arglist>(const int n, const double &amp;default_value)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const SAMRAI::tbox::Array&lt; TYPE &gt;::DoNotInitialize</type>
      <name>UNINITIALIZED</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array.html</anchorfile>
      <anchor>aea5af53113ff38bc8dfe74a5e586a780</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Array::DoNotInitialize</name>
    <filename>classSAMRAI_1_1tbox_1_1Array_1_1DoNotInitialize.html</filename>
    <member kind="function">
      <type></type>
      <name>DoNotInitialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Array_1_1DoNotInitialize.html</anchorfile>
      <anchor>a061bf5fed759377d69570bee8c916ef8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AsyncCommGroup</name>
    <filename>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</filename>
    <base>SAMRAI::tbox::AsyncCommStage::Member</base>
    <member kind="function">
      <type></type>
      <name>AsyncCommGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a610c526c5c212b9ba4d5df712b52a239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCommGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a43f07de72eaf3dfbbb7ca7b21eede825</anchor>
      <arglist>(const size_t nchild, AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AsyncCommGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a450775f8009a1a5898477d071fb4f26c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>aecd45c992a6cf3acb09afd985663b558</anchor>
      <arglist>(const int nchild, AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPITag</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>ac08ff860b470fc9c7b919f404def3637</anchor>
      <arglist>(const int mpi_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseMPICollectiveForFullGroups</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>aa23799a747fad0e978bf67b4ce7e46c6</anchor>
      <arglist>(bool use_mpi_collective=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseBlockingSendToParent</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a5c66a5a96934f73d7405f54e867cd023</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseBlockingSendToChildren</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a7959d12bb0fbfa12732b14eb20c6e0e6</anchor>
      <arglist>(const bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfChildren</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>ad765eceaa1b52da0b6b9d4b01b37736b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logCurrentState</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>ad2596b98ef718fecd5f8891f6a4c9201</anchor>
      <arglist>(std::ostream &amp;co) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupAndRootIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>af359b65deb16aa633a5f8a9e65d69ea5</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi, const int *group_ranks, const int group_size, const int root_index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGroupAndRootRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a3b959dbd42462bb2fe52c458626a2ad9</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi, const int *group_ranks, const int group_size, const int root_rank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginBcast</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a520f3cec0caea74a731b9102276eb83c</anchor>
      <arglist>(int *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkBcast</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a69fd7c96bf69ca79b76a0ebf8c133fd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginGather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a2179371efe6288654029b5796ac10fa2</anchor>
      <arglist>(int *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkGather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a14b1c40af08d5be853ef33ccdde46489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginSumReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a8c793a5e0abe994ceb89d186dd21ff6c</anchor>
      <arglist>(int *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSumReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a724bbf61b605419c2ac4d43748cdabbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>proceedToNextWait</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a85e2402d111fc0e5a15c2a23f3d63f96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDone</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>a6a65156bbc4f0247688a5d782b87b68b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>completeCurrentOperation</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommGroup.html</anchorfile>
      <anchor>aeeb67c2ae16d7518bc700d4d9b0e20c5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AsyncCommPeer</name>
    <filename>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::tbox::AsyncCommStage::Member</base>
    <member kind="function">
      <type></type>
      <name>AsyncCommPeer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a2e0e48c61c9524bcf4598d05ae31df16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCommPeer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ad006f406c8aa0c3680c2cd5be30fb025</anchor>
      <arglist>(AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AsyncCommPeer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ac23d7b457c57b83408816034cfeeee27</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a51e1b6374054c8f8de2dbed9ac15daa3</anchor>
      <arglist>(AsyncCommStage *stage, AsyncCommStage::Handler *handler=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPITag</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ad1977404c99149e16a15ad85104a3a73</anchor>
      <arglist>(const int primary_tag, const int secondary_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a6f2a41ae15d5bad186244ca81df8cfa9</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logCurrentState</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a8f2771aa544020f7af0286a4fb856618</anchor>
      <arglist>(std::ostream &amp;co) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPeerRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a65a7d6c16b544a545db3f4ae5fcd0bc3</anchor>
      <arglist>(int peer_rank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getPeerRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a38ea6fd3a2dfdd712278f6dabbc93da0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>limitFirstDataLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a2cc8370781a710999ff2fa789d26d61e</anchor>
      <arglist>(size_t max_first_data_len)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginSend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ab6618bb7a746fa89c6ef35d4ee4effab</anchor>
      <arglist>(const TYPE *buffer, int size)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkSend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>aaf125564deb47f54ff8396e7e95d51e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>beginRecv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a824299214e9605879f696f2130a36dd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkRecv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>af7b8e394ea52df7f198d290dff49e72e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRecvSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a87b79fd93bbcfa40bc19e5bc802d5a21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getRecvData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ab3a5a01c99778d948b30f828d20fdb02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearRecvData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a0d6349489f77cff31efbff83ac00039c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>proceedToNextWait</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a7665d7aba9cd815a6aa18f961ec3e832</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDone</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>a5f853da1738d88af1d6fc6447fe55f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>completeCurrentOperation</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommPeer.html</anchorfile>
      <anchor>ab3f9bb2963d317a7cf339887234981a6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AsyncCommStage</name>
    <filename>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</filename>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Handler</class>
    <class kind="struct">SAMRAI::tbox::AsyncCommStage::Member</class>
    <member kind="typedef">
      <type>std::vector&lt; Member * &gt;</type>
      <name>MemberVec</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a221c3202eb178cc9d21d0c0c16e4b66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AsyncCommStage</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>aa884da88737394f38ce4a2a852da197b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AsyncCommStage</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>ab271225de9cef4d8e8b307ff02d503f5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>Member *</type>
      <name>advanceAny</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a216e1c0a1bbc66622b9f1b912a2737f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>advanceAny</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>acd7784ed319295b89336df5df299f5cb</anchor>
      <arglist>(MemberVec &amp;completed)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>advanceSome</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a9eb6055e1ef07b240d5eb624f4c9599e</anchor>
      <arglist>(MemberVec &amp;completed)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>advanceAll</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a19e902de2930c4147bb5911d19c4b878</anchor>
      <arglist>(MemberVec &amp;completed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommunicationWaitTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a529945a9faeb94a92117e2b9a1a681c7</anchor>
      <arglist>(Pointer&lt; Timer &gt; communication_timer)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfMembers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a25fbf29115b0374aac157ae8933dbbdd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPendingRequests</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a72ad68ee2014c063cf7f4d567d46bcbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfPendingMembers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a9bccbb6d56e6afd418677295d83c6942</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfPendingRequests</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a3de374a3230456c3358ec6c878428963</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Member</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1AsyncCommStage.html</anchorfile>
      <anchor>a92fd2d5106654703285851462a1f87a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::AsyncCommStage::Handler</name>
    <filename>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Handler.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Handler</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Handler.html</anchorfile>
      <anchor>ab20da5c44888b2ce0239c98eb806eef8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::AsyncCommStage::Member</name>
    <filename>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</filename>
    <member kind="function">
      <type></type>
      <name>Member</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>ab3722a73b9c13c5a863702ccf3eed3f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Member</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a329ec84e29f899e66b8517001004414b</anchor>
      <arglist>(const size_t nreq, AsyncCommStage *stage, Handler *handler)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Member</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a5a73ca74e4e1dd225b87050163179dde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfRequests</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>ac549fac8a64d230d5c7d0d5b2b6947c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numberOfPendingRequests</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a57244ebc419899404a40968799325eb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasPendingRequests</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>ae5ff4bfb5ee958425e2e8b35afe45f8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDone</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a377ac960e58fbaa8c5d528c86c2d6100</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>proceedToNextWait</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>afb9f55fd72f7f9713b0138e8cad7c87e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>completeCurrentOperation</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a276cadf660e7cc5f1d302e2ac347bfd1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHandler</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a8209b3b5ea97ccc28f2714d720a04bad</anchor>
      <arglist>(Handler *handler)</arglist>
    </member>
    <member kind="function">
      <type>Handler *</type>
      <name>getHandler</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a849ed12f1f694b952a248850440f0076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>attachStage</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>abeacd8eeb25757ec210d9d491258ead6</anchor>
      <arglist>(const size_t nreq, AsyncCommStage *stage)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>detachStage</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>ad43f899221c9a80efa3340490afa2bf3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SAMRAI_MPI::Request *</type>
      <name>getRequestPointer</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>a70f5e86c7b42976bd6b4f25fd644ec29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SAMRAI_MPI::Status *</type>
      <name>getStatusPointer</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>aa20616c1d5cdb8eede63a9a41b6492a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>AsyncCommStage</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1AsyncCommStage_1_1Member.html</anchorfile>
      <anchor>ac7d59c29d44de64279b791d91ec3db91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::BalancedDepthFirstTree</name>
    <filename>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</filename>
    <member kind="typedef">
      <type>int</type>
      <name>LocalId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>a6dfbd040475b9b33c8344999ff9fdaf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BalancedDepthFirstTree</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>a18a241d9e9d844c8c973ea794e29cce2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BalancedDepthFirstTree</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>ac1dd67b3bbc5c94d83f6a716b9774dff</anchor>
      <arglist>(unsigned int first_rank, unsigned int last_rank, unsigned int rank, bool do_left_leaf_switch)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BalancedDepthFirstTree</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>aa79a54b26033c642c16cb9d3d0279953</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>a15dc4bb2634283af7293492846772579</anchor>
      <arglist>(unsigned int first_rank, unsigned int last_rank, unsigned int rank, bool do_left_leaf_switch)</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>a1f05d7f7367364fe0a61a28666dcaf97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getParentRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>a59d5d0c300001eaf560e9d448a14f0a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getChildRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>abe0b64f8e65661796c04353b45f702de</anchor>
      <arglist>(unsigned int child_number) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short int</type>
      <name>getNumberOfChildren</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>aea5727f2892308ea1dd9613bb8c27cf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>getInvalidRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1BalancedDepthFirstTree.html</anchorfile>
      <anchor>a457b930e497c70dae455d2d41106ac0f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Clock</name>
    <filename>structSAMRAI_1_1tbox_1_1Clock.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>acd9706c5cbf8d7171c61de6915a23418</anchor>
      <arglist>(clock_t &amp;clock)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>a921232502cc9f75b523b33af6cf51b1e</anchor>
      <arglist>(double &amp;clock)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>timestamp</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>ae52a2938fc94bc9f9df05775c70705e1</anchor>
      <arglist>(clock_t &amp;user, clock_t &amp;sys, double &amp;wall)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getClockCycle</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Clock.html</anchorfile>
      <anchor>a841283fbdd7d26c3e40ebf8d55055b98</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ConstPointer</name>
    <filename>classSAMRAI_1_1tbox_1_1ConstPointer.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::tbox::ConstPointerBase</base>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a4794e98b82e457a750fb71fb82fb6ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a59f380536e67bd54450f49a50374e6a1</anchor>
      <arglist>(const TYPE *ptr, const bool managed=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a0ff50917277c9c9a5287cd1a090467b9</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a8f67d824615dcd7a670edf7c2d275348</anchor>
      <arglist>(const ConstPointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a19fad4466aabb3c9c28ce09aea188f88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstPointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a122d5c66840c12e636186f47de38c5eb</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>ConstPointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a5ce9a1554c57bed3831909f48c29a28f</anchor>
      <arglist>(const TYPE *ptr)</arglist>
    </member>
    <member kind="function">
      <type>ConstPointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a9dd150b8aaa727ee7e85878045b10da2</anchor>
      <arglist>(const ConstPointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a217d5c0d6ecff5532f175547b8e7b025</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>aa256767f91ccb4173e23aaeb72868814</anchor>
      <arglist>(const ConstPointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>afcc896a891b05bc91ea4466d75629b1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>aa4f1cbaa6b71ce20737d488cd8e1c66e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const TYPE *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a7e56bf805408f82db3c60e7253ff004a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>afec96a98350aa3aabc0fb09e0cf6ca7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a06f174e84e9598ff5fc93168603c40d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>abf67da7536ae6e836839b68947d8c053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a4170d3c36f0f404370393b443bc3c3fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a7e7c488d35b513a6d156ee934a188c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCounter *</type>
      <name>getReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointer.html</anchorfile>
      <anchor>a116da5cccc3a45324285fe67a60f8969</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ConstPointerBase</name>
    <filename>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ConstPointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>ae4dbce7999da83866ee8d12873e684c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstPointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>a232ef2bac87715759638398074433d19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReferenceCounter *</type>
      <name>getSubclassReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>ad0c52d9069d29f0ab66b24b1a455fb5d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DescribedClass *</type>
      <name>getSubclassPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ConstPointerBase.html</anchorfile>
      <anchor>acf10e779111bad1cea0e0affcc322374</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Database</name>
    <filename>classSAMRAI_1_1tbox_1_1Database.html</filename>
    <base>tbox::DescribedClass</base>
    <class kind="class">SAMRAI::tbox::Database::Serializable</class>
    <member kind="enumeration">
      <name>DataType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_INVALID</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554abc017eba7e30cbd6d9404e8fd20e3c17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_DATABASE</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554ae5d70e6c4749a264bc93134b83d98972</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_BOOL</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554a985ace4f2bc387c77fa265b0441b4a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_CHAR</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554a3f9abc0288dcb6e796b5d3b69653a60d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_INT</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554a11f0aea64d1b5dcf79bb8e8e2bb9a227</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_COMPLEX</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554a42eafbf8e77ceeea69acee8a63aae6ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_DOUBLE</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554ae5091807cd7723b61529f3d2241503d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_FLOAT</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554a69f42a01e3f8cdc4d282c4d01d11db9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_STRING</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554a1a78b9747eda4fe13aa95e87e28c40de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SAMRAI_BOX</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a77ab7a307331e041363ac40d97e14554aa6c72ba5b0b44c63b50eecfe03ee79c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Database</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac0842d4ff058a48e126c67ded16201ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Database</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a4717c269445a4395dbc541429ca65b1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a9add10e2a5794ed79e5bd5f3e759f9e7</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>add8359d3129fada0c50a709e5dc89d74</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a09f40d20ff3895c7f5b9a807cb8288c3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a3d41b0525d33476e27bdc28a65c271be</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>acc13874f96bc41314dfa3b1bb5a0c720</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5be02d0d4f32333d05422b6065b93a78</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a0ed6795566f0d22b81764c81ebfe61f7</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a81d88c91204302e0f1a8c66f9f679188</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a1139a1ff390a90c7354d3d3a3fa820b4</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a98b4b5bf640c31759852ea076c97b85c</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabaseWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a4fb9166a4a06c60e69760f4a397978b7</anchor>
      <arglist>(const std::string &amp;key, const Pointer&lt; Database &gt; &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a2fe2e05763d6b22f194b9a33b899be62</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a31b7dec80dc1b057bc5aefce59ccd274</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a402885958db9e784d0e58ee4931f5a8e</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; bool &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ad58608644e1609f83babc919e1216c09</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac9b456051386053cf94d5834d56b1d39</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBoolWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a0602c0d3c0377370da985c82dc3ba24f</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a7309e35076bcd485735b57fc9b4952ab</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5da68f65070736989fb0d7b277f057f3</anchor>
      <arglist>(const std::string &amp;key, bool *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a0862e35c2383854a21ffccd2d222e24c</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>abab5f4276a8f3a624dd4437f09947a94</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a7e2bd5b2ed15883f363f17bc2fee82fc</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; DatabaseBox &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a449112af69fa50b9bbb2ad9dac3d7d78</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a1e228dce2f08f07677b914a4d1c56e3a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBoxWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a53fa8f0e1dbd2dacd4e02787ed0d97ae</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a22156a4c63da2fc2f84a23be3c74ad0e</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a1c08daebe15d87ccbd1f526558574335</anchor>
      <arglist>(const std::string &amp;key, DatabaseBox *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a7865644ce81076fe702e8a44a28b7e3b</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a41f7b1d4518a4b1a07decb4dbc9c463b</anchor>
      <arglist>(const std::string &amp;key, const char &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a20eb3d63345b09a209b88b2ddbe8bfdc</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a55ae208b5a9642655fc2aaa7682c4280</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a21fa21f6bcab37efb441ee999237d26b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getCharWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a28d3c14300627801cb25f7d33e8de385</anchor>
      <arglist>(const std::string &amp;key, const char &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae29b9c6325ec0f3824296debc4d32a63</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a40a885a6648c1dea0ff3c936886dcc34</anchor>
      <arglist>(const std::string &amp;key, char *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a3e6314103f60c01faabf1d31c3f7ac4b</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ad7883f99fcc2ffd1778ac035a8e3d964</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ad0c555c7fc54bba1dc4a95866d331be3</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; dcomplex &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a52e81d82468c9dbe218363ae7d8b0fc4</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a09cd1b04b48d9371ae73a6cc9b51663c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplexWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a4821026dc612e5b47b03a61bd8fa1730</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ab3df74e2ab847bd8f435fb0dc1058483</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>abcfe08fa6a5d8e7e87a670068c2e9004</anchor>
      <arglist>(const std::string &amp;key, dcomplex *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae5b3bfca6b823f55d9f2dff08b382a34</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a8b6ffea865f18d4698c8334eb3dae7ef</anchor>
      <arglist>(const std::string &amp;key, const double &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ab530207ebea6ca0ead7132974766a708</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; double &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ad203d0ba032f2492a7844872c857a031</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5a97616618dd295d224afb9309ffb471</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDoubleWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac4540ab022412147c87952057ef469c3</anchor>
      <arglist>(const std::string &amp;key, const double &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>afdfa072aef0d5a40e63fff52ba7c212a</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ab7d239621fbf5ab00bfc5d97da16cadb</anchor>
      <arglist>(const std::string &amp;key, double *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a976b712795bfd1e85adc695b1be7dc25</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5c405ac49c1264dbcc0e516452811823</anchor>
      <arglist>(const std::string &amp;key, const float &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a1bed1e9db2f5b2df81a0acf43d67a475</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; float &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a0bc6785620f0450cae056db7792b3f53</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a7a829b3c3008cca356df1bafb083ab98</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloatWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac84391fa5b1640b636ea6de162c2f1d8</anchor>
      <arglist>(const std::string &amp;key, const float &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aba9f096ab6b083ead6074a742b056636</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a6305c543a1e4373dd53cb31b7eae579e</anchor>
      <arglist>(const std::string &amp;key, float *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a8436a72a8a834289a4f712547745a104</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>afd84483cf949f04233a6886919a954db</anchor>
      <arglist>(const std::string &amp;key, const int &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a6203b1f3c525e130089ae0a2db8f1b87</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; int &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aac01e2a5035625bc1d6c41dc189ed579</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac00780c53479570949b31ad9dc3da7e0</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIntegerWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae434f079b5d44e99f28eb917c318a2c4</anchor>
      <arglist>(const std::string &amp;key, const int &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5623d765ea369e767ea6c753835724ef</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a2197a8a32b5b0e1ffab9ec94e7fc9887</anchor>
      <arglist>(const std::string &amp;key, int *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a3910215f130cc499dbd144248cc2b3cc</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a380ecaab1dfb095e61798332556d3568</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aaaa6fc4ffd2000613b21a67374195d33</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; std::string &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a04d52cb7dbd5b29fd4bd7c455a689d62</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5c66905cc31492113989283264bba4d4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getStringWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a330b60a8fbbf03af375fc76b20272e64</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac7da21a9b1ea74a20363608bd958f1eb</anchor>
      <arglist>(const std::string &amp;key)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>abf4c8fd3c0b46abca2b55b3e7910c558</anchor>
      <arglist>(const std::string &amp;key, std::string *data, const int nelements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>abe62cfeb0c145e2b87ed30e45448183c</anchor>
      <arglist>(const std::string &amp;key, bool &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a055860430b8132fca901d3a1a7bab2e0</anchor>
      <arglist>(const std::string &amp;key, const bool scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae60095409800241583ac4543565912e3</anchor>
      <arglist>(const std::string &amp;key, Array&lt; bool &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a073471be29ca8e1f7c4429bee9b1d81b</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; bool &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a4ecb2346c8ed3265a8e6b2d5b4ccbb46</anchor>
      <arglist>(const std::string &amp;key, char &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae46688f6664ff1cee40cd4789293fad5</anchor>
      <arglist>(const std::string &amp;key, const char scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a949a31cb6e45d804ad46057430b65df9</anchor>
      <arglist>(const std::string &amp;key, Array&lt; char &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a9d4fd427548167fe9992e84c725bde76</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; char &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a900b92231032259c04c835524a0c6e6e</anchor>
      <arglist>(const std::string &amp;key, dcomplex &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aa8a401c14c5236e552cbc09da6d51aab</anchor>
      <arglist>(const std::string &amp;key, const dcomplex scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>abb2a16324d71f7154586952294120c55</anchor>
      <arglist>(const std::string &amp;key, Array&lt; dcomplex &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>af506ae37093b6a45077def1805337778</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; dcomplex &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aa0e0ba0f57c672390151058d2bff4612</anchor>
      <arglist>(const std::string &amp;key, float &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aafc4252d0b12e70bdabdcd530979881e</anchor>
      <arglist>(const std::string &amp;key, const float scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ae23d9618fb0d95572d4a989b291c4854</anchor>
      <arglist>(const std::string &amp;key, Array&lt; float &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a74f5a9a0efd75304efd579c1ef94534f</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; float &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>adfb8b259c3ab2094f725d0b54b650454</anchor>
      <arglist>(const std::string &amp;key, double &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5537a2af2913b3ff8cd0c34d4558152b</anchor>
      <arglist>(const std::string &amp;key, const double scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a8d5a4fde5af7191a6c567c8523831857</anchor>
      <arglist>(const std::string &amp;key, Array&lt; double &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a5c323b858af30233e50b9d9f0c96bfb9</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; double &gt; array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a890a90f16f1eb1bfadc419c6abb82ca1</anchor>
      <arglist>(const std::string &amp;key, int &amp;scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putScalar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a22629c8d178b3b4bfafdf14fc6457ae6</anchor>
      <arglist>(const std::string &amp;key, const int scalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aeb50f0529f5fafcbcd0b68f2944fa823</anchor>
      <arglist>(const std::string &amp;key, Array&lt; int &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>abd0f6412d1736851cde818ad9ee0f2d4</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; int &gt; array)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isVector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aad80982ba752192bb9eef9e920776827</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getVector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>aa9dbfb7822960a109f0314972fa4d03a</anchor>
      <arglist>(const std::string &amp;key, std::vector&lt; TYPE &gt; &amp;vector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putVector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>ac4f983c01cb1530d75f3ff63f3a8a675</anchor>
      <arglist>(const std::string &amp;key, const std::vector&lt; TYPE &gt; &amp;vector)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>af00b8ec79d9e1ba2cb676fc775a48e49</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database.html</anchorfile>
      <anchor>a49ae108ad7aebd397652a7cb179c6738</anchor>
      <arglist>(std::ostream &amp;os=pout)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Database::Serializable</name>
    <filename>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</anchorfile>
      <anchor>a3f626b56c83067c9e2745f4fd2f84f7a</anchor>
      <arglist>(Database &amp;database, const std::string &amp;name) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFromDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</anchorfile>
      <anchor>aab549cb72d6b57c12cee6da84d153989</anchor>
      <arglist>(Database &amp;database, const std::string &amp;name)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Serializable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Database_1_1Serializable.html</anchorfile>
      <anchor>a403f41ddf877402abaf3543f0f52996e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::DatabaseBox_POD</name>
    <filename>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>d_dimension</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</anchorfile>
      <anchor>ae5a3d6dc55ea9de20a90e83113761359</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_lo</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</anchorfile>
      <anchor>a2852ef5f85a0d49eb93337979baeb2e7</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_hi</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1DatabaseBox__POD.html</anchorfile>
      <anchor>ad008326a2a7aafc7c4ab628bf38c4f7e</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::DatabaseBox</name>
    <filename>classSAMRAI_1_1tbox_1_1DatabaseBox.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a207945c61ee5396d642f83492a4826c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a306270793b69d1017f6499491e00ff52</anchor>
      <arglist>(const tbox::Dimension &amp;dim, const int *lower, const int *upper)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>aaa7782b48910603c5e5829659cab0dde</anchor>
      <arglist>(const DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>DatabaseBox &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>aa86d9410ab6548b3e95535aad492b5c7</anchor>
      <arglist>(const DatabaseBox &amp;box)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>af19a0cb1d59ba1cb053b8282c6500710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a3556f8790da33f4a65a45881b5d887c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a00cb62c597fe0c6556bb0a19e8efcac6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDim</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>ae137977eed178aa942c7a7588a78eea1</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a5ff536a8a9fb357355875895383f1c2e</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>affba1b895572ca459e3ade4310f6942d</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>lower</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>ab207c8b52ab0dbc49f27ae66452cc070</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>upper</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a87a6beb5f1feb97d62f0814c537636a9</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>acc1d346bd5f899a8e16200ac01c2762c</anchor>
      <arglist>(const DatabaseBox &amp;box) const </arglist>
    </member>
    <member kind="variable">
      <type>DatabaseBox_POD</type>
      <name>d_data</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>a5aa6cfe460239a8af5ca7a59e0f6a6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Dimension</type>
      <name>d_dim</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseBox.html</anchorfile>
      <anchor>afa5ba0c1804ac0545a0dab7e0afae398</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::DatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1DatabaseFactory.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function" virtualness="pure">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1DatabaseFactory.html</anchorfile>
      <anchor>ab1d2f3537f51316cdaec8bb7cb435525</anchor>
      <arglist>(const std::string &amp;name)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Dimension</name>
    <filename>classSAMRAI_1_1tbox_1_1Dimension.html</filename>
    <member kind="function">
      <type></type>
      <name>Dimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a43c9b6c038c46f6d824e5fd1cb846470</anchor>
      <arglist>(const unsigned short &amp;dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a22d8a8c87187d8751ccfbfba4701a6eb</anchor>
      <arglist>(const Dimension &amp;dimension)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a27bd3634882b77b1f71928c7a8aeb52b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>aa3aa92b55d8058918a23ee1a6ae95db3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a0e6bcfb4c66a94ec31467fffa0367335</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a5f5b2bcfb11c7278dab316874592a533</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a2dd4494a4dcb9d4badfeafacb8c0b1f3</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a416c223e17efac6afc661bce1eed3034</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a8e7f13938194f58b9a8064773156dc47</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a40340b897704d5e683a34fd7cb998e48</anchor>
      <arglist>(const Dimension &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>acd8e964a485c8b782c27a330732413de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>getMaxDimValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a245ce7d0faef63a710919725347d25d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Dimension &amp;</type>
      <name>getMaxDimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>ae4ca1c76cfdb2dfeb5cff7d9315d9d6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const Dimension &amp;</type>
      <name>getInvalidDimension</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>af8dfa7f4c3461631128002445b3e95e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>getInvalidDimValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>aec0f7a2c2f8da042357a1ae449f1ccce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned short</type>
      <name>MAXIMUM_DIMENSION_VALUE</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a4a98f988790f9c9cc97aa9c84fc804ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Dimension.html</anchorfile>
      <anchor>a14aecbeafd691a85e25b367724601880</anchor>
      <arglist>(std::ostream &amp;s, const Dimension &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::HDFDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1HDFDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>HDFDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a22fb0b38d58741460f461b9b71192500</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~HDFDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a5d4a4cc0cb5aa25f360ada6b56cae7a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a85cbfed06b5c9a9bbeb1e6c63810c321</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a696d7dedfbeaddc6c06bf60244dd5b25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aff1405db6b13d8bbb4fa1c78ed64b317</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a3c1a8b338b6581e6d7babef23a9cd9f4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>afde9df379ef504fc07cfa59dd92fca65</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>add7a01e3775a3f7dd018617c5afe46bb</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aa2eb3b919207ff198b7b7c5c73b07ec3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aa6e80d6071e4ce76f86bae805422950e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a62be5cd567045f2939c1cde2cc00ade1</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aa0a68ee662f85bf8366728eb44107cf9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>ab76179ecb1b9bf3b696161a681c8daa4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a8e830d74f8795898f04ad3d4bbf41ec1</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a7b57d1db6215f3c73278c0205958029b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a8f3ce1c36343ca555f4429544d3d1e4c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a31ebd12f659efc4f1028b635ef7d9797</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aeb633ccd4a06a9cb3e951af8eec0521d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a8a7172da045991358e192f7b352cc844</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a4f416b25f83e29470914acd7ab1f6280</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a5abf2a5a49451ffbd2ae1c1b592a641e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aaf10cee4994af78186a9ad12aa1bab76</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a674c97044a69d4a9e80d69e51dcd64e6</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>ac38fc2c92ba23f6ed2f03e580e5dd2ca</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>af759db87e7aafaa044407220350aeda2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a57745744630a8f196d42657f42950835</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a34f075d120ac34ac83498dd6d30e1f6a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>ac5dabb7569fcb59c1e63669076a6e03d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a329f191123267df0ac5e609e4b5d0ef6</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a4bf6a9c49c84ca5b7514dbfff03fa717</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a28191d0da3aa3cfeccf73891f2e51984</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aeff318537f627719be02f5e53fe894a0</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>aa2468d9fd2cde5b590f9658ed695d18a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a2c47968ab44c7b53bcd972a3e91efba8</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a4488f392666df9ff5780fcbb06e04ece</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a92d1ac3a099c49e48e1954c517bf446b</anchor>
      <arglist>(const std::string &amp;name, bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>attachToFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a445093ff94ed1ec67675922847b1e864</anchor>
      <arglist>(hid_t group_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>ac478fc0e4c1d6efb3842dc2b5ca39b57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a176fe35da410e8ecce477065cf7c2336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>hid_t</type>
      <name>getGroupId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1HDFDatabase.html</anchorfile>
      <anchor>a0d2c50487c2d712769338a9e4495f81e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::HDFDatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1HDFDatabaseFactory.html</filename>
    <base>SAMRAI::tbox::DatabaseFactory</base>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::IEEE</name>
    <filename>structSAMRAI_1_1tbox_1_1IEEE.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setupFloatingPointExceptionHandlers</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a2340adb5b175e00b44c85615399bf6ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>getSignalingFloatNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a1fda625e0fdad5a466ac151045572fe6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>aa21c4d27a0185e5a389f42336ccb6a9d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static dcomplex</type>
      <name>getSignalingComplexNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a8252af149792f770163e9be8193d029a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a71e13e85d19b810a5d0f97f4072ba641</anchor>
      <arglist>(float &amp;f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>ac603987ce0c49894d3b4c5ca78545a1d</anchor>
      <arglist>(double &amp;d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>ae6b2a4a156bd09c8f564f1d7360412ba</anchor>
      <arglist>(dcomplex &amp;dc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a7d60ee41bf8f5ccf7ac844dcd01e4bd3</anchor>
      <arglist>(Array&lt; float &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a875c67fe8a05a6f842143e41df301eb1</anchor>
      <arglist>(Array&lt; double &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a9d6c9039ae3606acddad0917d1abbd2f</anchor>
      <arglist>(Array&lt; dcomplex &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a21fb48dd705520a2d83cdcb5752f7c3c</anchor>
      <arglist>(float *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a72ac9162d1cac5ea6f39f249f24183b1</anchor>
      <arglist>(double *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initializeArrayToSignalingNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a063ef28ba1f1d8275fa853262ca23224</anchor>
      <arglist>(dcomplex *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a7337eda3c0a23f03e4068824096f90e5</anchor>
      <arglist>(const float &amp;f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>aaeadf695340df41615a3a08acba9f1ff</anchor>
      <arglist>(const double &amp;d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1IEEE.html</anchorfile>
      <anchor>a6bfc685c873ae98d7d596f005c3fd8d0</anchor>
      <arglist>(const dcomplex &amp;dc)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::InputManager</name>
    <filename>classSAMRAI_1_1tbox_1_1InputManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; InputDatabase &gt;</type>
      <name>parseInputFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>ae2613286785dfec84df4ee01d45bd19f</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>parseInputFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>a69de9fd6e486eedf9fee80786b61d470</anchor>
      <arglist>(const std::string &amp;filename, Pointer&lt; InputDatabase &gt; db)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static InputManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>ad9c2c5982b3ff59d65193ead93c4a67c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>aa5441eb4c6a689bdad6bc32468c191cd</anchor>
      <arglist>(InputManager *manager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>inputDatabaseExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>a4fd5418ce69c897b6691fa118b532097</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Pointer&lt; Database &gt;</type>
      <name>getInputDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>ab171d0db5296e669960892eb649f78ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>InputManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>afc6fe9e23c1237cdf1027629934d2346</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~InputManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1InputManager.html</anchorfile>
      <anchor>a54fce1acb689db5ca529ffb318b8936e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::List</name>
    <filename>classSAMRAI_1_1tbox_1_1List.html</filename>
    <templarg>TYPE</templarg>
    <member kind="typedef">
      <type>ListIterator&lt; TYPE &gt;</type>
      <name>Iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>abc421709acb7a9a82522680631c12f46</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>List</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a457a80470eb8318695f209a8a512e066</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>List</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a4d2ddfe3d9639d26d6c80de139b514cb</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a59b8622c4ac7a07a0507d94c67b2da4c</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~List</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>aac3e33d619baecfb411e507bfa633356</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a3300d316a5d459288385cb17298da62e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a10a86cb54df219b97f5c96b0e610dd59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a3d0866e841fad5b918bdfc118353084c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a3e2b154f89430a7abb5a9f221b7eb8a7</anchor>
      <arglist>(const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItemBefore</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>ac9f3103e8a8e9be835d8f12d6b001f35</anchor>
      <arglist>(ListIterator&lt; TYPE &gt; &amp;iter, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addItemAfter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a7a8b516d3bfffea0e7b0a2b6ae8c67d9</anchor>
      <arglist>(ListIterator&lt; TYPE &gt; &amp;iter, const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>ab5e12eab254956319ab35a94bd8e2587</anchor>
      <arglist>(const TYPE &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>ad64af39338051f7ebe014f2f94561ffc</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>catenateItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>ac9d6a5b035f987c6e26c3d454e2938aa</anchor>
      <arglist>(List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>catenateItemsAtFront</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a45438f6a396f2f85dfb5dcfd03ccf8fb</anchor>
      <arglist>(List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a058d5eaae8f21699754259070ff6c3c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>getFirstItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a84a32aec4b9f6b7e2905b4e21d9ba1eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>getLastItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a3e497ddd2517065260cd882f9b86447f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeFirstItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>afcabb3408eef6dd22e13b70ab2497c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeLastItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a9a098b0a619eab5dc2ec711c75520e2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a814b63c9b4abd8fd6e1824332ddf659e</anchor>
      <arglist>(ListIterator&lt; TYPE &gt; &amp;iter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reverse</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a5e4dce1313e485eee0c0fee459699393</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a246ef3e301e2588db8814c297ea8e7bb</anchor>
      <arglist>(List &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>List&lt; TYPE &gt;::Iterator</type>
      <name>listStart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>abe41b62b24c912b071feb1ae005480de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>List&lt; TYPE &gt;::Iterator</type>
      <name>listEnd</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a462b956cc5913e3013d9d5f0ec709734</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ListIterator&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1List.html</anchorfile>
      <anchor>a5e37356bd6a349205145da09689ef853</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ListNode</name>
    <filename>classSAMRAI_1_1tbox_1_1ListNode.html</filename>
    <templarg>TYPE</templarg>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ListIterator&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListNode.html</anchorfile>
      <anchor>a5e37356bd6a349205145da09689ef853</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>List&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListNode.html</anchorfile>
      <anchor>add30d74aa33c750c6a9ce3e7184628c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ListIterator</name>
    <filename>classSAMRAI_1_1tbox_1_1ListIterator.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type></type>
      <name>ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a0968f2864848014a9ebbf1e91909eec1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>aea3eaed68a2b69d419e4e8715762c5f2</anchor>
      <arglist>(const List&lt; TYPE &gt; &amp;list)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a85dfb4887953a9bcaa2ede95fa80aa6b</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type>ListIterator&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>ae7db592111ea07cf45c0dbb553437c82</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ListIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>ab3d11db0c811d0c7226cb481bfa8c814</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a3ac9c35fcef3df1e31a5b7c8d5996cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>aaadbcb92bc98cddb995f73988391824d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a9a26baa119a1fefc1ab8b9134224e1e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator()</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>afae0178cf20b10c6c9cbc6ba2b24e68d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a4e3d6be21ad5aeb5078c389f94e71bf7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const void *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a641fda01b10762d286818cae2d0fde21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>ace595ca157fe7f3a1115d0ad6a5b53b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>aed61e61802b6be0e6d9950498dd008f8</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator--</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a4e79ecb5abb6f9e1bd1f82307b395c98</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rewindIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>ae5272047f654e645b53e72a55d171d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fastforwardIterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>afca42813037b832b81e21d329aa9ae85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a61087ab43c4516c81256d97363d7a94d</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>a3c0281635393e13d52b012a2996895e4</anchor>
      <arglist>(const ListIterator&lt; TYPE &gt; &amp;iterator) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>List&lt; TYPE &gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ListIterator.html</anchorfile>
      <anchor>add30d74aa33c750c6a9ce3e7184628c7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::AbortAppender</name>
    <filename>classSAMRAI_1_1tbox_1_1AbortAppender.html</filename>
    <base>SAMRAI::tbox::Logger::Appender</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::WarningAppender</name>
    <filename>classSAMRAI_1_1tbox_1_1WarningAppender.html</filename>
    <base>SAMRAI::tbox::Logger::Appender</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::DebugAppender</name>
    <filename>classSAMRAI_1_1tbox_1_1DebugAppender.html</filename>
    <base>SAMRAI::tbox::Logger::Appender</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Logger</name>
    <filename>classSAMRAI_1_1tbox_1_1Logger.html</filename>
    <class kind="class">SAMRAI::tbox::Logger::Appender</class>
    <member kind="function">
      <type>void</type>
      <name>logAbort</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>a51336f420dde86c95d7c8d3ce92af98e</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logWarning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>ac81140de08116023bc4bf7873de9be86</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>logDebug</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>ab14b4add9770d4aa0542a49163bee4ec</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAbortAppender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>a590f92e56a703763591fe4d475d41641</anchor>
      <arglist>(tbox::Pointer&lt; Appender &gt; appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarningAppender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>ac1b3fd1a1e205bdc8ab48d913cfa1bfa</anchor>
      <arglist>(tbox::Pointer&lt; Appender &gt; appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebugAppender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>a9f7e62fb89f8060ca5983954f6ff7bc7</anchor>
      <arglist>(tbox::Pointer&lt; Appender &gt; appender)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWarning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>acb4612dd77d86c51d07229a432d650e1</anchor>
      <arglist>(bool onoff)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDebug</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>a3e6f9e258ba9a41a27dddf18c98f392f</anchor>
      <arglist>(bool onoff)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Logger *</type>
      <name>getInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger.html</anchorfile>
      <anchor>a159465f7e1ea2e22a22534af4f90a705</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Logger::Appender</name>
    <filename>classSAMRAI_1_1tbox_1_1Logger_1_1Appender.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>logMessage</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger_1_1Appender.html</anchorfile>
      <anchor>a232cf262fc0fa29e00c1563dc2462ac2</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Appender</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Logger_1_1Appender.html</anchorfile>
      <anchor>a2ece3b6f1459928770443ecc641f4fba</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MathUtilities</name>
    <filename>classSAMRAI_1_1tbox_1_1MathUtilities.html</filename>
    <templarg>TYPE</templarg>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ab892fc134dc9229af2110647ea728f03</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a586685a892aa653868ccba7127ee8f1b</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a47554021a27d78296b19ed72dbd8ad3d</anchor>
      <arglist>(const dcomplex &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ab0c5a2060f946c731e75f359e2960a1c</anchor>
      <arglist>(const float &amp;a, const float &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a6ace3b2ff017b590488ae2eb15f9d53d</anchor>
      <arglist>(const double &amp;a, const double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a5d5bcd41fa2d2c1c764e72f21b044575</anchor>
      <arglist>(const dcomplex &amp;a, const dcomplex &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aa432b8511ca65e3ec22d4b014c51a781</anchor>
      <arglist>(const bool &amp;low, const bool &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>af76c7ec7059add169551978a096c0b7c</anchor>
      <arglist>(const char &amp;low, const char &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a42a165593966f22250920642005a542d</anchor>
      <arglist>(const int &amp;low, const int &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a58def4ee52ede1c972a1ea71048e9c92</anchor>
      <arglist>(const float &amp;low, const float &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a24cbaec19736a966cad1e3f7d221da6a</anchor>
      <arglist>(const double &amp;low, const double &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a03976bfd72423f24fa07d0fa07fc7028</anchor>
      <arglist>(const dcomplex &amp;low, const dcomplex &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ae0e85ee499fd18d4f94f2a8f99a61417</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a5237342189e4ca684ff76f6912b282b0</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aa5cc85604d52ec22ec3e86c96dccb8a5</anchor>
      <arglist>(int a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a27bdfe937c571458a7602716ba09d92b</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>af271d81aaf61643cde52e1e59efea880</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a1fc1c81d567a44852ce3b3ebd083046e</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aba8da2439d172b3c6f821c0b36b61844</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ab892fc134dc9229af2110647ea728f03</anchor>
      <arglist>(const float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a586685a892aa653868ccba7127ee8f1b</anchor>
      <arglist>(const double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a47554021a27d78296b19ed72dbd8ad3d</anchor>
      <arglist>(const dcomplex &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ab0c5a2060f946c731e75f359e2960a1c</anchor>
      <arglist>(const float &amp;a, const float &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a6ace3b2ff017b590488ae2eb15f9d53d</anchor>
      <arglist>(const double &amp;a, const double &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a5d5bcd41fa2d2c1c764e72f21b044575</anchor>
      <arglist>(const dcomplex &amp;a, const dcomplex &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ae0e85ee499fd18d4f94f2a8f99a61417</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a5237342189e4ca684ff76f6912b282b0</anchor>
      <arglist>(dcomplex a, dcomplex b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aa5cc85604d52ec22ec3e86c96dccb8a5</anchor>
      <arglist>(int a)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a27bdfe937c571458a7602716ba09d92b</anchor>
      <arglist>(float a)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>af271d81aaf61643cde52e1e59efea880</anchor>
      <arglist>(double a)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aa432b8511ca65e3ec22d4b014c51a781</anchor>
      <arglist>(const bool &amp;low, const bool &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>af76c7ec7059add169551978a096c0b7c</anchor>
      <arglist>(const char &amp;low, const char &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a42a165593966f22250920642005a542d</anchor>
      <arglist>(const int &amp;low, const int &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a58def4ee52ede1c972a1ea71048e9c92</anchor>
      <arglist>(const float &amp;low, const float &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a24cbaec19736a966cad1e3f7d221da6a</anchor>
      <arglist>(const double &amp;low, const double &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>dcomplex</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a03976bfd72423f24fa07d0fa07fc7028</anchor>
      <arglist>(const dcomplex &amp;low, const dcomplex &amp;width)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a8e88e0b0311e2a7e9a161e9bbd30e2fa</anchor>
      <arglist>(float x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>afc34dcca6300d321f514ba1f924f6d5f</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getZero</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a60b86142eb282de01cefe3c56f224698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getOne</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ad5680ec3e7b7a93694ff87aad8dd616d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getSignalingNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a1cdb1933c2d8ea510188571f41654e8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a84948e34e287ba92e0fac0e3f4519759</anchor>
      <arglist>(const TYPE &amp;value)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToSignalingNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a88885a8aed393fc2782863dcdd02f4d7</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToSignalingNaN</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a7cf6b988a1d6860e912fb7611bfa3d5b</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>equalEps</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ad4b475780d09a745505a50bef35e4613</anchor>
      <arglist>(const TYPE &amp;a, const TYPE &amp;b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aad0da64d0184d49ddd3c7086d044c693</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aaff1cadb1a3d6ae0fe22747f3b16e542</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a3fa69b04b74b21949927481352a08bab</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a0fe7834caf2cfcb783dc08e1713826c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ab386bdeb5bca30ae8eac550d53c8d5db</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a47970c1dd356ece634ae7555238d3d54</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>getEpsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>af3f5f648a4d88207b1492606fbdc8cfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToEpsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>ad32a6fec7c9e2f2b148b93daa034437b</anchor>
      <arglist>(Array&lt; TYPE &gt; &amp;array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setArrayToEpsilon</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aff5c05c7d6bdbc51b719c9335fc77de2</anchor>
      <arglist>(TYPE *array, int n=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Min</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a12cb136082e69cba6ace32946a4515c6</anchor>
      <arglist>(TYPE a, TYPE b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Max</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a2a73e5617c18d5e2dd845aea7772501f</anchor>
      <arglist>(TYPE a, TYPE b)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Abs</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a50d668bad9e0f142e080c5abf43bc45e</anchor>
      <arglist>(TYPE a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>round</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>aae1333e2720aee70b03f28d178de1066</anchor>
      <arglist>(TYPE a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TYPE</type>
      <name>Rand</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MathUtilities.html</anchorfile>
      <anchor>a0030217b9a402b9b27fde801fef3be8c</anchor>
      <arglist>(const TYPE &amp;low, const TYPE &amp;width)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MemoryDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>MemoryDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ae84a9f4a4e181c6119cd41b8c65e38da</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MemoryDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a796ec3797984a387722e672c71bfe250</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a7d260802958e053506fc3aef0e2bbd49</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a9e5e94e85e660134e8e02111175cce29</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a9aadcdad368a366ad826b8c9784b45c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>af9e46c5005fa9bb23ed5461a5de83c81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a614afcaff7b3961e6fc87c02464ba986</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a4fe9196d40bff528bbecbf6e5982a5f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ab4cea859d5ebb2aca99b0072bc46ba28</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aceb28f4868da021d232d76d9c302fd02</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a002b69fc8e559954684a46a3f7e5ef0c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aeefc0f4d5d55cbdc1fc4abd220f35192</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a3ee0ce4cf8583374ec1e7919ddddc4f5</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ab4873c1f5662963a727ba57a2ba0f3c4</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a5aa5635a1db0a1617fed8cad8e535b40</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>abee19268f0ae8cb902e078e1fda1e3fc</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; bool &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a137766d0337af5331957b1185e13fddd</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a167b1dd8d640dad81da156377aed23b3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>getBoolWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a45c284e6a35c07fbac10cd52942fbdb0</anchor>
      <arglist>(const std::string &amp;key, const bool &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a0eb53a99b874b18690df241fd3eadcc8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a9810a3b2e3bcb251c2241f3b287c350f</anchor>
      <arglist>(const std::string &amp;key, bool *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a4f1d1d07d842c9f6cd1938d687e75c7d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>af73eb0ddfe73a34a9308164068f8d9a0</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a14cd4fdb5b5089e623fddb969e311e09</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; DatabaseBox &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aa65f8e0d1028e6eca65cfbdae4d87c89</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a8570a394907110dfe6ef81c1e48a3355</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseBox</type>
      <name>getDatabaseBoxWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a409f496c327fc3433486cc1438bbfd48</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a6d6036d788d6daf3edebc91d62845cf2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a41188e041c57e73f293a6d3f462b8121</anchor>
      <arglist>(const std::string &amp;key, DatabaseBox *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a30764c316127094b19f3201774fe53f6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>afa1617b7682021df24a096d97701abc2</anchor>
      <arglist>(const std::string &amp;key, const char &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aa86fa4012070c06036f7646ed5f78a51</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a0688ba881e06f7055c98caee170593b5</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ab3247e0a89ee917fc25674d04e31d87e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual char</type>
      <name>getCharWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a4350287be2170899b2b360122cb1fed8</anchor>
      <arglist>(const std::string &amp;key, const char &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ae851653ed2e8a703d8de56ac6773d05c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>af9108209628f4da6243eee0e2612658a</anchor>
      <arglist>(const std::string &amp;key, char *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a7db9d3356666cdd557a70c9552737ae3</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>adb71a643859a5af994202db9fafb93fe</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a445d0e144b871757836820ab8313c613</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; dcomplex &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a2fb8f02de41d9b727eab0c5fcad5b2d9</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>affdaa50ca428b6561bea268e6fa7e820</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual dcomplex</type>
      <name>getComplexWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a3862802387c890de310b78ee8ef851ea</anchor>
      <arglist>(const std::string &amp;key, const dcomplex &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a2f9647ba589169c7bfe78edd88344744</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a3cfe811c9a95625e57541f4c8abe0146</anchor>
      <arglist>(const std::string &amp;key, dcomplex *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a180b4a54c7e38c8aa7ee17489a7ed8ed</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a9ecdd68f72ce690af48d68fd5b01327c</anchor>
      <arglist>(const std::string &amp;key, const double &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aff3bc982ff805576d4d80f0a239f472c</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; double &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ad68243951f1343162b91d369e89d147e</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a1f866a4b340110ea8ddd684b662b0207</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getDoubleWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aef8f30127d9f8f8fb2a0c80177ec810a</anchor>
      <arglist>(const std::string &amp;key, const double &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a716fe4049c5be6695cbd75ffd313c434</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aac8e729dd8c0b3e054a1160332c1606f</anchor>
      <arglist>(const std::string &amp;key, double *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a7a48585890e63f3768d84bd61643a6d5</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a5cff0d3b9bb818e1ec9175129e5cc8f8</anchor>
      <arglist>(const std::string &amp;key, const float &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ae9f26cd4489c0dc6d6b6c32cf2bbb238</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; float &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>abedb8529b89b50a394073412eb560ffe</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a636100d2f912c35e1d4b4ad1fe5e7747</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual float</type>
      <name>getFloatWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a99b274b1199d6e33f2fbfe7f49f3c5ff</anchor>
      <arglist>(const std::string &amp;key, const float &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ad818c9e85181869438b6ffc8f7dbd94b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aa0de8c526938ae99f37749eacebe2a57</anchor>
      <arglist>(const std::string &amp;key, float *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ac541fe275242fbb6fb278de073d81941</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ab9726fd043f69341f99243d8bb4e6e96</anchor>
      <arglist>(const std::string &amp;key, const int &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a4aac019f1a8e7c4d559f4ccfbb2279a9</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; int &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ac8fb5f25a1ba9bc1a434c3c10705f39c</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a3027bc366cbcf846e4fe0af4154dac67</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getIntegerWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aff19d9bb16702802deef65acc6f34a62</anchor>
      <arglist>(const std::string &amp;key, const int &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ace1d1dd3e504ca90d46b7fed7a3a88ee</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a1132e5c7b1920413a6c603c7fa8adfb7</anchor>
      <arglist>(const std::string &amp;key, int *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>ade1238caaf95b37f14b4c505f94a6e52</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>aa2afc402679a08c91f120f5afeb1393a</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>acf95964b14a7fe178ac3e63c9ce1638f</anchor>
      <arglist>(const std::string &amp;key, const Array&lt; std::string &gt; &amp;data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>adcdd7712f63478ef166e78f963d551fb</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a0ef54c0a26080450b7ec677103ed598d</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getStringWithDefault</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a92138fcb8e5540c9ce0cf16f971d7993</anchor>
      <arglist>(const std::string &amp;key, const std::string &amp;defaultvalue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a530e8bf5adb98275df39104caae030c6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a466d47d30a14bee4c9cd959535ef25df</anchor>
      <arglist>(const std::string &amp;key, std::string *data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a5af795adca60cef7a35d2a601bdcf4a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>keyAccessed</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a51d36298a862b14eae58a810fc930078</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>acaaa9d992c3504e27031a2bdc7412a8c</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printUnusedKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>af001032160e49b567da81b4d91f761e5</anchor>
      <arglist>(std::ostream &amp;os=pout) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDefaultKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MemoryDatabase.html</anchorfile>
      <anchor>a27e511511f2d383165ea3119d6da2150</anchor>
      <arglist>(std::ostream &amp;os=pout) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MemoryDatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1MemoryDatabaseFactory.html</filename>
    <base>SAMRAI::tbox::DatabaseFactory</base>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::MemoryUtilities</name>
    <filename>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printMemoryInfo</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>ae913939762fc02d17e012c46eb81eaf3</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recordMemoryInfo</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>a41ad0ba08a58c5ad6feb59a0e168d4cd</anchor>
      <arglist>(double time=0.0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printMaxMemory</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>ad6aa80f883549880b3ea715c7ab8d210</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>align</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1MemoryUtilities.html</anchorfile>
      <anchor>a5a15f4a908d33346d74b5766357d56d8</anchor>
      <arglist>(const size_t bytes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::MessageStream</name>
    <filename>classSAMRAI_1_1tbox_1_1MessageStream.html</filename>
    <member kind="enumeration">
      <name>StreamMode</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a17874a3aabaea0d0fe1a1d5e0fb3d63b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Read</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a17874a3aabaea0d0fe1a1d5e0fb3d63ba2add26dab73af946e1358e10f18c6863</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Write</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a17874a3aabaea0d0fe1a1d5e0fb3d63ba45527644e50823280c568d7068f621c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MessageStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a424bfa374a12181dfa60ee4ce69d3928</anchor>
      <arglist>(const size_t bytes, const StreamMode mode)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MessageStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>ada8a8c0529a07a63de7881f1409f2354</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>getBufferStart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a5abf044a642a37c4f35c8612903f0818</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a987c1e945aea4e33399f4e22c72ab2bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getCurrentIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a78dc5ad1bde8d70dac051ed8f910b0f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a37eee38f1e52373089adb0d36b2de0c8</anchor>
      <arglist>(const size_t index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>aef407d9cb94e50491f139e88319a5452</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MessageStream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>ada20293979c68d9822349423998c7ce5</anchor>
      <arglist>(const DATA_TYPE &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pack</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a19c4bc25caab54131a2dd57806aee8a8</anchor>
      <arglist>(const DATA_TYPE *data, unsigned int size=1)</arglist>
    </member>
    <member kind="function">
      <type>MessageStream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a6f9c3cb4ea28b860b27412c5a64c055b</anchor>
      <arglist>(DATA_TYPE &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpack</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a4f6b009c0094fdb9b89d27047cb0ecc7</anchor>
      <arglist>(DATA_TYPE *data, unsigned int size=1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>ae30cd6a2521c410ecf200ef5b51ee606</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>getSizeof</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1MessageStream.html</anchorfile>
      <anchor>a6785c939f2978aa8de2292ee3ee117d0</anchor>
      <arglist>(unsigned int num_items=1)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::NullDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1NullDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>NullDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>abfccad476ff84be6278fd8d216782561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NullDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>aa3009179a5cdfc0e74c711bf47cfc329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>acf2473f9d73c9b6a0185d1de6128ad3f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>acdebcc10d934be9347c79c8dab96a3bf</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>af57b83bc97ffd194a1419b361b630148</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a5de701906749c18a37af83e1e826720a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>ac411f72bc3912226eabe3bcac62575c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>afb76701170a1e04753784527c09ea60e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a396c380f2abcad24a557cb43f151e962</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a75d9f9b24757455385a613f61f1e7461</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a033d09cafdb29e0346e23f2c2eac72ae</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>adf35d1f58d98af43b7572584badf9341</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>ab0c860637b2a8c5a1a1b5de169b19f6c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a7196593c4016605276ace630098feb61</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a2c14ec2cbce5905d349ff9e6717fd6c2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a33015414ffa2d620f3cee2e90c48f2d6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a9a91bc03c3800ec78314460e1649947b</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a847f914eb0c36f914f0aef2d318d7894</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a438988ce42ee4382891d53f62f95c071</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a007e566968ea2e42487ed4bf47733dbc</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a5f0dba96ff12f55c62d33a1eb095f2d6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a8bc6ed2d3737b6f591dee1b67525ae96</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a65180a1060f5ab0184a9ea9820d947b7</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>aabb75591852d7b161b55e301ec71f4a2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a08343679a16110b7d98e743c9244e353</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a168802daf7ec219ebcb9964840d75fc1</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a0ffb10a7e5d7b0c96a64bb4b4b88c5c6</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>ac233a86ce0eb7acf6ef1ebeb175a5b06</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a23ac9f4ba9e00b653ff70745cf7e7b4e</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a0544ea3421333902f8b3140e69c63ae8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a8a92a55fd76ce1a2af8d2d45f4cf0bc2</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a9960f98cbc408061ac1d4ca55d34ba70</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>aca5ed90d0f3e3f086cd06b0811d08a03</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a4b4c498c9bb4ce177fd44bc2a3120c0a</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a00cd9b542c0e153e76ee0fba16428980</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a70b2434664214603f7a15f044639cb67</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a16fc256991ab2b9de9120816a3c2d8ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1NullDatabase.html</anchorfile>
      <anchor>a420f30ce9895f05053001527729fa3c2</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ParallelBuffer</name>
    <filename>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</filename>
    <member kind="function">
      <type></type>
      <name>ParallelBuffer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>a319eeb8af9a593d0c627941aebde5d51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParallelBuffer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>a8ba909a1cc5570310e8cbb93c5000b64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>ad3a599a54eeafc4df5541b4ac72d70c0</anchor>
      <arglist>(bool active)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrefixString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>afbdf4c2bbd494d1762fbe1ce8a69d9a5</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputStream1</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>aa31ab3ec29552a4b0ea7897156eff52f</anchor>
      <arglist>(std::ostream *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputStream2</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>adb971e63d29d175b2b72b108a3d96212</anchor>
      <arglist>(std::ostream *stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>aaad06b2a0b6cdacb256852192a3d8063</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>a30251cc1ebb6eaa7d978f317ebfc3c45</anchor>
      <arglist>(const std::string &amp;text, const int length)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>sync</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>a22fa2b92d22a8e2f0e3b5bdfab86ead3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>overflow</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ParallelBuffer.html</anchorfile>
      <anchor>a9a1b3b6001ed6b39e91b5a73738f80ec</anchor>
      <arglist>(int ch)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Parser</name>
    <filename>classSAMRAI_1_1tbox_1_1Parser.html</filename>
    <member kind="function">
      <type></type>
      <name>Parser</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a0fd0db610d678cb354319af51182bec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Parser</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a5a71330151b3f8d04cd86647fc33befb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>parse</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>ab285c0c1890aead7ea95be35b8ad45cb</anchor>
      <arglist>(const std::string &amp;filename, FILE *fstream, Pointer&lt; Database &gt; database)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberErrors</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a4e2d9861b36106ec39022228f45d44ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberWarnings</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a5d70fe3e294a83cca5f95d11610df9fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Database &gt; &amp;</type>
      <name>getScope</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a3c06b8efa9161f2c98d86d150b4f7e9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enterScope</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>af0700e2f877e7afc7fe990d1f6ee887e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>leaveScope</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>ae6bc725677adcfd4809607bb89714ac2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; Database &gt;</type>
      <name>getDatabaseWithKey</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a83d31524af81d16cd3c70dae8f5f641a</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>pushIncludeFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>acbce5f4939d4ede6cb7a5ffc66910845</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popIncludeFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>ab62e0d8df5a864dd9a1960a89b9f8400</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>error</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>ad507856f04397036b0eebff0db3462c1</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>warning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a2d810caf19694eeef3566dfdd35d322d</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLine</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a4e6deb88cd02af2d5ae16e04b97e5dff</anchor>
      <arglist>(const std::string &amp;line)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceLine</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>afe0ab7e5c39e1746b30c223b1aee52fc</anchor>
      <arglist>(const int nline=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>advanceCursor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a48a7eb1ed5dcc9f10dba8a9ffae67780</anchor>
      <arglist>(const std::string &amp;token)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>yyinput</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>add863ed501c824ea670216c395ed8b17</anchor>
      <arglist>(char *buffer, const int max_size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Parser *</type>
      <name>getParser</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Parser.html</anchorfile>
      <anchor>a97fbd2cd622b77bad54c2a6b051b3428</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::PIO</name>
    <filename>structSAMRAI_1_1tbox_1_1PIO.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>a81d467864565cd45a096dd86c10e9c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>a6fa6e3fb37ff68570da13bf27d1c080d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logOnlyNodeZero</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>ac791469751d21d5ee5dc8d1bce6e8140</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logAllNodes</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>a9cb74c7170ef2fe78d6bce593cdbc73c</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>suspendLogging</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>a24a3d7a7e17339b064dc3a11a6af6761</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resumeLogging</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1PIO.html</anchorfile>
      <anchor>a4a5b817e4f7b80eb952f8e1d9f478847</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Pointer</name>
    <filename>classSAMRAI_1_1tbox_1_1Pointer.html</filename>
    <templarg>TYPE</templarg>
    <base>SAMRAI::tbox::PointerBase</base>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a81b999ea3c72d1708ef735854eb9dad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a07b06529612a4360f39ad35d6f7853ea</anchor>
      <arglist>(TYPE *ptr, const bool managed=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a45773873ed09b137af8342122dc169d6</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a36cd2d9b636533634fd94dec5ef93b68</anchor>
      <arglist>(const PointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Pointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a1af1bbc4c5985f316225ae97c5184664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>aa9963c94b9ecc1783bcc54aabb9987d5</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a27f6ff00642e9a3f5bc2c0032e5e2149</anchor>
      <arglist>(TYPE *ptr)</arglist>
    </member>
    <member kind="function">
      <type>Pointer&lt; TYPE &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a2ffe5b5ddcb90fa7f24c726e83d2c02f</anchor>
      <arglist>(const PointerBase &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a75e9212ceede1f16cefd4c73be308b01</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a2c96d5a5c17301923e1298907bc59e26</anchor>
      <arglist>(const Pointer&lt; TYPE &gt; &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>operator-&gt;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>abc9a1c2456d414bc87377d4c4dad605b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator*</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>afef4ad2d5a79374bc22ae3b8d6d034aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator TYPE *</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a74c9e3d44687ff00d8f31e7d9a0a4f91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TYPE *</type>
      <name>getPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>adc503b6c6adfb86dafe64866b874d6a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a33dd03b01864cd2f69db8886694e76d5</anchor>
      <arglist>(TYPE *ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>ab1fd5c581c63eec452cd2aac46590d2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a0067541a568884e6cdb880aa3d494012</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>ab81a134a41680e132ccd4e6dd365466c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>ab413aaa6cdad27dff95daf1cad848571</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReferenceCounter *</type>
      <name>getReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Pointer.html</anchorfile>
      <anchor>a4539eb49d3014b38fb60a8d005189bd6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::PointerBase</name>
    <filename>classSAMRAI_1_1tbox_1_1PointerBase.html</filename>
    <base>SAMRAI::tbox::ConstPointerBase</base>
    <member kind="function">
      <type></type>
      <name>PointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>ade7d260c26e39d179eb34b25c855c62d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PointerBase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>a648ea7ad8808664243ce6cdd28714656</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ReferenceCounter *</type>
      <name>getSubclassReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>a9c0cbc9a87382befff84c7c76b4d921a</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const DescribedClass *</type>
      <name>getSubclassPointer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1PointerBase.html</anchorfile>
      <anchor>aae5b5ef003bd399c554792d53adb96de</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::RankGroup</name>
    <filename>classSAMRAI_1_1tbox_1_1RankGroup.html</filename>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a948bbacd9c24510b05beafe5e1b11da7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a868590dbbe3e9b21628757c8fc571f0d</anchor>
      <arglist>(const SAMRAI_MPI &amp;d_samrai_mpi)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>ac97497fbae33781898a7983f7d133622</anchor>
      <arglist>(const int min, const int max, const SAMRAI_MPI &amp;samrai_mpi=SAMRAI_MPI(SAMRAI_MPI::getSAMRAIWorld()))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>af1a656e419c2055e78460d0d75744caa</anchor>
      <arglist>(const tbox::Array&lt; int &gt; &amp;rank_group, const SAMRAI_MPI &amp;samrai_mpi=SAMRAI_MPI(SAMRAI_MPI::getSAMRAIWorld()))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RankGroup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a1d6ce609c940208959d6118d780ca964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAllRanks</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a442b73c30313d9b9894865554fac1b04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMinMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a305473134abaff1e959e5bbb28190732</anchor>
      <arglist>(const int min, const int max)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isMember</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a14a0b12eb1f23fd891c7c5ea909b040f</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a2b50134328a4240f54cee76b745703ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMappedRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>a1d8ab4d7cde235baf96eff76b35305da</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMapIndex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RankGroup.html</anchorfile>
      <anchor>ac30b69ba2e23e864fa47348edd4f1cf7</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::ReferenceCounter</name>
    <filename>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</filename>
    <member kind="function">
      <type></type>
      <name>ReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>a64b818408e9ab892df9418aac95732ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>ab2a5e3d707a5d4d55cee9405bec75220</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>deleteReference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>a8200187378c003f0172d1942f0c6f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addReference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>aef8b8b3e31486f4ef895040d08367c41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>a76a8752e9972a98114191ded4ccc1c5a</anchor>
      <arglist>(size_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>aa07aeeef4425b0d163dc2de9098436a1</anchor>
      <arglist>(void *what)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isFinalized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1ReferenceCounter.html</anchorfile>
      <anchor>a9610556bb0427733e7c26cb01a351d33</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::RestartManager</name>
    <filename>classSAMRAI_1_1tbox_1_1RestartManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a37a987966df65bcddce99f1b8bbd14cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>openRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a96e6072d6268364d028c30c1baf99e7c</anchor>
      <arglist>(const std::string &amp;root_dirname, const int restore_num, const int num_nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>closeRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a85675a50c178d4f58ec2ffdb7c7f1c83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getRootDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a9bdca11e9acfd3e408adf7fb00c4f093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setRootDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a49d4a6208a5fd457817ec8b4a2a139e8</anchor>
      <arglist>(Pointer&lt; Database &gt; database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDatabaseFactory</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>afd77f692512fd04483fe664477ff3a3b</anchor>
      <arglist>(Pointer&lt; DatabaseFactory &gt; database_factory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerRestartItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>aee57f0360c364b8a01a778f528f900d8</anchor>
      <arglist>(const std::string &amp;name, Serializable *obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unregisterRestartItem</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>abe839edbca64abcadfaf8efc801e9eea</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clearRestartItems</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>aefdd705a32e88f2978959cca9dbabc59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a236a962b9148a264f0b9a1bae0fb172d</anchor>
      <arglist>(const std::string &amp;root_dirname)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeRestartFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a63085cca4649f885c64fa7e8afc4ed7c</anchor>
      <arglist>(const std::string &amp;root_dirname, const int restore_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeRestartToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a103ea11b10ad54fa5a02b63f588169d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RestartManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>afa6eb93c67cd7e00530970a3e1a51057</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RestartManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>aeb5c1dfea5581c61417542ce311e58d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~RestartManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a8f0226be4c054502155becd653359fe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1RestartManager.html</anchorfile>
      <anchor>a055dc8cf053a1bf6212094166dded0bb</anchor>
      <arglist>(RestartManager *subclass_instance)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SAMRAI_MPI</name>
    <filename>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</filename>
    <class kind="struct">SAMRAI::tbox::SAMRAI_MPI::Status</class>
    <member kind="typedef">
      <type>int</type>
      <name>Comm</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a6bb237e4bb9b5d727560a64499eedacd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Datatype</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>af6e8ad0dac5019295dfadb295a9c0102</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Group</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a2a66faec83f416743eee669e9e8958d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Op</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>adfba73a14b61a09fd9622305c5cd6b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>Request</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ac4f0d990b03eadfa60b081861dfa3748</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SAMRAI_MPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a0eaa00be407adfe3e8be388e2a046479</anchor>
      <arglist>(const Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a0c70f4ac6eba29e42ac9c456b3e8bd56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>aadf48cd20ac35f92debc40160d5b24e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Comm &amp;</type>
      <name>getCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>acec68b05f0c4e75332018f5592a96fba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a4c373a8f9d3e7d11dfd94b9a67fcd809</anchor>
      <arglist>(const Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dupCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a7bac5d358c91e5992022bf6c6985659b</anchor>
      <arglist>(const SAMRAI_MPI &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>freeCommunicator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a02c4ac559a9b34c191976125bf2a7dd4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const SAMRAI_MPI &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a06cd07f1950f64b9422c15ddab5b38c8</anchor>
      <arglist>(const SAMRAI_MPI &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a3652bfca562099c08ce586122b50e927</anchor>
      <arglist>(const SAMRAI_MPI &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a6b8b8a4225c2f108a694e4667be89af7</anchor>
      <arglist>(const SAMRAI_MPI &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Allgather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>aca250407b1ed778072261a8f80a71568</anchor>
      <arglist>(void *sendbuf, int sendcount, Datatype sendtype, void *recvbuf, int recvcount, Datatype recvtype) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Allgatherv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a7581b35582bdb693d5d93a60714d5d1e</anchor>
      <arglist>(void *sendbuf, int sendcvount, Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, Datatype recvtype) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Allreduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ae1a3f16fd59213b7f5b2ba9724fe8df0</anchor>
      <arglist>(void *sendbuf, void *recvbuf, int count, Datatype datatype, Op op) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Attr_get</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a4ce96d21ae4a01a5f45a4bd93b6eb2bc</anchor>
      <arglist>(int keyval, void *attribute_val, int *flag) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Barrier</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a60a2385cc25bbdba270fba4660763862</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Bcast</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a31452f98c8c83619fda1df95c32629e2</anchor>
      <arglist>(void *buffer, int count, Datatype datatype, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Comm_dup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>aaf8eb1d9a286b912a7caa9af7132a0d8</anchor>
      <arglist>(Comm *newcomm) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Comm_rank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a171a66e8f09216d6bbfd129cf2b34100</anchor>
      <arglist>(int *rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Comm_size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a62a5bffcfe9e440f4f94d1f35bd8d338</anchor>
      <arglist>(int *size) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Gather</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a238f5b5a1d630a62abb447a1c920afc5</anchor>
      <arglist>(void *sendbuf, int sendcount, Datatype sendtype, void *recvbuf, int recvcount, Datatype recvtype, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Gatherv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a4696a2fd6ffda35c6e7fde008d0c6f3a</anchor>
      <arglist>(void *sendbuf, int sendcount, Datatype sendtype, void *recvbuf, int *recvcounts, int *displs, Datatype recvtype, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Iprobe</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a2f14764dba70acdede5994789cf7d4cb</anchor>
      <arglist>(int source, int tag, int *flag, Status *status) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Isend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a4da0bad8d8f972fff48b9c1c5d28cdbf</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int dest, int tag, Request *req) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Irecv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a3d1d53f7d125188e4dc627eaad5c9641</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int source, int tag, Request *request) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Probe</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ab9a019ccbaef3e1cb5ff87216301839e</anchor>
      <arglist>(int source, int tag, Status *status) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Recv</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>aba6c3ee0c2ee48d2a11837731f2f56bc</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int source, int tag, Status *status) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Reduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a14ab0f7aab2acfd03f466a9fb86eb882</anchor>
      <arglist>(void *sendbuf, void *recvbuf, int count, Datatype datatype, Op op, int root) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Send</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a508fc10f0a65cc3a9a07c21c77fac3c7</anchor>
      <arglist>(void *buf, int count, Datatype datatype, int dest, int tag) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>af3d5a0b0a9402c0793cf0adf9bbafc39</anchor>
      <arglist>(int *x, int count, Op op, int *ranks_of_extrema=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a78492e817977192a3926b5fe97b0d0f9</anchor>
      <arglist>(double *x, int count, Op op, int *ranks_of_extrema=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AllReduce</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>affeb8886f44ec986184c693d0eef6419</anchor>
      <arglist>(float *x, int count, Op op, int *ranks_of_extrema=NULL) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const SAMRAI_MPI &amp;</type>
      <name>getSAMRAIWorld</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ac107df16eca96e41e1768c8ea9a213ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getInvalidRank</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a1c1add1bc14ece336286814170998f60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallAbortInSerialInsteadOfExit</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a1669de6d22d848740b90e6f3b6cfaee6</anchor>
      <arglist>(bool flag=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCallAbortInParallelInsteadOfMPIAbort</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a44db9734af2825b0480596dfd36361b6</anchor>
      <arglist>(bool flag=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>abort</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a388920599c5f34e7d80d6f635fc9ecc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disableMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ac87e77678ffb3084bd6d9d063a497942</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>usingMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a2a625ff902e6bbe1c98d1ec92b3761b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a65c7ef8be8aa31e3c9d615808edb65b0</anchor>
      <arglist>(int *argc, char **argv[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a1c71c4d9b8a4196c4d092df5af280342</anchor>
      <arglist>(Comm comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initMPIDisabled</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a2b10180941041113ba25e3e94d693964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a5da2fc226c1f5b8635947e33c53376cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Comm_compare</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a7b4cb0e1b6bbd0e637a009caa583b140</anchor>
      <arglist>(Comm comm1, Comm comm2, int *result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Comm_free</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a2b4269ef32c19dc4f2017d9d2bd6d1e2</anchor>
      <arglist>(Comm *comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Finalized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>af0c5f4041b2ef31dba988093a84c2493</anchor>
      <arglist>(int *flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Get_count</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ad1ad9b4b25e76bc475ce45a083362a61</anchor>
      <arglist>(Status *status, Datatype datatype, int *count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Test</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a4c6570252eed49e6c6658194d3bd5332</anchor>
      <arglist>(Request *request, int *flag, Status *status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Test_cancelled</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>ad026235335a7e9ed3bc573bf05763eaf</anchor>
      <arglist>(Status *status, int *flag)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Wait</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a487dbfad7d3215daa0e5db457d1461bd</anchor>
      <arglist>(Request *request, Status *status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Waitall</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a5168006777db9c953a6523a90521f148</anchor>
      <arglist>(int count, Request *reqs, Status *stats)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Waitany</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a26d2ccaca8089d944dd2df7c2f686eb6</anchor>
      <arglist>(int count, Request *array_of_requests, int *index, Status *status)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>Waitsome</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a1db8cf86def2fcf7112d68a173ffbbd3</anchor>
      <arglist>(int incount, Request *array_of_requests, int *outcount, int *array_of_indices, Status *array_of_statuses)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>Wtime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>adb0d1bdfc1cad2aa72c0719b351815ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Comm</type>
      <name>commWorld</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>aea5ba4acec79c0fd7383094b3f086aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Comm</type>
      <name>commNull</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAI__MPI.html</anchorfile>
      <anchor>a17192432c38efce37dbc69204691af8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::SAMRAI_MPI::Status</name>
    <filename>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</filename>
    <member kind="function">
      <type></type>
      <name>Status</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>a6418941d4ab57a932c53e9e86a73e8f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MPI_SOURCE</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>a4247fac0debb26a8cf5d096a930d722a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MPI_TAG</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>af7676db4c98c6b41d12c812464de5763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MPI_ERROR</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1SAMRAI__MPI_1_1Status.html</anchorfile>
      <anchor>a0728387f2b8130ced97378fa834da1a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SAMRAIManager</name>
    <filename>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>a6d8070b9f24743f62eff5d165befd442</anchor>
      <arglist>(bool initialize_IEEE_assertion_handlers=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>a6b3b7c0498bf43bdda64685daf7607da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>aabafb6ed941cf04cf0ef1e5c347b662b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>ace8ac0a80f71caa2ccf96a12a7b1777e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isInitialized</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>af223fd95408dc8745e0cc8a464789d82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isStarted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>a887693c8a0e708a29178abf929e6e1f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getMaxNumberPatchDataEntries</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>a4a0232423127408c37e2deedccaa81b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setMaxNumberPatchDataEntries</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SAMRAIManager.html</anchorfile>
      <anchor>af2adc0365173a887e59c1692ea5eaeef</anchor>
      <arglist>(int maxnum)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Schedule</name>
    <filename>classSAMRAI_1_1tbox_1_1Schedule.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function">
      <type></type>
      <name>Schedule</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a1353a344b9e1e1e3edade2717776a126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Schedule</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a4efb3117bed2753d5ac5be10055e6129</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a0744ffbe1bf991d37184c0b1c2e75ba4</anchor>
      <arglist>(const Pointer&lt; Transaction &gt; &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>acad74bbe19c26ebfc1da7360d8cfa423</anchor>
      <arglist>(const Pointer&lt; Transaction &gt; &amp;transaction)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumSendTransactions</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a2112eb0705d7fe2cdc9c2a504fbd9ca8</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumRecvTransactions</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a75ed216dcb8631383873bf90cc4baea0</anchor>
      <arglist>(const int rank) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumLocalTransactions</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a3d2a3def6431b2edcf2a4c84a60c23e1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPI</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>ad313d29fb6ec4c1f1884491fa017a95d</anchor>
      <arglist>(const SAMRAI_MPI &amp;mpi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMPITag</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>ab67c346fce582d10a28fd5073d82f8c9</anchor>
      <arglist>(const int first_tag, const int second_tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFirstMessageLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a2edea15acf3bca588cd24bcaf8d2bc07</anchor>
      <arglist>(int first_message_length)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>communicate</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>aadba4f4bc0eedeaed575d993ab70a7c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginCommunication</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>a28a19e33d9ffef5262120c5bf47c0f4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalizeCommunication</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>ae9a57dba5ea24f10ad98c8212cd05e5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTimerPrefix</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>ad52aed60d8028a69e41a43cadd9a1e1f</anchor>
      <arglist>(const std::string &amp;timer_prefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Schedule.html</anchorfile>
      <anchor>ab4f87397a998fdfcba9dcad660f2cef4</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Serializable</name>
    <filename>classSAMRAI_1_1tbox_1_1Serializable.html</filename>
    <base virtualness="virtual">tbox::DescribedClass</base>
    <member kind="function">
      <type>SAMRAI_INLINE_KEYWORD</type>
      <name>Serializable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Serializable.html</anchorfile>
      <anchor>a988adf1757e8a124eebb33ac87260864</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Serializable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Serializable.html</anchorfile>
      <anchor>ab4dc56904f7fafbb066ae454214c5b69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Serializable.html</anchorfile>
      <anchor>ad0ab03ffa0745e5a9ec825c41bbcf60f</anchor>
      <arglist>(Pointer&lt; Database &gt; database)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SiloDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1SiloDatabase.html</filename>
    <base>SAMRAI::tbox::Database</base>
    <member kind="function">
      <type></type>
      <name>SiloDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a67e2cce7d49995d43740f509049a7a70</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SiloDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ada9619292381723b6aa72d334de07c98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>keyExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ad528c2b314fc9d9a7c24653c80c1bdab</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getAllKeys</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a6a70b220f3caa05d5dd2b729c316ea8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual enum DataType</type>
      <name>getArrayType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>af36d88869f6eba7ee927e3730f4fd4f1</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getArraySize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>af3dc8c4ba0e4bad078e77a6bab60c89c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ac1f13eba93bac9156ecd3268c86abe5f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>putDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a87866f819a45b6249fb60e4160e43677</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Database &gt;</type>
      <name>getDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a214c0970be9ccd24bb4624a06dfd4ce9</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isBool</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a91c4fec859e00d92f0d171c7ea0a6021</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ab66664221ff02bda6b43645167161f0c</anchor>
      <arglist>(const std::string &amp;key, const bool *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; bool &gt;</type>
      <name>getBoolArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a83a34ab811ac68f70924060c6f9e1420</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDatabaseBox</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>abca45ea00c999fe27d2577b922b808cd</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ac65f8def652796dc847653c489702f65</anchor>
      <arglist>(const std::string &amp;key, const DatabaseBox *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; DatabaseBox &gt;</type>
      <name>getDatabaseBoxArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>afa4aedf8c1a25b928cbce30d02759c4f</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isChar</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ad4485f23dd21b4723fcbe0a8dd148754</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a5ddd4da798e8a02751778bdd7b7f03a4</anchor>
      <arglist>(const std::string &amp;key, const char *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; char &gt;</type>
      <name>getCharArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a03f166e6631bc931c96cedc0558ec7df</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isComplex</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a5092a5a6ef386969b4e68bc8fd7ecc6c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a0a8e54d2858c83d672fbca2f3b2bfb43</anchor>
      <arglist>(const std::string &amp;key, const dcomplex *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; dcomplex &gt;</type>
      <name>getComplexArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a846f854b0ad8f6b145aa9c3f9f74ae05</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isDouble</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ae4976e0e230a11df2c44a2eb1d85f04c</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>abee17966fa3a5aff7468ec44ba6ef594</anchor>
      <arglist>(const std::string &amp;key, const double *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; double &gt;</type>
      <name>getDoubleArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a5fb78f277e9b5fd4d500464715980f5b</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isFloat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a411bc48236d75ef479ef25e9475be6f8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a5e38ac2648b2123787f7c02b59f12dbf</anchor>
      <arglist>(const std::string &amp;key, const float *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; float &gt;</type>
      <name>getFloatArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a032fecb042a2ea1d615971ec54c14a9e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInteger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a6d2cb9ca2ff21e2fadafa62fac3a38c8</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ab5614d254fe24b7958a7db8fbe7ec995</anchor>
      <arglist>(const std::string &amp;key, const int *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; int &gt;</type>
      <name>getIntegerArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>aa6352030546b4b7e532a0bf78c051af1</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isString</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a7381d20337f960832ad28d2085ea473e</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a1bf0c722386565796e5f45162e5cbfef</anchor>
      <arglist>(const std::string &amp;key, const std::string *const data, const int nelements)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Array&lt; std::string &gt;</type>
      <name>getStringArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>aec3a799ca2fe419795732640fe72c3cb</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a33bbdf1dbf7d1dc85902e7d78dc9fdba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>af112c13e360a83e05281169239c1ec34</anchor>
      <arglist>(std::ostream &amp;os=pout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>create</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a9a7107d1eb74d0a75ca5ae2d09f72e7f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>open</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>a63c82d0e0d1fb220180a795c7169ea2f</anchor>
      <arglist>(const std::string &amp;name, const bool read_write_mode=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>attachToFile</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ae4361a12be8b746dd13d0ff1ad485f76</anchor>
      <arglist>(DBfile *file, const std::string &amp;directory)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>close</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1SiloDatabase.html</anchorfile>
      <anchor>ae4aed3dcaffe2b036511f1e0acb90edb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::SiloDatabaseFactory</name>
    <filename>classSAMRAI_1_1tbox_1_1SiloDatabaseFactory.html</filename>
    <base>SAMRAI::tbox::DatabaseFactory</base>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StartupShutdownManager</name>
    <filename>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</filename>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::AbstractHandler</class>
    <class kind="class">SAMRAI::tbox::StartupShutdownManager::Handler</class>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerHandler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>aa7087a689fe5d575117eb00693087b2f</anchor>
      <arglist>(AbstractHandler *handler)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a64d838f5ca7221dc8220abc90dcc80d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>af3f5897d64daf54101b900fb509af3e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a7c293d89925231f6927d8c619db95222</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a77c92cb683699a2e211797023dc3755a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityArenaManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>adaa2ceca3db4845bff2caf6732d58ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityReferenceCounter</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a9fbeb63e7b52e43ae4f6438c8cfe422c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityLogger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a4c57de0302c22bce33ca36d445436b8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityListElements</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a01bb91a61cc445dfd1206c2ebb64807f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityList</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a4ff59973393a96b3f0a16d296598a193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityInputManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>ad0eefe341b7bf7039f6355e02ecb3e29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityRestartManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a2d58a6af334baf5ff62a1e77dedad74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityVariableDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a3090bb630fcf994abc12ac4fc972d089</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityStatistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>aec24d3063807001ea94a1771699b9cd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityBoundaryLookupTable</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>ac311937d7dc0148db0536a56b77899c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityHierarchyDataOpsManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>ad53147d1d2c78e5202f544d4cc2d6311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityTimerManger</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>a1e38514e2dd8e6a14696eaf8cd7b1bad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityTimers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>aefea4cab8ddc26cfc3a8489c1023c5f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned char</type>
      <name>priorityVariables</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager.html</anchorfile>
      <anchor>aee6bdd5e3d93177447113158aa1c8b4e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StartupShutdownManager::AbstractHandler</name>
    <filename>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractHandler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>a06bd889b49aa922efffa59f56f531d5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>a3f496648160348bc1302c3408c6139f6</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>af1c75a0764ac70462f78708106fd7069</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>ad4efb414b6adcc3934f4d632d046be56</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>a8326b318dcc49863094ab6af6f9e8d57</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned char</type>
      <name>getPriority</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>a3993cb6ae5dfd9793d19a835227ea5f0</anchor>
      <arglist>(void)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasInitialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>afc7d9bc4bb447d2cede7c7dc3357edc4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasStartup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>ac3d5bff3774fbcc240aeb224d01d8423</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasShutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>a41eb0aafebe2a872ebc43bc4a2807dcf</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasFinalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1AbstractHandler.html</anchorfile>
      <anchor>ae73949223dbb2471515a5d9a1c08f821</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StartupShutdownManager::Handler</name>
    <filename>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</filename>
    <base>SAMRAI::tbox::StartupShutdownManager::AbstractHandler</base>
    <member kind="function">
      <type></type>
      <name>Handler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>aaf2df147e4c11c6b0c9369fdd0a624b2</anchor>
      <arglist>(void(*initialize)(void), void(*startup)(void), void(*shutdown)(void), void(*finalize)(void), unsigned char priority)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Handler</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>aa971747eafc49dc4601830fc75cebcb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>a55c6d06e3ff61a48de0c150c53eff2f7</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>a1e3d62233c755268ff72009021166fab</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>shutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>a2b1b9d943e03d83bbc1761ee9fbe394c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>aeb82df36bbb9211bc7b8f264516acb30</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>unsigned char</type>
      <name>getPriority</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>a8c1ca4b97f29a7a4c87ce95446c4b41c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasInitialize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>a8edc277eaae51471b67681103e19cba4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasStartup</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>ad49f1083c2c57444757f28e7ad42b1ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasShutdown</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>ac1b9ac9eaea5f6b235c77b4b5f8f1a1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasFinalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StartupShutdownManager_1_1Handler.html</anchorfile>
      <anchor>a629766299a3037b4f16807bd353087e7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Statistic</name>
    <filename>classSAMRAI_1_1tbox_1_1Statistic.html</filename>
    <base>tbox::DescribedClass</base>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStat</class>
    <class kind="struct">SAMRAI::tbox::Statistic::PatchStatRecord</class>
    <class kind="struct">SAMRAI::tbox::Statistic::ProcStat</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Statistic</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a530ee8c7313ff97c6f4d991a4cefa95e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a17f81c631fc3d35d0c134110352dc42e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getType</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a00ea34489a80e86ed5525df23ddb17e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInstanceId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a6f5f745587abea95b6f7bb216ed49e21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getStatSequenceLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a2064fc7a76a8638f85e0d0c258161a87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>aee0acc8f5af4a32a5215bfced8c378f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordProcStat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>ab531dd70696f6d56916b2c2a71f264fe</anchor>
      <arglist>(double value, int seq_num=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recordPatchStat</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a40df31ced40d0a05df6deb66acdc3132</anchor>
      <arglist>(int patch_num, double value, int seq_num)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>canEstimateDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>af5f5fb0faa78c6abccce5f21c9031fbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDataStreamSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>aa9b35300d5c97a078a7191b79e12fca7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>ac5987455b321437de5afdc7dd41551dd</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a4c830bf6fcddd12d3fbfe1288a661f8e</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a93d91b17fd40975fd4ede2d5ac3dba2b</anchor>
      <arglist>(std::ostream &amp;stream, int precision=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>acd43dc60251c23d005293ecd4f88a502</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a09efee8b731afb7bc84a5e8f6032588c</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Statistic</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>aa6c775fa4a360fae0361de76ae3001a1</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;stat_type, int instance_id)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Array&lt; Statistic::ProcStat &gt; &amp;</type>
      <name>getProcStatSeqArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a89befbc1c561fb30e52d9f0081fc945e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Array&lt; Statistic::PatchStat &gt; &amp;</type>
      <name>getPatchStatSeqArray</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>ae0ace4ccd2ddc19ba8d91a3b5386d9e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistic.html</anchorfile>
      <anchor>a0fbf7d2e506f52d934addc74ed59843a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Statistic::PatchStat</name>
    <filename>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStat.html</filename>
    <member kind="variable">
      <type>List&lt; Statistic::PatchStatRecord &gt;</type>
      <name>patch_records</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStat.html</anchorfile>
      <anchor>a8153a653bb6246763ec13d4143442897</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Statistic::PatchStatRecord</name>
    <filename>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStatRecord.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>patch_id</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStatRecord.html</anchorfile>
      <anchor>ab34f904203ec9cbdef376c13ef166533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1PatchStatRecord.html</anchorfile>
      <anchor>a0e0e45ef8b023475968ed951aab73990</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Statistic::ProcStat</name>
    <filename>structSAMRAI_1_1tbox_1_1Statistic_1_1ProcStat.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Statistic_1_1ProcStat.html</anchorfile>
      <anchor>a9f8593b02710cc39508659bcbcbfd3c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Statistician</name>
    <filename>classSAMRAI_1_1tbox_1_1Statistician.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Statistic &gt;</type>
      <name>getStatistic</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a86b6863635b5acbbd64223f12c6ba523</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;stat_type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkStatisticExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ab8e683f0038bd097c57673d84d602e70</anchor>
      <arglist>(Pointer&lt; Statistic &gt; &amp;stat, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberProcessorStats</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>aa079e726fd03704fdb3f3661463b7992</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumberPatchStats</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a95278f2dcd9935f2a5abe876adc7e077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetProcessorStatistics</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a17249fa02518c6fc44c4cfea72dc1c98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetPatchStatistics</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a0122feba4be4a11f2dbedbaeef322be3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetStatistics</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>abed84653de61433f0dc2ab3baec6b574</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getProcStatId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>acb2c26a8b67c0a36692feb18206addd7</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalProcStatSequenceLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a4afa8f15ef37ba8a0afae6b422ed5ea5</anchor>
      <arglist>(int proc_stat_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a91d34cc1567277c2f10b7d32427d106d</anchor>
      <arglist>(int proc_stat_id, int seq_num, int proc_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatSum</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a382fe68c14f41f09098fa93f2cb10d71</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a6b33be61e56254b929534c1273e0e46b</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalProcStatMaxProcessorId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a4423dd6856439895a42ba7b7b5c5859f</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalProcStatMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a60723747d3e5641f60aa3cbae5039715</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalProcStatMinProcessorId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a37c7f9fe38dff1516492b12f60247a54</anchor>
      <arglist>(int proc_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalProcStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>aec4dd853470ef8f7bc9d262a8466606e</anchor>
      <arglist>(int proc_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalProcStatDataFormatted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a78f93545da4f06595ccd52c9b0fb5989</anchor>
      <arglist>(int proc_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalProcStatDataFormatted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a583ef42cce98990778c7eb8ba0f79788</anchor>
      <arglist>(int proc_stat_id, int proc_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getPatchStatId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a50e279600ca918a45b81e04a317e6303</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatSequenceLength</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ad505f91dae8dcb3d26814e512429c257</anchor>
      <arglist>(int patch_stat_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatNumberPatches</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a74c29762f5fa14536e89066ede4e667a</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatPatchMapping</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a891957eebb793d3d90ba1f66fb571b0b</anchor>
      <arglist>(int patch_stat_id, int seq_num, int patch_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatValue</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a36a4162bc9b92817364975f6c247a201</anchor>
      <arglist>(int patch_stat_id, int seq_num, int patch_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatSum</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a80add5e239274d17073d7dc0d198850b</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>adc938602cf19f8a416b94dfb564547a7</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMaxPatchId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a286d7b7c05b750acbf8375dab1618704</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a099498351ceaf7e3a491b6660a07b291</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMinPatchId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>af58380c3079b7108c9111e739a70da85</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatProcessorSum</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a4238f24ae364e3305696605111964025</anchor>
      <arglist>(int patch_stat_id, int processor_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatProcessorSumMax</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a157c298c7256ce165384a85e97ac68e8</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatProcessorSumMaxId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a70805c93005eb79246ee5bcb009da51a</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>getGlobalPatchStatProcessorSumMin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a91f894f94335fe09881e857e2f8c5e66</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatProcessorSumMinId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a9c56bc43ce3470ff64034d2068b824d9</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatNumberPatchesOnProc</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a7a0ee55c102e0497aa0cf17284640239</anchor>
      <arglist>(int patch_stat_id, int seq_num, int proc_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMaxPatchesPerProc</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a78fe7c1bf566e7ab2824a0ab2eb82cf3</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMaxPatchesPerProcId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>acc13acd3d66b1bd48653c8dddbbeea68</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMinPatchesPerProc</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a6638374a0e9036e2c971b7f4c635396b</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getGlobalPatchStatMinPatchesPerProcId</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a28b5a91ae9542f201a6192ef2f0fb7f7</anchor>
      <arglist>(int patch_stat_id, int seq_num)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalPatchStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a1c5adb999f0b41e90bb1009e45bb391c</anchor>
      <arglist>(int patch_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printGlobalPatchStatDataFormatted</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ac1b28ed7bd40d6c90f8dc1d076e66c69</anchor>
      <arglist>(int patch_stat_id, std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>finalize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a626679b85129cbc2745ecc2772e5bbdc</anchor>
      <arglist>(bool gather_individual_stats_on_proc_0=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printLocalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a867f7da02846220f4e64e22096428f31</anchor>
      <arglist>(std::ostream &amp;os, int precision=12) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printAllGlobalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>accf7d2de3ad4ba12a6c986091b08ea53</anchor>
      <arglist>(std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printAllSummedGlobalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a740ed2c4d2c8603688f172df525abec0</anchor>
      <arglist>(std::ostream &amp;os, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printAllSummedGlobalStatData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a486350c350172f6a3945bd62ed830e7d</anchor>
      <arglist>(const std::string &amp;filename, int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSpreadSheetOutput</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>ae06046f17cce557900180619278bbae2</anchor>
      <arglist>(const std::string &amp;dirname=std::string(), int precision=12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printSpreadSheetOutputForProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a77258b6de8d5e7fdc22bd279b746ddc7</anchor>
      <arglist>(const int proc_id, const std::string &amp;dirname=std::string(), int precision=12)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistician *</type>
      <name>createStatistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>abff3c554e3a5fb27f86e3ff57b13baaa</anchor>
      <arglist>(bool register_for_restart=true, bool read_from_restart=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Statistician *</type>
      <name>getStatistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>aec1a1a9224ca74a88dd3b52a4af02dee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a71ff84215624a52845884d7a64c347d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a95a5901cd16ed27b0960277eec2d89e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a668201282a865fa2afe244a41944f172</anchor>
      <arglist>(Statistician *subclass_instance)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>checkStatsForConsistency</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a992ca57fa34ecc04038eeba0902b4260</anchor>
      <arglist>(Array&lt; int &gt; &amp;total_patches)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkProcStatExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>aae6a63e7b4e9e67ca6e1640b0cb3baaa</anchor>
      <arglist>(Pointer&lt; Statistic &gt; &amp;stat, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkPatchStatExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a4c27ebf5658673ce393e5b546aad6d08</anchor>
      <arglist>(Pointer&lt; Statistic &gt; &amp;stat, const std::string &amp;name) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>StatisticRestartDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Statistician.html</anchorfile>
      <anchor>a28427759aee8640b06292903cbb217d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StatisticRestartDatabase</name>
    <filename>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</filename>
    <base protection="private">SAMRAI::tbox::Serializable</base>
    <member kind="function">
      <type></type>
      <name>StatisticRestartDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>a26e58ccb65098d65f33883fdd4e9fb25</anchor>
      <arglist>(const std::string &amp;object_name, bool register_for_restart, bool read_from_restart)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StatisticRestartDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>a55dbb9bdcbcb50f185ca5665052a8dfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>a8f92b12ecc38f55e02c186a872f04c18</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>a47f2a3f6eec2cde4babc174986c3ca59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getObjectName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>a5fe6ac111948b50f19749d0935c3aeba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Statistician</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatisticRestartDatabase.html</anchorfile>
      <anchor>a0fbf7d2e506f52d934addc74ed59843a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::StatTransaction</name>
    <filename>classSAMRAI_1_1tbox_1_1StatTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>StatTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a6e4d40d663f34bc8cb32d41651c2a671</anchor>
      <arglist>(Pointer&lt; Statistic &gt; stat, int src_proc_id, int dst_proc_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StatTransaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a68aa19dd75318404f84ba8e4f6e842fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>af23607c01575c558d3d5008b38a28c42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a82fe419339c5fe60967753e3acc7ae06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a1205b76017561dbe53e876e125568cca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a49d0fc77d0e7a324b6f89d6c5e113d1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a9abf4555008b0eba8ce99507ef958a93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>abed1d41ff110023c2b2735074e9bf2ca</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a76f71cdba1b7e4811327820e502dfcf6</anchor>
      <arglist>(MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>a104b3d12722616c7f397fe77233c8e42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1StatTransaction.html</anchorfile>
      <anchor>ae283b82c7ec61d5686a797ee39ca452d</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Timer</name>
    <filename>classSAMRAI_1_1tbox_1_1Timer.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Timer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>aa105624cecf47b458662c083cdb927f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a409d021b3b85fe54c6c64b90da02d9a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a8979d341c408a5db77b1b18c5bc4b945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>af21f9c30263b402c8c32e6d375464b78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>barrierAndStart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a8755b5dd89a23393882e6b3f99e45d9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>barrierAndStop</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a3094b6b4f6b3a4d47e1fb27d899f0c48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startExclusive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a8d17920a7a82dc77aa9d07b207164ea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stopExclusive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>af6bb6b63d256084070c2a2c154349728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a83bad8aedc4726fa5fc4ed08a0c364db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalSystemTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a4ab06a89e040e3a08da632992e5ca51d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalUserTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>ac22b9b0b22638a484bb7bb244687e299</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getTotalWallclockTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>af80f887931875090f909ce226aa7e9a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getMaxWallclockTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a85dc7d6319cb833e0a55dd16b61f7018</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExclusiveSystemTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a21c88a58499bcd60f7b315b4a6bb29e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExclusiveUserTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>ac7907dccbe53fc96073d6fa9e8d2012f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getExclusiveWallclockTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a3dd682da9ae671cff978ae3d7d761227</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>af053cdc75cf62dd59961baecb25eaeb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a843b2e64f15c7fd7ef1030c4d9ce809c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberAccesses</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a045215082d6da41e029f748588e19b6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>computeLoadBalanceEfficiency</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>aec69f7c48e4e0ec553d679f5405a46b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeMaxWallclock</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a046ed4ff861e4c688f4360edc2162f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>putToDatabase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a951064fa76fbb6081b0afdd1cc88b18f</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFromRestart</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>af00f1c72b559d135f5544e1262b246e3</anchor>
      <arglist>(Pointer&lt; Database &gt; db)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Timer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>ac05165d0816ae80ec2e5f8a496854509</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setActive</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a68978bbec9c4590e2b2d377e53b933c8</anchor>
      <arglist>(bool is_active)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addConcurrentTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a3299f9d1cfaf3858e5ec2bf119a2079c</anchor>
      <arglist>(const Timer &amp;timer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isConcurrentTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>ac80587cec25d14ce37b373ad5b50b916</anchor>
      <arglist>(const Timer &amp;timer) const </arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimerManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Timer.html</anchorfile>
      <anchor>a8f762e12639d620eb0f10068e6ab6521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::TimerManager</name>
    <filename>classSAMRAI_1_1tbox_1_1TimerManager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Pointer&lt; Timer &gt;</type>
      <name>getTimer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>adc21c89cbf644063b7766db1d41d9b0a</anchor>
      <arglist>(const std::string &amp;name, bool ignore_timer_input=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkTimerExists</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a2f55663cf3e23f2221ba0880a6890d36</anchor>
      <arglist>(Pointer&lt; Timer &gt; &amp;timer, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>checkTimerRunning</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a71e6405cbfb20299d5801f17311591f8</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>resetAllTimers</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a740b4143b708dc20b7e445794fc73fec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a9b711ebddd7664ecd5b5cd755cdf0549</anchor>
      <arglist>(std::ostream &amp;os=plog)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>createManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a93534c8022739d1629726ed7022934eb</anchor>
      <arglist>(Pointer&lt; Database &gt; input_db)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TimerManager *</type>
      <name>getManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a09bc9940c33add2ce09c59ff94db8552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>TimerManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a0a59c7e82fbefe964fdd1ac05a7cd164</anchor>
      <arglist>(Pointer&lt; Database &gt; input_db)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~TimerManager</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a02ce763decc45e88e19cb52f6b19a2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerSingletonSubclassInstance</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a8e8cb349c28777b5a21e0d506baab7ae</anchor>
      <arglist>(TimerManager *subclass_instance)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>startTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a381ae56ee109db37c4726b145218b90c</anchor>
      <arglist>(Timer *timer)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>stopTime</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>aa2ff039ccdb2a57a5adbd2e3da30880e</anchor>
      <arglist>(Timer *timer)</arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Timer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1TimerManager.html</anchorfile>
      <anchor>a50de43af5bed41f30c071d8cce0e81bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Tracer</name>
    <filename>classSAMRAI_1_1tbox_1_1Tracer.html</filename>
    <member kind="function">
      <type></type>
      <name>Tracer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Tracer.html</anchorfile>
      <anchor>a767b272464a823a636eaa08879384159</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tracer</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Tracer.html</anchorfile>
      <anchor>aa34d4e8fa7211de208ca549a07949dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTraceStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Tracer.html</anchorfile>
      <anchor>a15da04eaa2a61624b2ded0f2afa23a5b</anchor>
      <arglist>(std::ostream *stream)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::Transaction</name>
    <filename>classSAMRAI_1_1tbox_1_1Transaction.html</filename>
    <base>tbox::DescribedClass</base>
    <member kind="function">
      <type></type>
      <name>Transaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>ab825619ba5aa557a4c77749b66cd7c9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Transaction</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a1476ce754e2edbc353a6df8fc255c7f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>adca20c2cb6a54957e44ec8fc20c8ad9d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a65bdea0fe029b4acf297dd9018f915e3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a453a0246fabd461e0522443730231e9f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>aaadf7431dcb1ab5440fb50b204e6ee5b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>ad82c2c913b10fe2738743fbf463a00a5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a4eaeb70fe357f2e8b140c60830b44763</anchor>
      <arglist>(MessageStream &amp;stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a42fa4956b5f4dc19e94869abf41a3d61</anchor>
      <arglist>(MessageStream &amp;stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a7ecaae6ad68ffa99e9decee64e2ceac9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1Transaction.html</anchorfile>
      <anchor>a106f8cdf226f242ac63be9fc98ed15f6</anchor>
      <arglist>(std::ostream &amp;stream) const =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::tbox::Utilities</name>
    <filename>structSAMRAI_1_1tbox_1_1Utilities.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>recursiveMkdir</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>a28401d4b41dcf9a5b251dc87ce188c9a</anchor>
      <arglist>(const std::string &amp;path, mode_t mode=(S_IRUSR|S_IWUSR|S_IXUSR), bool only_node_zero_creates=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>renameFile</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>a3845bce119adc11c4ea9860e404290c0</anchor>
      <arglist>(const std::string &amp;old_filename, const std::string &amp;new_filename)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>intToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>aa224e6f9907d29865c0e9022f9ed9417</anchor>
      <arglist>(int num, int min_width=1)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>nodeToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>aadc02808d9ebd79e34056c6d3c46582f</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>processorToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>a2a57ad657a557c61c9fb1ceefc4f42e0</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>patchToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>a649a766358894828cc75bb61408646dd</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>levelToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>ad313d4710d40aa589b9503657f746703</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>blockToString</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>a78a58f66c5226570c19769dca7208f3c</anchor>
      <arglist>(int num)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>abort</name>
      <anchorfile>structSAMRAI_1_1tbox_1_1Utilities.html</anchorfile>
      <anchor>a9fc6248c50017e22fae5647e910b89cb</anchor>
      <arglist>(const std::string &amp;message, const std::string &amp;filename, const int line)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::tbox::vector</name>
    <filename>classSAMRAI_1_1tbox_1_1vector.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>SVec::iterator</type>
      <name>iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>afdac86bf31ffb20125b6b23a81c9e3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>af1e16deab8414ef1763dbf5d3d99a77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a092478ceffef46cc1f408958ce5b4baa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>aeaa1592fd1efdbd66c8324e89ee463a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::value_type</type>
      <name>value_type</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ab808983b35ae205e230f3d3351d8d588</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::size_type</type>
      <name>size_type</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a7d0f6a05761417503dcefc17f1a38cfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::reference</type>
      <name>reference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a9de871a99c5ce994a6543563000f844a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SVec::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>af14b739d89c6e9c59c181f1e0d6040c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a6176262f93c8680260be38cc7a37a234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a852bc73018e913bdb8df40873227d1c0</anchor>
      <arglist>(const vector &amp;r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a092c9d43a97dd98414f962abf0ae8337</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~vector</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a5e474fd7c3c8cf3234f097d15e9acac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a599d8bd478a6ad49f6fe4d88586806d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>aa4779add35848d26ac9e2723c5629d03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>aa9535009ebf9a3f9e6af87562d8e4736</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a7ba5923be6afe2a308c977a746448d9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ab3a7923e23c232b12e79de506e0a723d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a56df2b290c16489f5cdd94e9cecd7c14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a3764ad9e19fd967651a741e5bd16a574</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a01e07251d425342bd28dd7c9649c1450</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ad9a61509d4a1310285a70d35198901c8</anchor>
      <arglist>(iterator i, const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a4d54056d9bb47cd0cd84f029e532b5ce</anchor>
      <arglist>(iterator p, size_type n, const TYPE &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a45d376ed3fea73f6f0efead126abf483</anchor>
      <arglist>(InputIterator i, InputIterator j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ade81ae1c05d1f4b43e42f77487e8141e</anchor>
      <arglist>(iterator i)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ae60c7ccd19b70477eef916ad64489186</anchor>
      <arglist>(iterator &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>erase</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a0b1b1bdc14fca8061c22b71b0c3fbf86</anchor>
      <arglist>(iterator &amp;p, iterator &amp;q)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>aa873c12c33f976247a647bb12f5cc599</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a62107c59e580899141165e0e20e6b5ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a9acef13a969a3d561f11a2855bbe74bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>aca91120d064e00b5fbc8154eabd1c8f3</anchor>
      <arglist>(size_type n, const TYPE &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>af78550c98a78c7d250926d3d347c6e96</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>vector &amp;</type>
      <name>operator=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a14b326d785b97daa15404b1bdc0af4dd</anchor>
      <arglist>(const SVec &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>aaf17b7f8e39b65b805877c3f6b6edfff</anchor>
      <arglist>(const SVec &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a41002f6e53b920ec304843bd19007cae</anchor>
      <arglist>(const SVec &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a7042319be8b5f9c568201d53553f3826</anchor>
      <arglist>(SVec &amp;r)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator const SVec &amp;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ae80644e540beb8babe0ff60e1f9c0fe6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator SVec &amp;</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a02980f802392e08783d11c6b7c51b0ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>a0b259d5e01ebac583473d95080fd1eb1</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const TYPE &amp;</type>
      <name>operator[]</name>
      <anchorfile>classSAMRAI_1_1tbox_1_1vector.html</anchorfile>
      <anchor>ab6bdeeb78037b9da301d53204e096269</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SAMRAI::xfer</name>
    <filename>namespaceSAMRAI_1_1xfer.html</filename>
    <class kind="class">SAMRAI::xfer::BoxGeometryVariableFillPattern</class>
    <class kind="class">SAMRAI::xfer::CoarsenAlgorithm</class>
    <class kind="class">SAMRAI::xfer::CoarsenClasses</class>
    <class kind="class">SAMRAI::xfer::CoarsenCopyTransaction</class>
    <class kind="class">SAMRAI::xfer::CoarsenPatchStrategy</class>
    <class kind="class">SAMRAI::xfer::CoarsenSchedule</class>
    <class kind="class">SAMRAI::xfer::CoarsenTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::PatchInteriorVariableFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderAndInteriorFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelBorderFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelEnhancedFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelFullFillPattern</class>
    <class kind="class">SAMRAI::xfer::PatchLevelInteriorFillPattern</class>
    <class kind="class">SAMRAI::xfer::RefineAlgorithm</class>
    <class kind="class">SAMRAI::xfer::RefineClasses</class>
    <class kind="class">SAMRAI::xfer::RefineCopyTransaction</class>
    <class kind="class">SAMRAI::xfer::RefinePatchStrategy</class>
    <class kind="class">SAMRAI::xfer::RefineSchedule</class>
    <class kind="class">SAMRAI::xfer::RefineScheduleConnectorWidthRequestor</class>
    <class kind="class">SAMRAI::xfer::RefineTimeTransaction</class>
    <class kind="class">SAMRAI::xfer::RefineTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::StandardCoarsenTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::StandardRefineTransactionFactory</class>
    <class kind="class">SAMRAI::xfer::VariableFillPattern</class>
    <member kind="function" static="yes">
      <type>static const std::string</type>
      <name>errbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>ad06812e1effed7056dfc0aa43e90a5f4</anchor>
      <arglist>(&quot;E-&gt; &quot;)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>logbord</name>
      <anchorfile>namespaceSAMRAI_1_1xfer.html</anchorfile>
      <anchor>ad258013999ff834ea29a0e7c89f27221</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::BoxGeometryVariableFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>BoxGeometryVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>acda142f0760e678704a228ccdff73b81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoxGeometryVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>ac89d4f391c33f441398174892abf5f10</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>a1134f8547de2876f3b3ed73ddc5b0ef3</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>a9b742584df0342cfce243f04ab45cacc</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>a7aacb94b0ef9de875ef2b68c69a1b41d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1BoxGeometryVariableFillPattern.html</anchorfile>
      <anchor>acb7fa2fbf1550c189fa6341bf00b21e9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenAlgorithm</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a1f2bf5a8062089078adbc84d71eac28e</anchor>
      <arglist>(const tbox::Dimension &amp;dim, bool fill_coarse_data=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a6b72980eecbc22b9066967080b695753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>ad37a247a8fec555d07d4816e932dab6f</anchor>
      <arglist>(const int dst, const int src, const tbox::Pointer&lt; hier::CoarsenOperator &gt; opcoarsen, const hier::IntVector &amp;gcw_to_coarsen, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a367374662e298f39520e05a38c75fc0e</anchor>
      <arglist>(const int dst, const int src, const tbox::Pointer&lt; hier::CoarsenOperator &gt; opcoarsen, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::CoarsenSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>ae3c0faed687cdc0b7e4ed8a98da41998</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; crse_level, tbox::Pointer&lt; hier::PatchLevel &gt; fine_level, xfer::CoarsenPatchStrategy *coarsen_strategy=((xfer::CoarsenPatchStrategy *) NULL), tbox::Pointer&lt; xfer::CoarsenTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::CoarsenTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkConsistency</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a2287c6a98288b7f1584e0881493d91be</anchor>
      <arglist>(tbox::Pointer&lt; xfer::CoarsenSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>adc31c12e9894170c53968fe3bc960778</anchor>
      <arglist>(tbox::Pointer&lt; xfer::CoarsenSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a0ed6def085c21285636d8cbb656cfd80</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenAlgorithm.html</anchorfile>
      <anchor>a6d857e93433bbb25e87041d937728609</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenClasses</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</filename>
    <class kind="class">SAMRAI::xfer::CoarsenClasses::Data</class>
    <member kind="function">
      <type></type>
      <name>CoarsenClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>ae9051a20e94ff7f1ca7d01b918d44db1</anchor>
      <arglist>(bool fill_coarse_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a91b080671d3bb56b6abbf4389db8bb06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a36acdabd25fe41bfcf0bb24223ffc15c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a3f735099ee78c21fef5b2aa7c0b4ff1d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const CoarsenClasses::Data &amp;</type>
      <name>getClassRepresentative</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>aabe77b9d0e52af1449135d128d458357</anchor>
      <arglist>(int equiv_class_index) const </arglist>
    </member>
    <member kind="function">
      <type>CoarsenClasses::Data &amp;</type>
      <name>getCoarsenItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a62cff82536245f6dfb394af45401698c</anchor>
      <arglist>(const int coarsen_item_array_id)</arglist>
    </member>
    <member kind="function">
      <type>tbox::List&lt; int &gt;::Iterator</type>
      <name>getIterator</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a8add11b3667175c9a370943213c71119</anchor>
      <arglist>(int equiv_class_index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertEquivalenceClassItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a22d6a906a6ba0b23adaa365e355c789f</anchor>
      <arglist>(CoarsenClasses::Data &amp;data, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemIsValid</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>ae8f25169be27a96c9f33b68bd1c8eb0f</anchor>
      <arglist>(const CoarsenClasses::Data &amp;data_item, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>classesMatch</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a1efd8b0538ef95cdc38c55a7a827d746</anchor>
      <arglist>(tbox::Pointer&lt; CoarsenClasses &gt; test_classes, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemsAreEquivalent</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a890c6d29f3cb43474de06febeb6ecfaf</anchor>
      <arglist>(const CoarsenClasses::Data &amp;data1, const CoarsenClasses::Data &amp;data2, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getCoarsenItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a67cdc0bdc46b1328c8ef0d3a02e8f8da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increaseCoarsenItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a16c72b0a3704d5839a0ccf32fcf5f9ac</anchor>
      <arglist>(const int size, const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a63613d80a27afced5a7372126a22a40e</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printCoarsenItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses.html</anchorfile>
      <anchor>a1395d30964aa8a0e3914e1841bda69ad</anchor>
      <arglist>(std::ostream &amp;stream, const CoarsenClasses::Data &amp;data) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenClasses::Data</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</filename>
    <member kind="function">
      <type></type>
      <name>Data</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>a572cd6a065737afb43c7cfe0631d9980</anchor>
      <arglist>(tbox::Dimension dim)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_dst</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>a6a3a887bf530b3fdf7919693447104f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>a4d9f52cf01f602690d3bb54b2f9ac3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_fine_bdry_reps_var</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>af483f6b5b55920d2deada7c7a59cdfaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>hier::IntVector</type>
      <name>d_gcw_to_coarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>a402b3b54df1b84d87a49c7734aeb1143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; hier::CoarsenOperator &gt;</type>
      <name>d_opcoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>ab3be9c20094f6aa31447da5477d251f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_class_index</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>aa93213f00b725de406e54fac66e3a5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_tag</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>a345650686361a43e5e92580162047733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; VariableFillPattern &gt;</type>
      <name>d_var_fill_pattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenClasses_1_1Data.html</anchorfile>
      <anchor>aa954aa4b5fd4914c900cbf9f07389827</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenCopyTransaction</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>CoarsenCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>af7ecc45037d3692228556dae6dc1fc45</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; &amp;dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; &amp;src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int coarsen_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>a029039978e22c2b82094395e980bfe83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>a514eb888d0781a518c824397b65f7ad9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>acfacfe649793092aa5aeb781fb529c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>a4d68db7ef36c31da9feec726d009e0a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>a15538ebbd50c38feea2a961dd1f6f9cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>a71b26fb39585bf5c6d71169e8534e936</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>aa0bc4a6b46023860bcf0ceac2399d97a</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>a249bf144cc0cd47a72a4d10b051ced9f</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>ac2df347ef0f82c27b27ec75daba95860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>aeab1ec35935f19d7e06eecf0f70fb31f</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>aebc848263957c1d25dd570306b61b3a0</anchor>
      <arglist>(const CoarsenClasses::Data **coarsen_items, int num_coarsen_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenCopyTransaction.html</anchorfile>
      <anchor>aa805aea9fbc693e0819b0fc8a9e8cb39</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenPatchStrategy</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>abb1e10513053a6b48820649195bfa723</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenPatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>af167813b447b2ff617bd649e597b0ee1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual hier::IntVector</type>
      <name>getCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>af24602748ec09e235ecf81b4f67c91cd</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>a659500fc458f4a76c611592fea297e27</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postprocessCoarsen</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>a8cfc7cf51182a3b1f057b347bbe56d80</anchor>
      <arglist>(hier::Patch &amp;coarse, const hier::Patch &amp;fine, const hier::Box &amp;coarse_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>a1d47efcb8fbd865da84f703681931d94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::IntVector</type>
      <name>getMaxCoarsenOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenPatchStrategy.html</anchorfile>
      <anchor>a615ac4296aab6acf729b96b841d639c5</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenSchedule</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>aa203b3183d2a6e6f8fd7eeb42e818276</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; crse_level, tbox::Pointer&lt; hier::PatchLevel &gt; fine_level, const tbox::Pointer&lt; xfer::CoarsenClasses &gt; coarsen_classes, tbox::Pointer&lt; xfer::CoarsenTransactionFactory &gt; transaction_factory, xfer::CoarsenPatchStrategy *patch_strategy, bool fill_coarse_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>a71aa81747840dccaaab761adaca800c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>af179185c1c844705a77f954b2279f7e9</anchor>
      <arglist>(const tbox::Pointer&lt; xfer::CoarsenClasses &gt; coarsen_classes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>coarsenData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>ad663e099fa2e58911bf05f51a9990564</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; xfer::CoarsenClasses &gt; &amp;</type>
      <name>getEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>a66724abef44449f2ecedc71824bbe3fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>aa77558acd00d2c15fc604870561e18df</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setScheduleGenerationMethod</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenSchedule.html</anchorfile>
      <anchor>a268ca209495df78bed6b91043cb9e1b5</anchor>
      <arglist>(const std::string &amp;method)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::CoarsenTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>CoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>ad95c87efededdf0ba024a678418c5a1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>add18a30109e9ee490f1a8e1cb5e6a3aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>a59c300f1d6a9b4dc08e06664ff2652f5</anchor>
      <arglist>(const CoarsenClasses::Data **coarsen_items, int num_coarsen_items)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsetCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>a71a4cb5c0f08ecaf631bd4c0687ce01c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1CoarsenTransactionFactory.html</anchorfile>
      <anchor>ab9e019e11f37f956c2631414d216e956</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int citem_id) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchInteriorVariableFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</filename>
    <base>SAMRAI::xfer::VariableFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchInteriorVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>a5dd5a6095c9ee20ac20096ba2eccf1c3</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchInteriorVariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>a1af725fd617673aec5e3fb1d79fc74a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>ae70f294cd2c9f419d623a36ab13f033c</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const </arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>aebbf937ee8b8db534038a1cbbb9679fd</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;pdf) const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>a339d98264aa0e0c841c3846cbc33068f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchInteriorVariableFillPattern.html</anchorfile>
      <anchor>a312fe35388cf3e6704c2258d2295b1b3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelBorderAndInteriorFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelBorderAndInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>a35e8965c0db0af4987f675b4a2b82e90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelBorderAndInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>a28f5c440d3c35a249aebc635d1819c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>a128366f7aa2c7a2f43230773916e9d94</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>adeafc372b2c02a451fae6e18a844c229</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>aac84b818206eba4380686ca095253fe3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>abd5e84cb0440a3a24d3502d19a4fcaed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>af3dfa358ddfbd59f89675af03bdcd18f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderAndInteriorFillPattern.html</anchorfile>
      <anchor>a1b6af83e4d028bc10930864b42b05720</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelBorderFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelBorderFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>a7c75cf2dcbcfc4964e3accc0c7ed5477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelBorderFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>ae578a188f5dc759a2400d3269a45b4cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>ae4fc59d824f33753d47c263bcb7900cb</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>a4d778d457f6b2f62fa438daa1a7bf261</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>a973072e6db91ec8ca1b26d3a8eb908fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>ac3836f73d498b174fc4e3d77ff62cee8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>aea267ab493bf606f0508c7fdcf5f1d3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelBorderFillPattern.html</anchorfile>
      <anchor>a8a8265e861edbb2967dc991094348da4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelEnhancedFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelEnhancedFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>a7fdfe17ef6c2355b7098211f4712fe40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelEnhancedFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>a91cec87e3bb22e04a3abd236e82ba28e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>a1ff77a7f23d36d7919d2b8409ada85c2</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>ac152a709c8c96272050d26999dbb8d58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>a97648961fe771a2ef190a478b8735c06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>a1238132aa1ff4a211623b710c4b89dbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>a477bb4d71148be7746d1b5f3427c83c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelEnhancedFillPattern.html</anchorfile>
      <anchor>af8d70aac0ae3a9e57823e91a7b5d640d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; hier::Box &gt;</type>
      <name>BoxVector</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>a65567c6bf7dc60f80bc14c127ee938b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>hier::NeighborhoodSet</type>
      <name>FillSet</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>ae9a5ce60c7198a57e722236c367de825</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PatchLevelFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>a631b7394b6f54cc45d97ef4d993b005c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>a54d7e214debe35d5ec778d8d94b8adc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>a83e7ac262052c9b6745a0bfb7dc49f31</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>afd25d7f827656c9a0e334635ebb921d8</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>computeDestinationFillBoxesOnSourceProc</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>aa315ae3da45781dae77adccf75bce31c</anchor>
      <arglist>(FillSet &amp;dst_fill_boxes_on_src_proc, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>a263fa3d51d663b1fbe85155cc04589f5</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>a77eb44d64117b0a5c9f8bcb81d8e70d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>ad5b76b86df28e03d8379ecc9adfb3096</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFillPattern.html</anchorfile>
      <anchor>aeb7c96c7a257be084a3d629d6b24fa7a</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelFullFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelFullFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>adcb45614299f9093b1a42ca08adabb59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelFullFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>af41799338d47d3beda12e090831cfa72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>a0dbca402b712d579f2419223c75e9e20</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>a54ee9052e18fbefbad834b29783d8710</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationFillBoxesOnSourceProc</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>ab90de0626008ea32cfc7ec23d1aee271</anchor>
      <arglist>(FillSet &amp;dst_fill_boxes_on_src_proc, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>af791a0af409e910f4446aedf1b119747</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>a027072a1cd2532fc01f94c500652c56c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>a6d9bc28edf13bda02e4f3a18d5605602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelFullFillPattern.html</anchorfile>
      <anchor>a03c4d71a06c512069431960db1b6ef21</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::PatchLevelInteriorFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</filename>
    <base>SAMRAI::xfer::PatchLevelFillPattern</base>
    <member kind="function">
      <type></type>
      <name>PatchLevelInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a6d75a742db19b6be3256059a076b288f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PatchLevelInteriorFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a660eed0ab5546f9aefa3ef7e334832e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeFillBoxesAndNeighborhoodSets</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a91b7fd0307520ca74de9669ee038a3d8</anchor>
      <arglist>(hier::BoxLevel &amp;fill_mapped_boxes, hier::Connector &amp;dst_to_fill, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;dst_to_dst, const hier::Connector &amp;dst_to_src, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>needsToCommunicateDestinationFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a0722e2b70a3692c149ce4ce5bd9e19d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeDestinationFillBoxesOnSourceProc</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a3516f60fe6e27e9c466a39d6e62a54a4</anchor>
      <arglist>(FillSet &amp;dst_fill_boxes_on_src_proc, const hier::BoxLevel &amp;dst_mapped_box_level, const hier::Connector &amp;src_to_dst, const hier::IntVector &amp;fill_ghost_width)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doesSourceLevelCommunicateToDestination</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a33abd01d2aa38941a6d6f888b60b4e72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxFillBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>a6aefcbb4ce601d022221f68957c0efaa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingCoarseFineGhosts</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>ab1984bf6dc7b1d45b2605cd9a376b912</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillingEnhancedConnectivityOnly</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1PatchLevelInteriorFillPattern.html</anchorfile>
      <anchor>af3181b06bbe9060f38d6c38348ba107d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineAlgorithm</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a899e7386276118db1fae58fe989b8ef2</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineAlgorithm</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a2b849c00d8ff26f2af7e0b925ec68acf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>acab6737dd24c8fa060cff968beab8b5c</anchor>
      <arglist>(const int dst, const int src, const int scratch, tbox::Pointer&lt; hier::RefineOperator &gt; oprefine, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a98e640c7e4c15ce05d1a2c9c4d21559f</anchor>
      <arglist>(const int dst, const int src, const int src_told, const int src_tnew, const int scratch, tbox::Pointer&lt; hier::RefineOperator &gt; oprefine, tbox::Pointer&lt; hier::TimeInterpolateOperator &gt; optime, tbox::Pointer&lt; VariableFillPattern &gt; var_fill_pattern=(tbox::Pointer&lt; BoxGeometryVariableFillPattern &gt;) NULL)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>aaa1b4bec51a24f1fc0cecdbe6f8d6fcd</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, RefinePatchStrategy *patch_strategy=((RefinePatchStrategy *) NULL), tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a9583f045eaeb0195d996ea51a31cde09</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; level, RefinePatchStrategy *patch_strategy=((RefinePatchStrategy *) NULL), tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a03d1a6fbeb626f8da55fdc3109b6f2e4</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a8e279bfbb1c3927d960b058736b9859f</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a22f8de703a0e46d628559455ce9a6010</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a22cea49814c78ef7b0d61c45de4a5001</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a11efe9d0ff5a3f7d8dfda0266939b7f9</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; xfer::RefineSchedule &gt;</type>
      <name>createSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>af03b17cc174bb696b40dec1f5666cd62</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, const int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, xfer::RefinePatchStrategy *patch_strategy=((xfer::RefinePatchStrategy *) NULL), bool use_time_interpolation=false, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory=tbox::Pointer&lt; xfer::RefineTransactionFactory &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkConsistency</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a7fcc139e5ba2ab3a75a872adecc87e4b</anchor>
      <arglist>(tbox::Pointer&lt; xfer::RefineSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a9416132de016c39c1dffe5606e6bd6ba</anchor>
      <arglist>(tbox::Pointer&lt; xfer::RefineSchedule &gt; schedule) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; RefineClasses &gt; &amp;</type>
      <name>getEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>ad8e8da5b03155a420bf946e1d8669a58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>a0108e2e555951f9c108d7110de5801de</anchor>
      <arglist>(const tbox::Pointer&lt; RefineClasses &gt; refine_classes)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>ad5b3dd5b7ce95409ae957c673a029de7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineAlgorithm.html</anchorfile>
      <anchor>aa1366c45c1deb33db86d8a526fa0e5c8</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineClasses</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineClasses.html</filename>
    <class kind="struct">SAMRAI::xfer::RefineClasses::Data</class>
    <member kind="function">
      <type></type>
      <name>RefineClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a45d86a83c2238e088da096e958aef9d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>ac830b30c32564b1b512707d55c5bc0a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a2ede8b99507fa507b23074c896c2ead7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumberOfRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a7e63445af6fc3cc6abce2dbb61737098</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RefineClasses::Data &amp;</type>
      <name>getClassRepresentative</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>ad5984c69553a87b98b758130ac5eda57</anchor>
      <arglist>(int equiv_class_index) const </arglist>
    </member>
    <member kind="function">
      <type>RefineClasses::Data &amp;</type>
      <name>getRefineItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>acfeb774f69ab674a8c9a9267d95c5749</anchor>
      <arglist>(const int refine_item_array_id)</arglist>
    </member>
    <member kind="function">
      <type>tbox::List&lt; int &gt;::Iterator</type>
      <name>getIterator</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a74b98930f98d1bfaf601795eac19b795</anchor>
      <arglist>(int equiv_class_index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insertEquivalenceClassItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a371487222f90f66062eda3e33d681dc3</anchor>
      <arglist>(RefineClasses::Data &amp;data_item, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL))</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemIsValid</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>ab35df506848f6e2b2373deeb6fd265d7</anchor>
      <arglist>(const RefineClasses::Data &amp;data_item, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>classesMatch</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>af378c121ac8b0c985dd05e141328be7f</anchor>
      <arglist>(tbox::Pointer&lt; RefineClasses &gt; test_classes, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>itemsAreEquivalent</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a3a5bf4cdc38a049f45252b0524015999</anchor>
      <arglist>(const RefineClasses::Data &amp;data1, const RefineClasses::Data &amp;data2, tbox::Pointer&lt; hier::PatchDescriptor &gt; descriptor=tbox::Pointer&lt; hier::PatchDescriptor &gt;(NULL)) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRefineItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a85cbf6370aba29f56a4f112813af409e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>increaseRefineItemArraySize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a4bb51bca877be2c10f3dd5d34345a41b</anchor>
      <arglist>(const int size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a5658ec60efd7a3738220dc8343921cfd</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printRefineItem</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineClasses.html</anchorfile>
      <anchor>a61568ae868aadd05949a64b73335fb68</anchor>
      <arglist>(std::ostream &amp;stream, const RefineClasses::Data &amp;data) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SAMRAI::xfer::RefineClasses::Data</name>
    <filename>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>d_dst</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a36a5f9195fb7feb6894061f26ec11b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>aed8f2a4749c4489ffc71ebbb75bc4ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src_told</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a895225f6c3b1d5a712a28f94fd983f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_src_tnew</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a1bca76ebe24c0a677a138cc8bdbb9b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_scratch</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a5a0044f549ceb1e9a762030d4e5d0cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_fine_bdry_reps_var</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a2283708cc7f6ebb66b1acceebf5b2eea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>d_time_interpolate</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>addcf3baaf6a8b0354682a0a40c7cdb22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; hier::RefineOperator &gt;</type>
      <name>d_oprefine</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>ac1cba92575ce0f544ec87549ff2346d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; hier::TimeInterpolateOperator &gt;</type>
      <name>d_optime</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>af5747e95c512734b4a7784d6cc2d9849</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_class_index</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a73be33f12e7e18cf8f94ea5cbae46949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>d_tag</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>ae1aabb80b1419f72c145b8bed1c8e5eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>tbox::Pointer&lt; VariableFillPattern &gt;</type>
      <name>d_var_fill_pattern</name>
      <anchorfile>structSAMRAI_1_1xfer_1_1RefineClasses_1_1Data.html</anchorfile>
      <anchor>a8bbc9613f0aed2fba6ab0113f57eb236</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineCopyTransaction</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>RefineCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>aa850f498a3f47118a27ef228605c1048</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; &amp;dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; &amp;src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineCopyTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>a7b772cb7b033d131d0c4a74a6076d7d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>a653a89cbbc0d549a6022165de962c6ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>ac3812a95677f504dc5ce8d448a8e50dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>a9da57f6c6f57452c4db184819efa80fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>afa725ec5542c43634e8b53a43dbcd5fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>ae7d6782f71a530d9dd1951903a12d141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>aaecc859700a4d88b9360c42998d9f1bc</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>a7a3e1f013b28d8c3d8091ed4ce274127</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>a4b66940094153878d2d8e1473a0bc9f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>a7b14b4e5ffca654e0039da309e31b625</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>ab184eb491968ab4ae52f90a7280dca33</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineCopyTransaction.html</anchorfile>
      <anchor>ab40a6b54d6038137bea476fbb9897f39</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefinePatchStrategy</name>
    <filename>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</filename>
    <member kind="function">
      <type></type>
      <name>RefinePatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a0371570cc29aa147452332f2fac622b7</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefinePatchStrategy</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a8bc1f8921366d5386a59f9769b289cc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setPhysicalBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>ae6da055f3a0e95bb34761e76eda0744e</anchor>
      <arglist>(hier::Patch &amp;patch, const double fill_time, const hier::IntVector &amp;ghost_width_to_fill)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>fillSingularityBoundaryConditions</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a630b59b4ae0e78fbf6d0002f1c5d4b2c</anchor>
      <arglist>(hier::Patch &amp;patch, const hier::PatchLevel &amp;encon_level, const hier::Connector &amp;dst_to_encon, const double fill_time, const hier::Box &amp;fill_box, const hier::BoundaryBox &amp;boundary_box, const tbox::Pointer&lt; hier::GridGeometry &gt; &amp;grid_geometry)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual hier::IntVector</type>
      <name>getRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a56cd0d6fb3cba93b4fc7b1eb24e170a3</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>preprocessRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a57207582e1411612c159f0629963a793</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postprocessRefine</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a5f9968834fafcaa4ef777893e1300205</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::Box &amp;fine_box, const hier::IntVector &amp;ratio)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>abcbdffc4c66a473aac1e5f3fa773c93d</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>postprocessRefineBoxes</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>afc72fc67f371bf744ba5d31d30240c55</anchor>
      <arglist>(hier::Patch &amp;fine, const hier::Patch &amp;coarse, const hier::BoxContainer &amp;fine_boxes, const hier::IntVector &amp;ratio)</arglist>
    </member>
    <member kind="function">
      <type>const tbox::Dimension &amp;</type>
      <name>getDim</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a2549aad6b325c194a11a8312afa886a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static hier::IntVector</type>
      <name>getMaxRefineOpStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefinePatchStrategy.html</anchorfile>
      <anchor>a3347546b2699d877e3e77c30facd8c2a</anchor>
      <arglist>(const tbox::Dimension &amp;dim)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineSchedule</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineSchedule.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>a0f474e585e648e0458f94e3f995787f6</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; dst_level_fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, const tbox::Pointer&lt; xfer::RefineClasses &gt; refine_classes, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory, xfer::RefinePatchStrategy *patch_strategy, bool use_time_interpolation=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RefineSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>ab13583cd948f8e90a813b0a3c3358c54</anchor>
      <arglist>(tbox::Pointer&lt; PatchLevelFillPattern &gt; dst_level_fill_pattern, tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, int next_coarser_level, tbox::Pointer&lt; hier::PatchHierarchy &gt; hierarchy, const tbox::Pointer&lt; xfer::RefineClasses &gt; refine_classes, tbox::Pointer&lt; xfer::RefineTransactionFactory &gt; transaction_factory, xfer::RefinePatchStrategy *patch_strategy, bool use_time_refinement=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineSchedule</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>a538729ccd7a5aeff75dde0aa18fae725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>a2e17d83d75566c8f5a24c88f2b37aa22</anchor>
      <arglist>(const tbox::Pointer&lt; xfer::RefineClasses &gt; refine_classes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>a9dc2ddd00c0bfe78e4e03db68ea8b4ca</anchor>
      <arglist>(double fill_time, bool do_physical_boundary_fill=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeSourceVector</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>afbbdcbd599dd400b9bba763287b9878e</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateDestinationSpace</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>ad6108f92296259607ef443156a10da90</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector, double fill_time) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateScratchSpace</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>ab92212ecf79d5c227e65c0abad0c405c</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector, tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeDestinationVector</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>aab993653c979da01b949dc9d37eb8cb8</anchor>
      <arglist>(hier::ComponentSelector &amp;allocate_vector) const </arglist>
    </member>
    <member kind="function">
      <type>const tbox::Pointer&lt; RefineClasses &gt; &amp;</type>
      <name>getEquivalenceClasses</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>ad33d22a528c245ca8fbbc2ff592a9a6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const hier::IntVector &amp;</type>
      <name>getBoundaryFillGhostWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>a6be3c79200069651748d481ff1d54db9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineSchedule.html</anchorfile>
      <anchor>aade71fc26d30b523133cbdca65af8c39</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineScheduleConnectorWidthRequestor</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</filename>
    <base>SAMRAI::hier::PatchHierarchy::ConnectorWidthRequestorStrategy</base>
    <member kind="function">
      <type></type>
      <name>RefineScheduleConnectorWidthRequestor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</anchorfile>
      <anchor>a6a8b807fa845e20c59198013b75aaa88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeRequiredConnectorWidths</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</anchorfile>
      <anchor>a52839d3607e479163c917b301dc28a3a</anchor>
      <arglist>(std::vector&lt; hier::IntVector &gt; &amp;self_connector_widths, std::vector&lt; hier::IntVector &gt; &amp;fine_connector_widths, const hier::PatchHierarchy &amp;patch_hierarchy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGhostCellWidthFactor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineScheduleConnectorWidthRequestor.html</anchorfile>
      <anchor>a11bcbba05cda1838eb743b26654617fe</anchor>
      <arglist>(int factor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineTimeTransaction</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</filename>
    <base>SAMRAI::tbox::Transaction</base>
    <member kind="function">
      <type></type>
      <name>RefineTimeTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a2cd548e238c48b978dce2992081c9779</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; &amp;dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; &amp;src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, const hier::Box &amp;box, int refine_item_id)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineTimeTransaction</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a477814cb80ad7b05a90d2d8c7ecc95f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>canEstimateIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>ad1e8dc6622c6ee58d06cd4684b453d33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeIncomingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>af9648f90c27a442c712a4efd9351fcda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual size_t</type>
      <name>computeOutgoingMessageSize</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>ac6cfc46a03057c8a3b071f34b476b5fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSourceProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>ab446534ed0934f6a5f39cf921abb97d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDestinationProcessor</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a3218f0f8626508d5d828c15e91838039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>packStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a1b91d490e6601b50fbae1965b964fbee</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>unpackStream</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>aab889c10344ecb52327bba2db0fbd545</anchor>
      <arglist>(tbox::MessageStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>copyLocalData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a1f29df666510479f8088ea1d6cd15669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printClassData</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a4cb978228f1ab2951763b875c75e7fc2</anchor>
      <arglist>(std::ostream &amp;stream) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>ae49d46bc2849771b6b4426f9e3d24ade</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a6370265650fa9e1b69580ba98b3a3635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTransactionTime</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTimeTransaction.html</anchorfile>
      <anchor>a05bea9cb1748b26adbe64c4261293f34</anchor>
      <arglist>(const double time)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::RefineTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>RefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>a04bad189600320a3e3a4755abc9797a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>a7f3c3cb26660134f1fc9f1e97a4e9293</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>a803249e80086142d84a830fe74e0c12a</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>a9644e3caff8d851f85cf1a008c0bb9ca</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>ad1ed998b7a90783ec092c0025f00fdcc</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const =0</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>abdbb3d56156e0cfdceeccc3372baed1d</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int ritem_id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTransactionTime</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>add2152bd40909ecaed1df67ddf5721b5</anchor>
      <arglist>(double fill_time)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>preprocessScratchSpace</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1RefineTransactionFactory.html</anchorfile>
      <anchor>ab9727ca580044df8806c7885c9d51570</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; level, double fill_time, const hier::ComponentSelector &amp;preprocess_vector) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::StandardCoarsenTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</filename>
    <base>SAMRAI::xfer::CoarsenTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>StandardCoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>a9678a0df8acaf7b7029d58a1331e94eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardCoarsenTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>a2e38c61cd33584eaf7657bdf47216cd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>a5ba1aeaca0b323847bb6aaff82721fb2</anchor>
      <arglist>(const CoarsenClasses::Data **coarsen_items, int num_coarsen_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetCoarsenItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>a772562414bb20481d2430df0a4b0d304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardCoarsenTransactionFactory.html</anchorfile>
      <anchor>a8cbf19300fc96dd525366124e0454491</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int citem_id) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::StandardRefineTransactionFactory</name>
    <filename>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</filename>
    <base>SAMRAI::xfer::RefineTransactionFactory</base>
    <member kind="function">
      <type></type>
      <name>StandardRefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>ab1fd41f9b0f6409365cabe59f0f62422</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StandardRefineTransactionFactory</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>ae1034d2395e5d789ca0a3d059dffefa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>a066d3dd7926ebda599080207722e2706</anchor>
      <arglist>(const RefineClasses::Data **refine_items, int num_refine_items)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetRefineItems</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>a3ae4fddfb3fcb83ef2582b5d796b8051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTransactionTime</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>afb46f04335d742f8ce1304bad325785e</anchor>
      <arglist>(double fill_time)</arglist>
    </member>
    <member kind="function">
      <type>tbox::Pointer&lt; tbox::Transaction &gt;</type>
      <name>allocate</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1StandardRefineTransactionFactory.html</anchorfile>
      <anchor>a4efe663cc1006fd22e0822e0788ce5c3</anchor>
      <arglist>(tbox::Pointer&lt; hier::PatchLevel &gt; dst_level, tbox::Pointer&lt; hier::PatchLevel &gt; src_level, tbox::Pointer&lt; hier::BoxOverlap &gt; overlap, const hier::Box &amp;dst_mapped_box, const hier::Box &amp;src_mapped_box, int ritem_id, const hier::Box &amp;box, bool use_time_interpolation=false) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SAMRAI::xfer::VariableFillPattern</name>
    <filename>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</filename>
    <member kind="function">
      <type></type>
      <name>VariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>a5798acdcc2f30bbe0de2f18e86e89b98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VariableFillPattern</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>a52c444a881557e57374f92a8bb6cd56a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>calculateOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>ac32725e0aba150cb36e43e3f7f748d11</anchor>
      <arglist>(const hier::BoxGeometry &amp;dst_geometry, const hier::BoxGeometry &amp;src_geometry, const hier::Box &amp;dst_patch_box, const hier::Box &amp;src_mask, const hier::Box &amp;fill_box, const bool overwrite_interior, const hier::Transformation &amp;transformation) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tbox::Pointer&lt; hier::BoxOverlap &gt;</type>
      <name>computeFillBoxesOverlap</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>aaa2d2e90f51dbf9e13551c965b3a67a2</anchor>
      <arglist>(const hier::BoxContainer &amp;fill_boxes, const hier::Box &amp;patch_box, const hier::Box &amp;data_box, const hier::PatchDataFactory &amp;patch_data_factory) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const hier::IntVector &amp;</type>
      <name>getStencilWidth</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>ab8e60c226adde9ebfca0bd4a4be6d7b7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getPatternName</name>
      <anchorfile>classSAMRAI_1_1xfer_1_1VariableFillPattern.html</anchorfile>
      <anchor>a4f1e57ff65a99b6079abdfabe94221dd</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
</tagfile>
